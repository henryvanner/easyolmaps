{"version":3,"sources":["webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/easyolmaps/util/index.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/easyolmaps/layer/GeoserverLayer.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/easyolmaps/wfs/index.js","webpack:///./node_modules/easyolmaps/wps/index.js","webpack:///./node_modules/easyolmaps/wps/Builder.js","webpack:///./node_modules/easyolmaps/wms/index.js","webpack:///./node_modules/prismjs/prism.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/reactstrap/es/Container.js","webpack:///./node_modules/reactstrap/es/Row.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/source/common.js","webpack:///./node_modules/ol/source/WMSServerType.js","webpack:///./node_modules/ol/source/TileWMS.js","webpack:///./node_modules/ol/uri.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/format/TextFeature.js","webpack:///./node_modules/ol/format/WKT.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js"],"names":["__webpack_require__","d","__webpack_exports__","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extend","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","extent","i","ii","length","value","opt_extent","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","extendCoordinates","flatCoordinates","offset","end","stride","extendXY","Math","min","max","callback","opt_this","val","call","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Object","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","xs","ys","apply","_boundingExtentXYs","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","clamp","cosh","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","exp","t","mat","n","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","Array","l","m","angleInRadians","PI","angleInDegrees","a","b","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","opt_once","callOnce","addEventListener","evt","bindListener","push","key","indexOf","splice","assign","clear","getValues","var_sources","arguments$1","arguments","TypeError","output","source","hasOwnProperty","object","property","values","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","data","extension","isArray","remove","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","opt_func","opt_strict","compare","every","currentVal","res","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","Projection_Projection","options","this","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","prototype","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","METERS","point","math","__proto__","create","constructor","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","log","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","epsg4326_PROJECTIONS","cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","proj_get","projectionLike","opt_units","pointResolution","getter","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","fromLonLat","opt_projection","proj_transform","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","transforms_get","getTransform","transformExtent","ol_extent","createCanvasContext2D","opt_width","opt_height","canvas","document","createElement","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","reset","setFromArray","scale","translate","compose","invert","tmp_","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","e","f","dx1","dy1","sx","sy","angle","dx2","dy2","det","TRUE","FALSE","VOID","getChangeEventType","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","Event","oldValue","BaseObject","Observable","opt_values","values_","setProperties","get","getKeys","getProperties","notify","eventType","dispatchEvent","PROPERTYCHANGE","opt_silent","unset","changeEventTypeCache","ANIMATING","INTERACTING","IDLE","LOADING","LOADED","EMPTY","ABORT","FEET","PIXELS","TILE_PIXELS","USFEET","stopPropagation","propagationStopped","preventDefault","easeIn","pow","easeOut","inAndOut","linear","transformGeom2D","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_Geometry_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","SimpleGeometry","Geometry","layout","XY","computeExtent","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","toString","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","XYZ","XYZM","getLayoutForStride","changed","rotate","anchor","opt_sy","opt_anchor","XYM","simpleGeometry","opt_dest","z","opt_tileCoord","getKeyZXY","getKey","tileCoord","fromKey","split","map","Number","hash","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getTileRangeForExtentAndZ","getFullTileRange","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","ends","jj","deflateMultiCoordinatesArray","coordinatesss","opt_endss","endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","event","propagate","pendingRemovals","disposeInternal","hasListener","opt_type","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","_math_js__WEBPACK_IMPORTED_MODULE_0__","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","i$1","simplifiedEnds","tolerance","round","quantize","simplifiedEndss","num","opt_size","hasArea","ratio","toSize","UNDEFINED","READY","IMAGE","TILE","VECTOR_TILE","VECTOR","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","transform2D","dest","anchorX","anchorY","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","closestPoint","squaredDelta","maxDelta","isRing","minSquaredDistance","opt_tmpPoint","tmpPoint","NaN","sqrt","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","closestPointXY","closest","flat_area","inflate","simplify","GeometryLayout","getType","GeometryType","intersectsExtent","deflate","geom_SimpleGeometry","fromExtent","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","array","contains","getOrientedFlatCoordinates","opt_right","orient","getEnds","getFlatInteriorPoint","flatCenter","interiorpoint","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","intersectsextent","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_Base_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","handleSourceChange_","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","render","visible","minResolution","maxResolution","transformWithOptions","_util_js__WEBPACK_IMPORTED_MODULE_1__","_proj_js__WEBPACK_IMPORTED_MODULE_2__","FeatureFormat","dataProjection","defaultFeatureProjection","geometry","write","opt_options","transformed","featureProjection","decimals","power","getReadOptions","readProjection","adaptOptions","getLastExtent","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","_extent_js__WEBPACK_IMPORTED_MODULE_0__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_contains_js__WEBPACK_IMPORTED_MODULE_1__","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","delta","coordinate1","coordinate2","cosAngle","sinAngle","disposed_","dispose","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","defineProperty","exports","EasyRequest","url","parameters","dataType","requestOptions","targetURL","URL","searchParams","append","fetch","then","response","json","catch","text","xml","parseXML","exception","querySelector","textContent","trim","error","parseFeatures","geoJson","crs","properties","name","match","_GeoJSON","default","getGeometryWKT","geom","_WKT","_interopRequireDefault","__esModule","DOMParser","parseFromString","_array_js__WEBPACK_IMPORTED_MODULE_0__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_5__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__","_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_8__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__","_flat_length_js__WEBPACK_IMPORTED_MODULE_10__","_flat_segments_js__WEBPACK_IMPORTED_MODULE_11__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","extrapolate","getCoordinateAt","fraction","getLength","getFlatMidpoint","_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","_Point_js__WEBPACK_IMPORTED_MODULE_3__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_5__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__","_math_js__WEBPACK_IMPORTED_MODULE_7__","MultiPoint","appendPoint","getPoint","getPoints","points","twiceArea","linearRingss","disable","none","createSnapToN","createSnapToZero","theta","floor","opt_tolerance","TileProperty","Tile_TileLayer","TileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","LayerType","getPreload","getUseInterimTilesOnError","layer_Layer","tmpTileCoord","TileGrid_TileGrid","zoomFactor","minZoom","resolutions_","resolutions","asserts","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","common","fullTileRanges_","tmpSize_","sizes","TileRange","calculateTileRanges_","forEachTileCoord","zoom","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordExtent","getOrigin","getResolution","getResolutions","getTileCoordChildTileRange","getTileRangeExtent","ol_size","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","ceil","tilecoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","Corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","wrapX","projectionExtent","worldWidth","worldsAway","createXYZ","xyzOptions","proj","gridOptions","half","_TileWMS","_Tile","_wfs","_wps","_wms","GeoserverLayer","lyName","getMapParams","crossOrigin","tileLayerOptions","tlo","TILED","LAYERS","serverType","params","build","GeoserverLayerPrototype","refresh","filter","unfilter","getFilter","setStyle","getStyle","getFeatures","getFeaturesAtCoordinate","countFeatures","getAttributes","getBBOX","groupBy","exportFeatures","_default","getDistance","DEFAULT_RADIUS","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","distance","bearing","lon1","dByR","lat","asin","lon","AssertionError","message","calculateSourceResolution","_dom_js__WEBPACK_IMPORTED_MODULE_0__","_math_js__WEBPACK_IMPORTED_MODULE_2__","_proj_js__WEBPACK_IMPORTED_MODULE_3__","sourceProj","targetProj","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","pixelRatio","targetExtent","triangulation","sources","gutter","opt_renderEdges","context","sourceDataExtent","src","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","image","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","save","beginPath","p0","p1","p2","moveTo","lineTo","clip","restore","strokeStyle","lineWidth","closePath","stroke","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","s1","s2","n1","parseInt","n2","containsTileRange","getSize","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","LRUCache","EventTarget","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","setSize","prune","revision_","on","len","once","un","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","opacity","state_","state","layer","getOpacity","sourceState","getVisible","getMaxResolution","getMinResolution","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getGeometry","style","getId","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","id","ARRAY_BUFFER","JSON","TEXT","XML","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_Geometry_js__WEBPACK_IMPORTED_MODULE_3__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","cloneGeometries","getGeometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_5__","_transform_js__WEBPACK_IMPORTED_MODULE_6__","tmpTransform","extentRevision_","getClosestPoint","opt_closestPoint","intersectsCoordinate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","ret","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","_math_js__WEBPACK_IMPORTED_MODULE_1__","pointX","pointY","cumulativeLengths","o","lo","hi","m0","interpolate","lineStringLength","_LineString_js__WEBPACK_IMPORTED_MODULE_4__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_5__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_6__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_7__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_8__","_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_9__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_10__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__","MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","getInteriorPointOfArray","getInteriorPointsOfMultiArray","flatCenters","flatCentersOffset","intersections","rr","maxSegmentLength","segmentLength","isNaN","interiorPoints","module","rbush","quickselect","maxEntries","format","_maxEntries","_minEntries","_initFormat","findItem","item","items","equalsFn","calcBBox","toBBox","distBBox","children","p","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","multiSelect","left","right","all","_all","search","bbox","result","childBBox","nodesToSearch","collides","load","insert","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","ol_Tile","Tile","interimTile","transition_","transition","transitionStarts_","EventType","getInterimTile","tile","TileState","refreshInterimChain","prev","getTileCoord","setState","getAlpha","time","easing","inTransition","endTransition","getBlankImage","ctx","dom","fillStyle","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","image_","Image","imageListenerKeys_","tileLoadFunction_","unlistenImage_","getImage","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","events","ol_TileCache","TileCache","expireCache","usedTiles","zKey","pruneExceptNewestZ","structs_LRUCache","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","ol_proj","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","bind","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","reproj","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","setTimeout","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","h","createFromTileUrlFunctions","nullTileUrlFunction","adaptAttributions","attributionLike","source_Source","Source","projection_","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","State","wrapX_","getAttributions","getAttributionsCollapsible","getProjection","util","getWrapX","setAttributions","ol_Object","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","cacheSize","tmpSize","tileOptions","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","ol_tilegrid","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","useTile","TileSourceEvent","TileEventType","TileImage_TileImage","UrlTile","TileImage","defaultTileLoadFunction","tileUrlFunction","urls","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","handleTileChange","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","generateTileUrlFunction_","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","exec","charCode","startCharCode","charCodeAt","stopCharCode","fromCharCode","stop","expandUrl","imageTile","XYZ_XYZ","source_TileImage","ATTRIBUTION","OSM","linearRingIsClockwise","edge","linearRingIsOriented","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","MultiPolygon_MultiPolygon","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","getEndss","getFlatInteriorPoints","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","cql_filter","restOfGetFeatureParams","getLayerWFSURL","wmsParams","getParams","conds","request","resultType","typeNames","version","_util","xmlDoc","nof","getAttribute","typename","outputFormat","opts","getNativeOutputFormat","ft","ely","dxfSpecificOptions","getFeaturesParams","layers","format_options","attrs","inlineJSON","window","open","performDataExporting","aggregationAttribute","aggregationFunctions","groupByAttributes","getLayerWPSURL","workspace","aggFncs","fnc","_Builder","WPSInput","WPSLiteralData","gpAttrs","attr","execute","WPSExecute","service","executeNSs","WPSInputReference","complexDataEncoding","mimeType","xlink:href","method","XMLNode","WFSGetFeature","[object Object]","WFSQuery","typeName","WPSComplexData","WPSRawDataOutput","headers","Content-Type","body","getElementsByTagName","lc","uc","parseFloat","xmlns:xsi","xmlns","xmlns:wps","xmlns:wfs","xmlns:ows","xmlns:gml","xmlns:ogc","xmlns:wcs","xmlns:xlink","xsi:schemaLocation","content","attrsLine","identifier","inputDataFormChoice","super","literalData","complexData","restProps","props","query","inputs","updateParams","CQL_FILTER","STYLES","mapView","getView","getFeatureInfoParams","getGetFeatureInfoUrl","getGetFeatureInfoURLAtCoordinate","INFO_FORMAT","Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","encode","tokens","Token","alias","objId","deepClone","visited","v","languages","redef","insertBefore","inside","before","root","grammar","token","newToken","old","DFS","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","element","elements","querySelectorAll","highlightElement","language","test","className","toLowerCase","nodeName","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","postMessage","stringify","immediateClose","highlight","tokenize","matchGrammar","strarr","startPos","oneshot","patterns","pattern","lookbehind","greedy","lookbehindLength","flags","RegExp","pos","str","lastIndex","from","to","delNum","after","args","wrapped","rest","callbacks","matchedStr","tag","classes","attributes","aliases","parse","close","script","currentScript","hasAttribute","readyState","requestAnimationFrame","WorkerGlobalScope","self","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","tagName","includedCdataInside","included-cdata","def","html","mathml","svg","string","css","atrule","rule","important","function","addInlined","style-attr","clike","class-name","keyword","boolean","operator","javascript","regex","function-variable","parameter","constant","template-string","interpolation","interpolation-punctuation","js","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","tex","pre","appendChild","xhr","XMLHttpRequest","onreadystatechange","status","responseText","setAttribute","statusText","send","toolbar","registerButton","href","swap","defaultCompare","quickselectStep","s","sd","newLeft","newRight","factory","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","fluid","bool","cssModule","Container","Tag","defaultProps","noGutters","form","Row","ViewProperty","DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationconstraint","createRotationConstraint","constraints_","constrainResolution","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","animationCallback","Date","now","series","animation","complete","duration","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","calculateCenterZoom","calculateCenterRotate","Boolean","currentCenter","currentResolution","getSizeFromViewport_","metrics","getComputedStyle","constrainCenter","opt_delta","getConstraints","getHints","opt_hints","calculateExtent","getZoomForResolution","setMaxZoom","setMinZoom","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","functions","setResolution","centerOn","position","centerX","centerY","hint","returnValue","DEFAULT_WMS_VERSION","WMSServerType","TileWMS_TileWMS","TileWMS","transparent","params_","v13_","serverType_","hidpi_","hidpi","tmpExtent_","updateV13_","getKeyForParams_","projectionObj","sourceProjectionObj","tileResolution","tileExtent","baseParams","SERVICE","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","dpi","substr","uri","keyParams","encodeURIComponent","qs","appendParams","getObject","format_JSONFeature","JSONFeature","FormatType","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","format_Feature","GeoJSON_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","getText","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","charAt","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","geomType","ctor","WKT_WKT","WKT","splitCollection_","splitCollection","parse_","collection","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","rings","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","CollectionEventType","ADD","REMOVE","Property","CollectionEvent","opt_element","ol_Collection","Collection","unique_","unique","array_","assertUnique_","updateLength_","getArray","insertAt","elem","removeAt","setAt","opt_except","ol_MapEvent","MapEvent","opt_frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","ua","navigator","userAgent","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","clientX","clientY","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","Group_Property","Group","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","ObjectEventType","collectionEvent","ownLayerState","Base","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","ol_transform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","skippedFeatureUids","renderFrame","setLayerGroup","setView","skipFeature","computedStyle","offsetWidth","offsetHeight","unskipFeature","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","display","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_render","rotation_","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","firstIndex","getAngle","ol_Kinetic","interaction_Property","opt_duration","rotateWithoutConstraints","currentRotation","zoomByDelta","zoomWithoutConstraints","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","ol_coordinate","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","ol_Disposable","DragBoxEventType","DragBoxEvent","onBoxEnd","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","DragBox","DragZoom","box_","minArea_","onBoxEnd_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","ImageBase_ImageBase","ImageBase","getPixelRatio","ImageState","ol_ImageCanvas","ImageCanvas","opt_loader","loader_","error_","getError","handleLoad_","err","VectorRenderType","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","measureTextHeight","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","originX","originY","w","alpha","globalAlpha","setTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","normalize","g","asColorLike","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","flat_transform","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","drawRings_","arc","fill","getFill","getStroke","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","maxCacheSize","shared","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","sortByZIndex","state1","state2","layerRendererConstructors","canvas_Map","CanvasMapRenderer","childNodes","composeEvent","clearRect","prepareFrame","composeFrame","numLayers","forEachLayerAtCoordinate","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","getLayer","postCompose","preCompose","layer_","createLoadedTileFinder","tiles","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","updateUsedTiles","manageTilePyramid","currentZ","opt_tileCallback","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","ImageLayer","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","sourceRevision","oversampling","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","childTileRange","tilePixelSize","currentScale","currentTilePixelSize","tileGutter","tilesToDraw","zs","drawTileImage","getTileImage","alphaChanged","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","flat_length","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Circle","Default","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","drawChars_","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styleFunction","dirty","forEachFeatureInExtent","VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","pixelScale","VectorTileLayer","Map_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults"],"mappings":"yGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAAV,EAAAC,EAAAC,EAAA,sBAAAS,IAAAX,EAAAC,EAAAC,EAAA,sBAAAU,IAAAZ,EAAAC,EAAAC,EAAA,sBAAAW,IAAAb,EAAAC,EAAAC,EAAA,sBAAAY,IAAAd,EAAAC,EAAAC,EAAA,sBAAAa,IAAAf,EAAAC,EAAAC,EAAA,sBAAAc,IAAAhB,EAAAC,EAAAC,EAAA,sBAAAe,IAAAjB,EAAAC,EAAAC,EAAA,sBAAAgB,IAAAlB,EAAAC,EAAAC,EAAA,sBAAAiB,IAAAnB,EAAAC,EAAAC,EAAA,sBAAAkB,IAAApB,EAAAC,EAAAC,EAAA,sBAAAmB,IAAArB,EAAAC,EAAAC,EAAA,sBAAAoB,IAAAtB,EAAAC,EAAAC,EAAA,sBAAAqB,IAAAvB,EAAAC,EAAAC,EAAA,sBAAAsB,IAAAxB,EAAAC,EAAAC,EAAA,sBAAAuB,IAAAzB,EAAAC,EAAAC,EAAA,sBAAAwB,IAAA1B,EAAAC,EAAAC,EAAA,sBAAAyB,IAAA3B,EAAAC,EAAAC,EAAA,sBAAA0B,IAAA5B,EAAAC,EAAAC,EAAA,sBAAA2B,IAAA7B,EAAAC,EAAAC,EAAA,sBAAA4B,IAAA9B,EAAAC,EAAAC,EAAA,sBAAA6B,IAAA/B,EAAAC,EAAAC,EAAA,sBAAA8B,IAAAhC,EAAAC,EAAAC,EAAA,sBAAA+B,IAAAjC,EAAAC,EAAAC,EAAA,sBAAAgC,IAAAlC,EAAAC,EAAAC,EAAA,sBAAAiC,IAAAnC,EAAAC,EAAAC,EAAA,sBAAAkC,IAAApC,EAAAC,EAAAC,EAAA,sBAAAmC,IAAArC,EAAAC,EAAAC,EAAA,sBAAAoC,IAAA,IAAAC,EAAAvC,EAAA,KAAAwC,EAAAxC,EAAA,KAAAyC,EAAAzC,EAAA,KAqBO,SAAAG,EAAAuC,GAEP,IADA,IAAAC,EAAAhC,IACAiC,EAAA,EAAAC,EAAAH,EAAAI,OAA0CF,EAAAC,IAAQD,EAClDzB,EAAAwB,EAAAD,EAAAE,IAEA,OAAAD,EA4BO,SAAAvC,EAAAuC,EAAAI,EAAAC,GACP,OAAAA,GACAA,EAAA,GAAAL,EAAA,GAAAI,EACAC,EAAA,GAAAL,EAAA,GAAAI,EACAC,EAAA,GAAAL,EAAA,GAAAI,EACAC,EAAA,GAAAL,EAAA,GAAAI,EACAC,GAEA,CACAL,EAAA,GAAAI,EACAJ,EAAA,GAAAI,EACAJ,EAAA,GAAAI,EACAJ,EAAA,GAAAI,GAaO,SAAA1C,EAAAsC,EAAAK,GACP,OAAAA,GACAA,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,GAEAL,EAAAM,QAWO,SAAA3C,EAAAqC,EAAAO,EAAAC,GACP,IAAAC,EAAAC,EAeA,OAbAD,EADAF,EAAAP,EAAA,GACAA,EAAA,GAAAO,EACGP,EAAA,GAAAO,EACHA,EAAAP,EAAA,GAEA,GASAS,GANAC,EADAF,EAAAR,EAAA,GACAA,EAAA,GAAAQ,EACGR,EAAA,GAAAQ,EACHA,EAAAR,EAAA,GAEA,GAEAU,EAYO,SAAA9C,EAAAoC,EAAAW,GACP,OAAA7C,EAAAkC,EAAAW,EAAA,GAAAA,EAAA,IAgBO,SAAA9C,EAAA+C,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,IACAA,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,GAaO,SAAA9C,EAAAkC,EAAAO,EAAAC,GACP,OAAAR,EAAA,IAAAO,MAAAP,EAAA,IAAAA,EAAA,IAAAQ,MAAAR,EAAA,GAWO,SAAAjC,EAAAiC,EAAAW,GACP,IAAAG,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAgB,EAAAhB,EAAA,GACAiB,EAAAjB,EAAA,GACAO,EAAAI,EAAA,GACAH,EAAAG,EAAA,GACAO,EAAqBpB,EAAA,EAAYqB,QAcjC,OAbAZ,EAAAO,EACAI,GAAkCpB,EAAA,EAAYsB,KAC3Cb,EAAAS,IACHE,GAAkCpB,EAAA,EAAYuB,OAE9Cb,EAAAO,EACAG,GAAkCpB,EAAA,EAAYwB,MAC3Cd,EAAAS,IACHC,GAAkCpB,EAAA,EAAYyB,OAE9CL,IAAuBpB,EAAA,EAAYqB,UACnCD,EAAmBpB,EAAA,EAAY0B,cAE/BN,EASO,SAAAlD,IACP,OAAAyD,mBAaO,SAAAxD,EAAA6C,EAAAC,EAAAC,EAAAC,EAAAZ,GACP,OAAAA,GACAA,EAAA,GAAAS,EACAT,EAAA,GAAAU,EACAV,EAAA,GAAAW,EACAX,EAAA,GAAAY,EACAZ,GAEA,CAAAS,EAAAC,EAAAC,EAAAC,GAUO,SAAA/C,EAAAmC,GACP,OAAApC,EACAwD,kBAAApB,GASO,SAAAlC,EAAAwC,EAAAN,GACP,IAAAE,EAAAI,EAAA,GACAH,EAAAG,EAAA,GACA,OAAA1C,EAAAsC,EAAAC,EAAAD,EAAAC,EAAAH,GASO,SAAAjC,EAAA2B,EAAAM,GAEP,OAAAqB,EADAxD,EAAAmC,GACAN,GAYO,SAAA1B,EAAAsD,EAAAC,EAAAC,EAAAC,EAAAzB,GAEP,OAAA5B,EADAP,EAAAmC,GACAsB,EAAAC,EAAAC,EAAAC,GAqBO,SAAAxD,EAAAsC,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAWO,SAAAtC,EAAAqC,EAAAC,GAaP,OAZAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAD,EAQO,SAAApC,EAAAwB,EAAAW,GACPA,EAAA,GAAAX,EAAA,KACAA,EAAA,GAAAW,EAAA,IAEAA,EAAA,GAAAX,EAAA,KACAA,EAAA,GAAAW,EAAA,IAEAA,EAAA,GAAAX,EAAA,KACAA,EAAA,GAAAW,EAAA,IAEAA,EAAA,GAAAX,EAAA,KACAA,EAAA,GAAAW,EAAA,IAUO,SAAAe,EAAA1B,EAAAD,GACP,QAAAE,EAAA,EAAAC,EAAAH,EAAAI,OAA0CF,EAAAC,IAAQD,EAClDzB,EAAAwB,EAAAD,EAAAE,IAEA,OAAAD,EAYO,SAAAvB,EAAAuB,EAAA2B,EAAAC,EAAAC,EAAAC,GACP,KAAQF,EAAAC,EAAcD,GAAAE,EACtBC,EAAA/B,EAAA2B,EAAAC,GAAAD,EAAAC,EAAA,IAEA,OAAA5B,EAsBO,SAAA+B,EAAA/B,EAAAO,EAAAC,GACPR,EAAA,GAAAgC,KAAAC,IAAAjC,EAAA,GAAAO,GACAP,EAAA,GAAAgC,KAAAC,IAAAjC,EAAA,GAAAQ,GACAR,EAAA,GAAAgC,KAAAE,IAAAlC,EAAA,GAAAO,GACAP,EAAA,GAAAgC,KAAAE,IAAAlC,EAAA,GAAAQ,GAcO,SAAA9B,EAAAsB,EAAAmC,EAAAC,GACP,IAAAC,EAEA,OADAA,EAAAF,EAAAG,KAAAF,EAAAxD,EAAAoB,KAEAqC,GAEAA,EAAAF,EAAAG,KAAAF,EAAAvD,EAAAmB,KAEAqC,GAEAA,EAAAF,EAAAG,KAAAF,EAAAhD,EAAAY,KAEAqC,GAEAA,EAAAF,EAAAG,KAAAF,EAAAjD,EAAAa,OAIA,EAUO,SAAArB,EAAAqB,GACP,IAAAuC,EAAA,EAIA,OAHAhD,EAAAS,KACAuC,EAAAlD,EAAAW,GAAAf,EAAAe,IAEAuC,EAUO,SAAA3D,EAAAoB,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAnB,EAAAmB,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAlB,EAAAkB,GACP,QAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAUO,SAAAjB,EAAAiB,EAAAwC,GACP,IAAA7B,EAYA,OAXA6B,IAAiB3C,EAAA,EAAM4C,YACvB9B,EAAA/B,EAAAoB,GACGwC,IAAqB3C,EAAA,EAAM6C,aAC9B/B,EAAA9B,EAAAmB,GACGwC,IAAqB3C,EAAA,EAAM8C,SAC9BhC,EAAAxB,EAAAa,GACGwC,IAAqB3C,EAAA,EAAM+C,UAC9BjC,EAAAvB,EAAAY,GAEI6C,OAAAjD,EAAA,EAAAiD,EAAM,MAEVlC,EA0BO,SAAA3B,EAAA8D,EAAAC,EAAAC,EAAAC,EAAA5C,GACP,IAAAI,EAAAsC,EAAAE,EAAA,KACAvC,EAAAqC,EAAAE,EAAA,KACAC,EAAAlB,KAAAmB,IAAAH,GACAI,EAAApB,KAAAqB,IAAAL,GACAM,EAAA7C,EAAAyC,EACAK,EAAA9C,EAAA2C,EACAI,EAAA9C,EAAAwC,EACAO,EAAA/C,EAAA0C,EACA7C,EAAAuC,EAAA,GACAtC,EAAAsC,EAAA,GACAY,EAAAnD,EAAA+C,EAAAG,EACAE,EAAApD,EAAA+C,EAAAG,EACAG,EAAArD,EAAA+C,EAAAG,EACAI,EAAAtD,EAAA+C,EAAAG,EACAK,EAAAtD,EAAA+C,EAAAC,EACAO,EAAAvD,EAAA+C,EAAAC,EACAQ,EAAAxD,EAAA+C,EAAAC,EACAS,EAAAzD,EAAA+C,EAAAC,EACA,OAAAvF,EACA+D,KAAAC,IAAAyB,EAAAC,EAAAC,EAAAC,GAAA7B,KAAAC,IAAA6B,EAAAC,EAAAC,EAAAC,GACAjC,KAAAE,IAAAwB,EAAAC,EAAAC,EAAAC,GAAA7B,KAAAE,IAAA4B,EAAAC,EAAAC,EAAAC,GACA5D,GAUO,SAAApB,EAAAe,GACP,OAAAA,EAAA,GAAAA,EAAA,GAuBO,SAAAd,EAAA0B,EAAAC,EAAAR,GACP,IAAA6D,EAAA7D,GA1XA,CAAAoB,SAAA,UAmZA,OAxBAnC,EAAAsB,EAAAC,IACAD,EAAA,GAAAC,EAAA,GACAqD,EAAA,GAAAtD,EAAA,GAEAsD,EAAA,GAAArD,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAqD,EAAA,GAAAtD,EAAA,GAEAsD,EAAA,GAAArD,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAqD,EAAA,GAAAtD,EAAA,GAEAsD,EAAA,GAAArD,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAqD,EAAA,GAAAtD,EAAA,GAEAsD,EAAA,GAAArD,EAAA,IAGA3C,EAAAgG,GAEAA,EA8BO,SAAA/E,EAAAa,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAZ,EAAAY,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAX,EAAAW,GACP,OAAAA,EAAA,GAAAA,EAAA,GAWO,SAAAV,EAAAsB,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,GAUO,SAAAtB,EAAAS,GACP,OAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GASO,SAAAR,EAAAQ,EAAAK,GACP,OAAAA,GACAA,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,EAAA,GAAAL,EAAA,GACAK,GAEAL,EASO,SAAAP,EAAAO,EAAAI,GACP,IAAA+D,GAAAnE,EAAA,GAAAA,EAAA,OAAAI,EAAA,GACAgE,GAAApE,EAAA,GAAAA,EAAA,OAAAI,EAAA,GACAJ,EAAA,IAAAmE,EACAnE,EAAA,IAAAmE,EACAnE,EAAA,IAAAoE,EACApE,EAAA,IAAAoE,EAYO,SAAA1E,EAAAM,EAAAqE,EAAAxC,GACP,IAAAvC,GAAA,EACAgF,EAAAvG,EAAAiC,EAAAqE,GACAE,EAAAxG,EAAAiC,EAAA6B,GACA,GAAAyC,IAAmBxE,EAAA,EAAY0B,cAC/B+C,IAAiBzE,EAAA,EAAY0B,aAC7BlC,GAAA,MACG,CACH,IASAiB,EAAAC,EATAM,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAgB,EAAAhB,EAAA,GACAiB,EAAAjB,EAAA,GACAwE,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAA7C,EAAA,GACA8C,EAAA9C,EAAA,GACA+C,GAAAD,EAAAF,IAAAC,EAAAF,GAEAD,EAAoBzE,EAAA,EAAYyB,SAChC+C,EAAqBxE,EAAA,EAAYyB,SAGjCjC,GADAiB,EAAAmE,GAAAC,EAAA1D,GAAA2D,IACA9D,GAAAP,GAAAS,GAEA1B,KAAAiF,EAAmCzE,EAAA,EAAYuB,QAC/CiD,EAAqBxE,EAAA,EAAYuB,QAGjC/B,GADAkB,EAAAmE,GAAAD,EAAA1D,GAAA4D,IACA7D,GAAAP,GAAAS,GAEA3B,KAAAiF,EAAmCzE,EAAA,EAAYwB,QAC/CgD,EAAqBxE,EAAA,EAAYwB,QAGjChC,GADAiB,EAAAmE,GAAAC,EAAA5D,GAAA6D,IACA9D,GAAAP,GAAAS,GAEA1B,KAAAiF,EAAmCzE,EAAA,EAAYsB,OAC/CkD,EAAqBxE,EAAA,EAAYsB,OAGjC9B,GADAkB,EAAAmE,GAAAD,EAAA5D,GAAA8D,IACA7D,GAAAP,GAAAS,GAIA,OAAA3B,EAaO,SAAAK,EAAAK,EAAA6E,EAAAxE,GACP,IAAAN,EAAA,CACAC,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IAKA,OAHA6E,EAAA9E,IAAA,GAlvBA,SAAA+E,EAAAC,EAAA1E,GAKA,OAAApC,EAJA+D,KAAAC,IAAA+C,MAAA,KAAAF,GACA9C,KAAAC,IAAA+C,MAAA,KAAAD,GACA/C,KAAAE,IAAA8C,MAAA,KAAAF,GACA9C,KAAAE,IAAA8C,MAAA,KAAAD,GACA1E,GAgvBA4E,CAFA,CAAAlF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,CAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAM,kCCnxBO,SAAA6E,IACP,OAAsB,WACtB,UAAAC,MAAA,kCADsB,GARtB9H,EAAAC,EAAAC,EAAA,sBAAA2H,IAAA7H,EAAAC,EAAAC,EAAA,sBAAA6H,IAAA/H,EAAAC,EAAAC,EAAA,sBAAA8H,IA8CA,IAAAC,EAAA,EAYO,SAAAF,EAAAG,GACP,OAAAA,EAAAC,SAAAD,EAAAC,OAAAC,SAAAH,IAOO,IAAAD,EAAA,uCClEPhI,EAAAC,EAAAC,EAAA,sBAAAmI,IAAArI,EAAAC,EAAAC,EAAA,sBAAAoI,IAAAtI,EAAAC,EAAAC,EAAA,sBAAAqI,IAAAvI,EAAAC,EAAAC,EAAA,sBAAAsI,IAAAxI,EAAAC,EAAAC,EAAA,sBAAAuI,IAAAzI,EAAAC,EAAAC,EAAA,sBAAAwI,IAAA1I,EAAAC,EAAAC,EAAA,sBAAAyI,IAAA3I,EAAAC,EAAAC,EAAA,sBAAA0I,IAAA5I,EAAAC,EAAAC,EAAA,sBAAA2I,IAAA7I,EAAA,KAaO,SAAAqI,EAAAtF,EAAA6B,EAAAC,GACP,OAAAF,KAAAC,IAAAD,KAAAE,IAAA9B,EAAA6B,GAAAC,GAaO,IAAAyD,EAIP,SAAA3D,KAEAA,KAAA2D,KAGA,SAAApF,GACA,IAAAC,EAA8B,KAAA2F,IAAA5F,GAC9B,OAAAC,EAAA,EAAAA,GAAA,GA4BO,SAAAoF,EAAArF,EAAAC,EAAAmD,EAAAI,EAAAH,EAAAI,GACP,IAAAvD,EAAAmD,EAAAD,EACAjD,EAAAsD,EAAAD,EACA,OAAAtD,GAAA,IAAAC,EAAA,CACA,IAAA0F,IAAA7F,EAAAoD,GAAAlD,GAAAD,EAAAuD,GAAArD,IAAAD,IAAAC,KACA0F,EAAA,GACAzC,EAAAC,EACAG,EAAAC,GACKoC,EAAA,IACLzC,GAAAlD,EAAA2F,EACArC,GAAArD,EAAA0F,GAGA,OAAAP,EAAAtF,EAAAC,EAAAmD,EAAAI,GAYO,SAAA8B,EAAAlC,EAAAI,EAAAH,EAAAI,GACP,IAAAvD,EAAAmD,EAAAD,EACAjD,EAAAsD,EAAAD,EACA,OAAAtD,IAAAC,IAWO,SAAAoF,EAAAO,GAGP,IAFA,IAAAC,EAAAD,EAAAlG,OAEAF,EAAA,EAAiBA,EAAAqG,EAAOrG,IAAA,CAIxB,IAFA,IAAAsG,EAAAtG,EACAuG,EAAAxE,KAAAyE,IAAAJ,EAAApG,OACAyG,EAAAzG,EAAA,EAAuByG,EAAAJ,EAAOI,IAAA,CAC9B,IAAAC,EAAA3E,KAAAyE,IAAAJ,EAAAK,GAAAzG,IACA0G,EAAAH,IACAA,EAAAG,EACAJ,EAAAG,GAIA,OAAAF,EACA,YAIA,IAAAI,EAAAP,EAAAE,GACAF,EAAAE,GAAAF,EAAApG,GACAoG,EAAApG,GAAA2G,EAGA,QAAAC,EAAA5G,EAAA,EAAuB4G,EAAAP,EAAOO,IAE9B,IADA,IAAAC,GAAAT,EAAAQ,GAAA5G,GAAAoG,EAAApG,MACA8G,EAAA9G,EAAqB8G,EAAAT,EAAA,EAAWS,IAChC9G,GAAA8G,EACAV,EAAAQ,GAAAE,GAAA,EAEAV,EAAAQ,GAAAE,IAAAD,EAAAT,EAAApG,GAAA8G,GAQA,IADA,IAAAxG,EAAA,IAAAyG,MAAAV,GACAW,EAAAX,EAAA,EAAqBW,GAAA,EAAQA,IAAA,CAC7B1G,EAAA0G,GAAAZ,EAAAY,GAAAX,GAAAD,EAAAY,MACA,QAAAC,EAAAD,EAAA,EAAuBC,GAAA,EAAQA,IAC/Bb,EAAAa,GAAAZ,IAAAD,EAAAa,GAAAD,GAAA1G,EAAA0G,GAGA,OAAA1G,EAUO,SAAAwF,EAAAoB,GACP,WAAAA,EAAAnF,KAAAoF,GAUO,SAAApB,EAAAqB,GACP,OAAAA,EAAArF,KAAAoF,GAAA,IAUO,SAAAnB,EAAAqB,EAAAC,GACP,IAAAb,EAAAY,EAAAC,EACA,OAAAb,EAAAa,EAAA,EAAAb,EAAAa,EAAAb,EAWO,SAAAR,EAAAoB,EAAAC,EAAAhH,GACP,OAAA+G,EAAA/G,GAAAgH,EAAAD,kCC5Le/J,EAAA,GAMfiK,OAAA,SAEAC,MAAA,QACAC,YAAA,cACAC,MAAA,QACAC,SAAA,WACAC,UAAA,YACAC,SAAA,WACAC,KAAA,OACAC,MAAA,QACAC,QAAA,UACAC,SAAA,WACAC,KAAA,OACAC,UAAA,YACAC,UAAA,YACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,cAAA,gBACAC,OAAA,SACAC,WAAA,aACAC,UAAA,YACAC,SAAA,WACAC,MAAA,0CCrCAzL,EAAAC,EAAAC,EAAA,sBAAAwL,IAAA1L,EAAAC,EAAAC,EAAA,sBAAAyL,IAAA3L,EAAAC,EAAAC,EAAA,sBAAA0L,IAAA5L,EAAAC,EAAAC,EAAA,sBAAA2L,IAAA7L,EAAAC,EAAAC,EAAA,sBAAA4L,IAAA,IAAAC,EAAA/L,EAAA,KA0DO,SAAAgM,EAAAC,EAAAC,EAAAnH,EAAAoH,GAEP,IADA,IAAAC,EACAxJ,EAAA,EAAAC,EAAAoJ,EAAAnJ,OAAwCF,EAAAC,IAAQD,EAEhD,IADAwJ,EAAAH,EAAArJ,IACAsJ,cACAE,EAAAC,SAAAtH,EAIA,OAHAoH,IACAC,EAAAE,YAAA1J,GAEAwJ,EAYO,SAAAG,EAAAC,EAAAC,GACP,IAAAC,EAAAC,EAAAH,GACA,OAAAE,IAAAD,QAAAG,EAWA,SAAAD,EAAAH,EAAAK,GACA,IAAAH,EAAAF,EAAAM,MAIA,OAHAJ,GAAAG,IACAH,EAAAF,EAAAM,MAAA,IAEAJ,EAoBA,SAAAK,EAAAP,EAAAC,GACA,IAAAR,EAAAM,EAAAC,EAAAC,GACA,GAAAR,EAAA,CACA,QAAArJ,EAAA,EAAAC,EAAAoJ,EAAAnJ,OAA0CF,EAAAC,IAAQD,EACI,EACtDoK,oBAAAP,EAAAR,EAAArJ,GAAAqK,eACMzH,OAAAuG,EAAA,EAAAvG,CAAKyG,EAAArJ,IAEXqJ,EAAAnJ,OAAA,EACA,IAAA4J,EAAAC,EAAAH,GACAE,WACAA,EAAAD,GACA,IAAAjH,OAAA0H,KAAAR,GAAA5J,QAxBA,SAAA0J,UACAA,EAAAM,MAwBAK,CAAAX,KAsBO,SAAAd,EAAAc,EAAAC,EAAAP,EAAAnH,EAAAqI,GACP,IAAAV,EAAAC,EAAAH,GAAA,GACAP,EAAAS,EAAAD,GACAR,IACAA,EAAAS,EAAAD,GAAA,IAEA,IAAAL,EAAAJ,EAAAC,EAAAC,EAAAnH,GAAA,GAmBA,OAlBAqH,EACAgB,IAEAhB,EAAAiB,UAAA,IAGAjB,EAAuC,CACvCC,OAAAtH,EACAsI,WAAAD,EACAlB,WACAM,SACAC,QAEoD,EACpDa,iBAAAb,EA5IO,SAAAL,GACP,IAAAa,EAAA,SAAAM,GACA,IAAArB,EAAAE,EAAAF,SACAG,EAAAD,EAAAC,QAAAD,EAAAI,OAIA,OAHAJ,EAAAiB,UACAxB,EAAAO,GAEAF,EAAAjH,KAAAoH,EAAAkB,IAGA,OADAnB,EAAAa,gBACAA,EAkIAO,CAAApB,IACAH,EAAAwB,KAAArB,IAGAA,EAwBO,SAAAT,EAAAa,EAAAC,EAAAP,EAAAnH,GACP,OAAA2G,EAAAc,EAAAC,EAAAP,EAAAnH,GAAA,GAiBO,SAAA6G,EAAAY,EAAAC,EAAAP,EAAAnH,GACP,IAAAkH,EAAAM,EAAAC,EAAAC,GACA,GAAAR,EAAA,CACA,IAAAG,EAAAJ,EAAAC,EAAAC,EAAAnH,GAAA,GACAqH,GACAP,EAAAO,IAeO,SAAAP,EAAA6B,GACP,GAAAA,KAAAlB,OAAA,CACoDkB,EAAA,OACpDV,oBAAAU,EAAAjB,KAAAiB,EAAAT,eACA,IAAAhB,EAAAM,EAAAmB,EAAAlB,OAAAkB,EAAAjB,MACA,GAAAR,EAAA,CACA,IAAArJ,EAAA,gBAAA8K,IAAApB,YAAAL,EAAA0B,QAAAD,IACA,IAAA9K,GACAqJ,EAAA2B,OAAAhL,EAAA,GAEA,IAAAqJ,EAAAnJ,QACAiK,EAAAW,EAAAlB,OAAAkB,EAAAjB,MAGIjH,OAAAuG,EAAA,EAAAvG,CAAKkI,IAWF,SAAA5B,EAAAU,GACP,IAAAE,EAAAC,EAAAH,GACA,GAAAE,EACA,QAAAD,KAAAC,EACAK,EAAAP,EAAAC,kCC5QAzM,EAAAC,EAAAC,EAAA,sBAAA2N,IAAA7N,EAAAC,EAAAC,EAAA,sBAAA4N,IAAA9N,EAAAC,EAAAC,EAAA,sBAAA6N,IAAA/N,EAAAC,EAAAC,EAAA,sBAAAgC,IAcO,IAAA2L,EAAA,mBAAArI,OAAAqI,OAAArI,OAAAqI,OAAA,SAAArB,EAAAwB,GACP,IAAAC,EAAAC,UAEA,GAAA1B,QACA,UAAA2B,UAAA,8CAIA,IADA,IAAAC,EAAA5I,OAAAgH,GACA5J,EAAA,EAAAC,EAAAqL,UAAApL,OAAwCF,EAAAC,IAAQD,EAAA,CAChD,IAAAyL,EAAAJ,EAAArL,GACA,GAAAyL,QACA,QAAAX,KAAAW,EACAA,EAAAC,eAAAZ,KACAU,EAAAV,GAAAW,EAAAX,IAKA,OAAAU,GAQO,SAAAN,EAAAS,GACP,QAAAC,KAAAD,SACAA,EAAAC,GAWO,SAAAT,EAAAQ,GACP,IAAAE,EAAA,GACA,QAAAD,KAAAD,EACAE,EAAAhB,KAAAc,EAAAC,IAEA,OAAAC,EASO,SAAAvM,EAAAqM,GACP,IAAAC,EACA,IAAAA,KAAAD,EACA,SAEA,OAAAC,kCC1DO,SAAAE,EAAAC,EAAAC,EAAAC,GAOP,IANA,IAAAC,EAAAC,EACAC,EAAAH,GAAAI,EACAC,EAAA,EACAC,EAAAR,EAAA7L,OACAsM,GAAA,EAEAF,EAAAC,IAIAJ,GAAAC,EAAAL,EADAG,EAAAI,GAAAC,EAAAD,GAAA,IACAN,IAEA,EACAM,EAAAJ,EAAA,GAGAK,EAAAL,EACAM,GAAAL,GAKA,OAAAK,EAAAF,KAWO,SAAAD,EAAAhF,EAAAC,GACP,OAAAD,EAAAC,EAAA,EAAAD,EAAAC,GAAA,IAUO,SAAAmF,EAAAC,EAAApH,GACP,OAAAoH,EAAA3B,QAAAzF,IAAA,EAYO,SAAAqH,EAAAD,EAAA9C,EAAAgD,GACP,IAMA5M,EANAqG,EAAAqG,EAAAxM,OACA,GAAAwM,EAAA,IAAA9C,EACA,SACG,GAAAA,GAAA8C,EAAArG,EAAA,GACH,OAAAA,EAAA,EAGA,GAAAuG,EAAA,GACA,IAAA5M,EAAA,EAAiBA,EAAAqG,IAAOrG,EACxB,GAAA0M,EAAA1M,GAAA4J,EACA,OAAA5J,EAAA,OAGK,GAAA4M,EAAA,GACL,IAAA5M,EAAA,EAAiBA,EAAAqG,IAAOrG,EACxB,GAAA0M,EAAA1M,IAAA4J,EACA,OAAA5J,OAIA,IAAAA,EAAA,EAAiBA,EAAAqG,IAAOrG,EAAA,CACxB,GAAA0M,EAAA1M,IAAA4J,EACA,OAAA5J,EACS,GAAA0M,EAAA1M,GAAA4J,EACT,OAAA8C,EAAA1M,EAAA,GAAA4J,IAAA8C,EAAA1M,GACAA,EAAA,EAEAA,EAKA,OAAAqG,EAAA,EAUO,SAAAwG,EAAAH,EAAAI,EAAAlL,GACP,KAAAkL,EAAAlL,GAAA,CACA,IAAA+E,EAAA+F,EAAAI,GACAJ,EAAAI,GAAAJ,EAAA9K,GACA8K,EAAA9K,GAAA+E,IACAmG,IACAlL,GAUO,SAAAtD,EAAAoO,EAAAK,GAGP,IAFA,IAAAC,EAAAjG,MAAAkG,QAAAF,KAAA,CAAAA,GACA7M,EAAA8M,EAAA9M,OACAF,EAAA,EAAiBA,EAAAE,EAAYF,IAC7B0M,IAAAxM,QAAA8M,EAAAhN,GAWO,SAAAkN,EAAAR,EAAApH,GACP,IAAAtF,EAAA0M,EAAA3B,QAAAzF,GACAkH,EAAAxM,GAAA,EAIA,OAHAwM,GACAE,EAAA1B,OAAAhL,EAAA,GAEAwM,EA6BO,SAAAnO,EAAA8O,EAAAC,GACP,IAAAC,EAAAF,EAAAjN,OACA,GAAAmN,IAAAD,EAAAlN,OACA,SAEA,QAAAF,EAAA,EAAiBA,EAAAqN,EAAUrN,IAC3B,GAAAmN,EAAAnN,KAAAoN,EAAApN,GACA,SAGA,SAWO,SAAAsN,EAAAZ,EAAAa,GACP,IAEAvN,EAFAE,EAAAwM,EAAAxM,OACAyG,EAAAI,MAAA2F,EAAAxM,QAEA,IAAAF,EAAA,EAAaA,EAAAE,EAAYF,IACzB2G,EAAA3G,GAAA,CAAcwN,MAAAxN,EAAAG,MAAAuM,EAAA1M,IAKd,IAHA2G,EAAA8G,KAAA,SAAApG,EAAAC,GACA,OAAAiG,EAAAlG,EAAAlH,MAAAmH,EAAAnH,QAAAkH,EAAAmG,MAAAlG,EAAAkG,QAEAxN,EAAA,EAAaA,EAAA0M,EAAAxM,OAAgBF,IAC7B0M,EAAA1M,GAAA2G,EAAA3G,GAAAG,MA0BO,SAAAuN,EAAAhB,EAAAiB,EAAAC,GACP,IAAAC,EAAAF,GAAAtB,EACA,OAAAK,EAAAoB,MAAA,SAAAC,EAAAP,GACA,OAAAA,EACA,SAEA,IAAAQ,EAAAH,EAAAnB,EAAAc,EAAA,GAAAO,GACA,QAAAC,EAAA,GAAAJ,GAAA,IAAAI,KAtPA5Q,EAAAC,EAAAC,EAAA,sBAAAwO,IAAA1O,EAAAC,EAAAC,EAAA,sBAAA+O,IAAAjP,EAAAC,EAAAC,EAAA,sBAAAmP,IAAArP,EAAAC,EAAAC,EAAA,sBAAAqP,IAAAvP,EAAAC,EAAAC,EAAA,sBAAAuP,IAAAzP,EAAAC,EAAAC,EAAA,sBAAAgB,IAAAlB,EAAAC,EAAAC,EAAA,sBAAA4P,IAAA9P,EAAAC,EAAAC,EAAA,sBAAAe,IAAAjB,EAAAC,EAAAC,EAAA,sBAAAgQ,IAAAlQ,EAAAC,EAAAC,EAAA,sBAAAoQ,mCCUepQ,EAAA,GACf2Q,MAAA,QACAC,YAAA,aACAC,YAAA,aACAC,QAAA,UACAC,YAAA,aACAC,kBAAA,kBACAC,cAAA,eACAC,oBAAA,qBACAC,OAAA,wCCnBArR,EAAAC,EAAAC,EAAA,sBAAAoR,IAAA,IAAAC,EAAAvR,EAAA,KASO,SAAAsR,EAAAE,EAAAC,GACP,IAAAD,EACA,UAAcD,EAAA,EAAcE,0EC0CxBC,EAAU,SAAAC,GAKdC,KAAAC,MAAAF,EAAAG,KASAF,KAAAG,OAAwDJ,EAAA,MASxDC,KAAAI,aAAApF,IAAA+E,EAAAhP,OAAAgP,EAAAhP,OAAA,KASAiP,KAAAK,kBAAArF,IAAA+E,EAAAO,YACAP,EAAAO,YAAA,KAMAN,KAAAO,sBAAAvF,IAAA+E,EAAAS,gBACAT,EAAAS,gBAAA,MAMAR,KAAAS,aAAAzF,IAAA+E,EAAAW,QAAAX,EAAAW,OAMAV,KAAAW,aAAAX,KAAAS,UAAAT,KAAAI,SAMAJ,KAAAY,wBAAAb,EAAAc,mBAMAb,KAAAc,iBAAA,KAMAd,KAAAe,eAAAhB,EAAAiB,eAMAlB,EAAUmB,UAAAC,SAAA,WACV,OAAAlB,KAAAW,WAQAb,EAAUmB,UAAAE,QAAA,WACV,OAAAnB,KAAAC,OAQAH,EAAUmB,UAAAG,UAAA,WACV,OAAApB,KAAAI,SAQAN,EAAUmB,UAAAI,SAAA,WACV,OAAArB,KAAAG,QAUAL,EAAUmB,UAAAK,iBAAA,WACV,OAAAtB,KAAAe,gBAAgCQ,EAAA,EAAevB,KAAAG,SAQ/CL,EAAUmB,UAAAO,eAAA,WACV,OAAAxB,KAAAK,cAcAP,EAAUmB,UAAAQ,mBAAA,WACV,OAAAzB,KAAAO,kBAQAT,EAAUmB,UAAAS,SAAA,WACV,OAAA1B,KAAAS,SAQAX,EAAUmB,UAAAU,UAAA,SAAAjB,GACVV,KAAAS,QAAAC,EACAV,KAAAW,aAAAD,IAAAV,KAAAI,UAMAN,EAAUmB,UAAAW,mBAAA,WACV,OAAA5B,KAAAc,kBAMAhB,EAAUmB,UAAAY,mBAAA,SAAAC,GACV9B,KAAAc,iBAAAgB,GAQAhC,EAAUmB,UAAAc,UAAA,SAAAhR,GACViP,KAAAI,QAAArP,EACAiP,KAAAW,aAAAX,KAAAS,UAAA1P,IASA+O,EAAUmB,UAAAe,eAAA,SAAA1B,GACVN,KAAAK,aAAAC,GASAR,EAAUmB,UAAAgB,sBAAA,SAAAC,GACVlC,KAAAY,wBAAAsB,GAQApC,EAAUmB,UAAAkB,uBAAA,WACV,OAAAnC,KAAAY,yBAGe,IAAAwB,EAAA,EC7PRC,EAAA,QAOAC,EAAAvP,KAAAoF,GAAAkK,EAOAE,EAAA,EACPD,KACAA,KAQOE,EAAA,kBAOHC,EAAkB,SAAAC,GACtB,SAAAC,EAAAzC,GACAwC,EAAArP,KAAA2M,KAAA,CACAE,OACA0C,MAAarB,EAAA,EAAKsB,OAClB9R,OAAAwR,EACA7B,QAAA,EACAJ,YAAAkC,EACA3B,mBAAA,SAAA/M,EAAAgP,GACA,OAAAhP,EAA4BF,OAAAmP,EAAA,EAAAnP,CAAIkP,EAAA,GAAAT,MAUhC,OAJAK,IAAAC,EAAAK,UAAAN,GACAC,EAAA1B,UAAArN,OAAAqP,OAAAP,KAAAzB,WACA0B,EAAA1B,UAAAiC,YAAAP,EAEAA,EAnBsB,CAoBpBP,GASKe,EAAA,CACP,IAAMV,EAAkB,aACxB,IAAMA,EAAkB,eACxB,IAAMA,EAAkB,eACxB,IAAMA,EAAkB,eACxB,IAAMA,EAAkB,oCACxB,IAAMA,EAAkB,8BACxB,IAAMA,EAAkB,iDAYjB,SAAAW,EAAAC,EAAAC,EAAAC,GACP,IAAArS,EAAAmS,EAAAnS,OACAsS,EAAAD,EAAA,EAAAA,EAAA,EACA/G,EAAA8G,OACAtI,IAAAwB,IAGAA,EAFAgH,EAAA,EAEAH,EAAAhS,QAEA,IAAA0G,MAAA7G,IAIA,IADA,IAAAuS,EAAAnB,EACAtR,EAAA,EAAiBA,EAAAE,EAAYF,GAAAwS,EAAA,CAC7BhH,EAAAxL,GAAAyS,EAAAJ,EAAArS,GAAA,IACA,IAAAO,EAAA8Q,EACAtP,KAAA2Q,IAAA3Q,KAAA4Q,IAAA5Q,KAAAoF,IAAAkL,EAAArS,EAAA,aACAO,EAAAkS,EACAlS,EAAAkS,EACKlS,GAAAkS,IACLlS,GAAAkS,GAEAjH,EAAAxL,EAAA,GAAAO,EAEA,OAAAiL,EAYO,SAASoH,EAAUP,EAAAC,EAAAC,GAC1B,IAAArS,EAAAmS,EAAAnS,OACAsS,EAAAD,EAAA,EAAAA,EAAA,EACA/G,EAAA8G,OACAtI,IAAAwB,IAGAA,EAFAgH,EAAA,EAEAH,EAAAhS,QAEA,IAAA0G,MAAA7G,IAGA,QAAAF,EAAA,EAAiBA,EAAAE,EAAYF,GAAAwS,EAC7BhH,EAAAxL,GAAA,IAAAqS,EAAArS,GAAAsR,EACA9F,EAAAxL,EAAA,OAAA+B,KAAA8Q,KACA9Q,KAAAmE,IAAAmM,EAAArS,EAAA,GAAAqR,IAAAtP,KAAAoF,GAAA,GAEA,OAAAqE,ECrIO,IASIsH,EAAM,kBAOVC,EAhBU,QAgBVhR,KAAAoF,GAAsC,IAWzC6L,EAAkB,SAAAtB,GACtB,SAAAuB,EAAA/D,EAAAgE,GACAxB,EAAArP,KAAA2M,KAAA,CACAE,OACA0C,MAAarB,EAAA,EAAK4C,QAClBpT,OAAc+S,EACdtD,gBAAA0D,EACAxD,QAAA,EACAM,cAAA+C,EACAzD,YAAmBwD,IASnB,OAJApB,IAAAuB,EAAAjB,UAAAN,GACAuB,EAAAhD,UAAArN,OAAAqP,OAAAP,KAAAzB,WACAgD,EAAAhD,UAAAiC,YAAAe,EAEAA,EAlBsB,CAmBpB7B,GASSgC,EAAW,CACtB,IAAMJ,EAAkB,UACxB,IAAMA,EAAkB,mBACxB,IAAMA,EAAkB,oCACxB,IAAMA,EAAkB,uCACxB,IAAMA,EAAkB,iCACxB,IAAMA,EAAkB,4BACxB,IAAMA,EAAkB,sDACxB,IAAMA,EAAkB,sCCpExBK,EAAA,cCqPOC,EAAAC,EAAAC,ECnPPC,EAAA,GAmBO,SAASC,EAAGjI,EAAAkI,EAAA/O,GACnB,IAAAgP,EAAAnI,EAAA0E,UACA0D,EAAAF,EAAAxD,UACAyD,KAAAH,IACAA,EAAAG,GAAA,IAEAH,EAAAG,GAAAC,GAAAjP,ED6DO,SAAAkP,EAAAzB,EAAAC,EAAAC,GACP,IAAA/G,EACA,QAAAxB,IAAAsI,EAAA,CACA,QAAAtS,EAAA,EAAAC,EAAAoS,EAAAnS,OAAsCF,EAAAC,IAAQD,EAC9CsS,EAAAtS,GAAAqS,EAAArS,GAEAwL,EAAA8G,OAEA9G,EAAA6G,EAAAhS,QAEA,OAAAmL,EAUO,SAAAuI,EAAA1B,EAAAC,EAAAC,GACP,QAAAvI,IAAAsI,GAAAD,IAAAC,EAAA,CACA,QAAAtS,EAAA,EAAAC,EAAAoS,EAAAnS,OAAsCF,EAAAC,IAAQD,EAC9CsS,EAAAtS,GAAAqS,EAAArS,GAEAqS,EAAAC,EAEA,OAAAD,EAWO,SAAA2B,EAAAC,IDpGA,SAAA/E,EAAA+E,GACPZ,EAAAnE,GAAA+E,ECoGEC,CAAeD,EAAA9D,UAAA8D,GACfP,EAAgBO,IAAAH,GAqBX,SAASK,EAAGC,GACnB,uBAAAA,EDrIAf,ECsIsC,IDtItC,KCuI2B,QAwBpB,SAAAxD,EAAAoE,EAAAnR,EAAAgP,EAAAuC,GAEP,IAAAC,EACAC,GAFAN,EAAeE,EAAGF,IAElB9C,yBACA,GAAAoD,EACAD,EAAAC,EAAAzR,EAAAgP,QAGA,GADAmC,EAAA5D,YACiBE,EAAA,EAAK4C,UAAAkB,MAAuC9D,EAAA,EAAK4C,QAClEmB,EAAAxR,MACK,CAIL,IAAA0R,EAAAC,EAAAR,EAA+DE,EAAG,cAClEO,EAAA,CACA5C,EAAA,GAAAhP,EAAA,EAAAgP,EAAA,GACAA,EAAA,GAAAhP,EAAA,EAAAgP,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAhP,EAAA,EACAgP,EAAA,GAAAA,EAAA,GAAAhP,EAAA,GAEA4R,EAAAF,EAAAE,IAAA,GAGAJ,GAFkB1R,OAAA+R,EAAA,EAAA/R,CAAW8R,EAAArU,MAAA,KAAAqU,EAAArU,MAAA,MACVuC,OAAA+R,EAAA,EAAA/R,CAAW8R,EAAArU,MAAA,KAAAqU,EAAArU,MAAA,OAC9B,EACA,IAAA2P,EAAAqE,EACQ9D,EAAA,EAAe8D,GACvBJ,EAAA3D,wBACAtG,IAAAgG,IACAsE,GAAAtE,GAIA,OAAAsE,EAWO,SAAAM,EAAAC,IArFA,SAAAA,GACPA,EAAAC,QAAAd,GAqFAe,CAAAF,GACAA,EAAAC,QAAA,SAAArJ,GACAoJ,EAAAC,QAAA,SAAAnB,GACAlI,IAAAkI,GACQD,EAAgBjI,EAAAkI,EAAAG,OA4CjB,SAAAkB,EAAAf,EAAAgB,GACP,OAAAhB,EAEG,iBAAAA,EACQE,EAAGF,GAEd,EAJWE,EAAGc,GA+EP,SAAAC,EAAAxU,EAAAyU,GACP,OAASC,EAAS1U,EAAA,iBAClBsJ,IAAAmL,IAAA,aAkCO,SAAAE,EAAAC,EAAAC,GACP,GAAAD,IAAAC,EACA,SAEA,IAAAC,EAAAF,EAAAjF,aAAAkF,EAAAlF,WACA,OAAAiF,EAAAnF,YAAAoF,EAAApF,UACAqF,EAEAf,EAAAa,EAAAC,KACAzB,GAAA0B,EAcO,SAAAf,EAAAgB,EAAAC,GACP,IAEAC,EClWO,SAAY/B,EAAAC,GACnB,IAAA+B,EAIA,OAHAhC,KAAAH,GAAAI,KAAAJ,EAAAG,KACAgC,EAAAnC,EAAAG,GAAAC,IAEA+B,ED6VsBC,CAFtBJ,EAAAtF,UACAuF,EAAAvF,WAKA,OAHAwF,IACAA,EAAA5B,GAEA4B,EAcO,SAAAG,EAAArK,EAAAkI,GAGP,OAAAc,EAFyBN,EAAG1I,GACE0I,EAAGR,IAmB1B,SAASyB,EAAS1U,EAAA+K,EAAAkI,GAEzB,OADAmC,EAAArK,EAAAkI,EACAgC,CAAAjV,OAAAsJ,EAAAtJ,EAAAR,QAcO,SAAA6V,EAAAhW,EAAA0L,EAAAkI,GACP,IAAAgC,EAAAG,EAAArK,EAAAkI,GACA,OAAS/Q,OAAAoT,EAAA,EAAApT,CAAc7C,EAAA4V,GA7dvBvY,EAAAC,EAAAC,EAAA,sBAAA6W,IAAA/W,EAAAC,EAAAC,EAAA,sBAAAuS,IAAAzS,EAAAC,EAAAC,EAAA,sBAAA0X,IAAA5X,EAAAC,EAAAC,EAAA,sBAAA4X,IAAA9X,EAAAC,EAAAC,EAAA,sBAAA+X,IAAAjY,EAAAC,EAAAC,EAAA,sBAAAwY,IAAA1Y,EAAAC,EAAAC,EAAA,sBAAA8X,IAAAhY,EAAAC,EAAAC,EAAA,sBAAAyY,IAAA3Y,EAAAC,EAAAC,EAAA,sBAAAiT,EAAA,IAsfAqE,EAA2BzC,GAC3ByC,EAA2BxB,GA1PpBE,EA6PyCnB,EA7PzCoB,EA6P+DnB,EA7P/DoB,EA6P6EZ,EAA1DQ,EA5P1B0B,QAAA,SAAAQ,GACAhC,EAAAwB,QAAA,SAAAS,GACM7B,EAAgB4B,EAAAC,EAAAhC,GAChBG,EAAgB6B,EAAAD,EAAA9B,sCEtPf,SAAAyC,EAAAC,EAAAC,GACP,IAAAC,EAA4CC,SAAAC,cAAA,UAO5C,OANAJ,IACAE,EAAAG,MAAAL,GAEAC,IACAC,EAAAI,OAAAL,GAE6CC,EAAAK,WAAA,MAuCtC,SAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAD,EAAAE,WACAD,GACAA,EAAAE,aAAAJ,EAAAC,GAQO,SAAAI,EAAAC,GACP,OAAAA,KAAAH,WAAAG,EAAAH,WAAAI,YAAAD,GAAA,KAMO,SAAAE,EAAAF,GACP,KAAAA,EAAAG,WACAH,EAAAC,YAAAD,EAAAG,WA9EAha,EAAAC,EAAAC,EAAA,sBAAA2Y,IAAA7Y,EAAAC,EAAAC,EAAA,sBAAAoZ,IAAAtZ,EAAAC,EAAAC,EAAA,sBAAA0Z,IAAA5Z,EAAAC,EAAAC,EAAA,sBAAA6Z,kCCAA/Z,EAAAC,EAAAC,EAAA,sBAAA2U,IAAA7U,EAAAC,EAAAC,EAAA,sBAAA+Z,IAAAja,EAAAC,EAAAC,EAAA,sBAAAga,IAAAla,EAAAC,EAAAC,EAAA,sBAAAyH,IAAA3H,EAAAC,EAAAC,EAAA,sBAAAia,IAAAna,EAAAC,EAAAC,EAAA,sBAAAka,IAAApa,EAAAC,EAAAC,EAAA,sBAAAma,IAAAra,EAAAC,EAAAC,EAAA,sBAAAoa,IAAA,IAAA/X,EAAAvC,EAAA,KA8BAua,EAAA,IAAA5Q,MAAA,GAOO,SAAAkL,IACP,oBASO,SAAAoF,EAAAzB,GACP,OAAAgC,EAAAhC,EAAA,aAWO,SAAAiC,EAAAC,EAAAC,GACP,IAAAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAQ,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GASA,OAPAD,EAAA,GAAAE,EAAAM,EAAAJ,EAAAK,EACAT,EAAA,GAAAG,EAAAK,EAAAH,EAAAI,EACAT,EAAA,GAAAE,EAAAQ,EAAAN,EAAAO,EACAX,EAAA,GAAAG,EAAAO,EAAAL,EAAAM,EACAX,EAAA,GAAAE,EAAAU,EAAAR,EAAAS,EAAAP,EACAN,EAAA,GAAAG,EAAAS,EAAAP,EAAAQ,EAAAN,EAEAP,EAcO,SAAAF,EAAAhC,EAAAvO,EAAAC,EAAAsR,EAAAvb,EAAAwb,EAAAC,GAOP,OANAlD,EAAA,GAAAvO,EACAuO,EAAA,GAAAtO,EACAsO,EAAA,GAAAgD,EACAhD,EAAA,GAAAvY,EACAuY,EAAA,GAAAiD,EACAjD,EAAA,GAAAkD,EACAlD,EAUO,SAAA0B,EAAAQ,EAAAC,GAOP,OANAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAaO,SAAA/S,EAAA6Q,EAAAlV,GACP,IAAAJ,EAAAI,EAAA,GACAH,EAAAG,EAAA,GAGA,OAFAA,EAAA,GAAAkV,EAAA,GAAAtV,EAAAsV,EAAA,GAAArV,EAAAqV,EAAA,GACAlV,EAAA,GAAAkV,EAAA,GAAAtV,EAAAsV,EAAA,GAAArV,EAAAqV,EAAA,GACAlV,EAwBO,SAAA6W,EAAA3B,EAAAtV,EAAAC,GACP,OAAAsX,EAAAjC,EAAAgC,EAAAD,EAAArX,EAAA,IAAAC,EAAA,MAWO,SAAAiX,EAAA5B,EAAApV,EAAAC,GACP,OAAAoX,EAAAjC,EAAAgC,EAAAD,EAAA,QAAAnX,EAAAC,IAiBO,SAAAgX,EAAA7B,EAAAmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACP,IAAAjW,EAAArB,KAAAqB,IAAA+V,GACAjW,EAAAnB,KAAAmB,IAAAiW,GAOA,OANAvD,EAAA,GAAAqD,EAAA/V,EACA0S,EAAA,GAAAsD,EAAA9V,EACAwS,EAAA,IAAAqD,EAAA7V,EACAwS,EAAA,GAAAsD,EAAAhW,EACA0S,EAAA,GAAAwD,EAAAH,EAAA/V,EAAAmW,EAAAJ,EAAA7V,EAAA2V,EACAnD,EAAA,GAAAwD,EAAAF,EAAA9V,EAAAiW,EAAAH,EAAAhW,EAAA8V,EACApD,EASO,SAAA8B,EAAA9B,GACP,IA0BOxP,EA1BPkT,GA0BOlT,EA1BPwP,GA2BA,GAAAxP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GA1BExD,OAAAjD,EAAA,EAAAiD,CAAM,IAAA0W,EAAA,IAER,IAAAjS,EAAAuO,EAAA,GACAtO,EAAAsO,EAAA,GACAgD,EAAAhD,EAAA,GACAvY,EAAAuY,EAAA,GACAiD,EAAAjD,EAAA,GACAkD,EAAAlD,EAAA,GASA,OAPAA,EAAA,GAAAvY,EAAAic,EACA1D,EAAA,IAAAtO,EAAAgS,EACA1D,EAAA,IAAAgD,EAAAU,EACA1D,EAAA,GAAAvO,EAAAiS,EACA1D,EAAA,IAAAgD,EAAAE,EAAAzb,EAAAwb,GAAAS,EACA1D,EAAA,KAAAvO,EAAAyR,EAAAxR,EAAAuR,GAAAS,EAEA1D,iCC1NO,SAAA2D,IACP,SAOO,SAAAC,IACP,SAQO,SAAAC,KAzBPrc,EAAAC,EAAAC,EAAA,sBAAAic,IAAAnc,EAAAC,EAAAC,EAAA,sBAAAkc,IAAApc,EAAAC,EAAAC,EAAA,sBAAAmc,qCCAArc,EAAAC,EAAAC,EAAA,sBAAAoc,IAAA,IAAAC,EAAAvc,EAAA,KAAAwc,EAAAxc,EAAA,KAAAyc,EAAAzc,EAAA,KAAA0c,EAAA1c,EAAA,KAAA2c,EAAA3c,EAAA,KAcO4c,EAAA,SAAAC,GACP,SAAAD,EAAAnQ,EAAAiB,EAAAoP,GACAD,EAAA5X,KAAA2M,KAAAnF,GAOAmF,KAAAlE,MAQAkE,KAAAkL,WAQA,OAJAD,IAAAD,EAAAhI,UAAAiI,GACAD,EAAA/J,UAAArN,OAAAqP,OAAAgI,KAAAhK,WACA+J,EAAA/J,UAAAiC,YAAA8H,EAEAA,EAzBO,CA0BLF,EAAA,GA8CFK,EAAA,SAAAC,GACA,SAAAD,EAAAE,GACAD,EAAA/X,KAAA2M,MAMIpM,OAAA+W,EAAA,EAAA/W,CAAMoM,MAMVA,KAAAsL,QAAA,QAEAtQ,IAAAqQ,GACArL,KAAAuL,cAAAF,GAoGA,OAhGAD,IAAAD,EAAAnI,UAAAoI,GACAD,EAAAlK,UAAArN,OAAAqP,OAAAmI,KAAAnK,WACAkK,EAAAlK,UAAAiC,YAAAiI,EAQAA,EAAAlK,UAAAuK,IAAA,SAAA1P,GACA,IAAA3K,EAIA,OAHA6O,KAAAsL,QAAA5O,eAAAZ,KACA3K,EAAA6O,KAAAsL,QAAAxP,IAEA3K,GAQAga,EAAAlK,UAAAwK,QAAA,WACA,OAAA7X,OAAA0H,KAAA0E,KAAAsL,UAQAH,EAAAlK,UAAAyK,cAAA,WACA,OAAW9X,OAAAmX,EAAA,EAAAnX,CAAM,GAAGoM,KAAAsL,UAOpBH,EAAAlK,UAAA0K,OAAA,SAAA7P,EAAAoP,GACA,IAAAU,EACAA,EAAAlB,EAAA5O,GACAkE,KAAA6L,cAAA,IAAAb,EAAAY,EAAA9P,EAAAoP,IACAU,EAAgBhB,EAAA,EAAekB,eAC/B9L,KAAA6L,cAAA,IAAAb,EAAAY,EAAA9P,EAAAoP,KAUAC,EAAAlK,UAAA2H,IAAA,SAAA9M,EAAA3K,EAAA4a,GACA,GAAAA,EACA/L,KAAAsL,QAAAxP,GAAA3K,MACK,CACL,IAAA+Z,EAAAlL,KAAAsL,QAAAxP,GACAkE,KAAAsL,QAAAxP,GAAA3K,EACA+Z,IAAA/Z,GACA6O,KAAA2L,OAAA7P,EAAAoP,KAYAC,EAAAlK,UAAAsK,cAAA,SAAA1O,EAAAkP,GACA,QAAAjQ,KAAAe,EACAmD,KAAA4I,IAAA9M,EAAAe,EAAAf,GAAAiQ,IAUAZ,EAAAlK,UAAA+K,MAAA,SAAAlQ,EAAAiQ,GACA,GAAAjQ,KAAAkE,KAAAsL,QAAA,CACA,IAAAJ,EAAAlL,KAAAsL,QAAAxP,UACAkE,KAAAsL,QAAAxP,GACAiQ,GACA/L,KAAA2L,OAAA7P,EAAAoP,KAKAC,EArHA,CAsHEN,EAAA,GAMFoB,EAAA,GAOO,SAAAvB,EAAA5O,GACP,OAAAmQ,EAAAvP,eAAAZ,GACAmQ,EAAAnQ,GACAmQ,EAAAnQ,GAAA,UAAAA,EAIexN,EAAA,kCCzNAA,EAAA,GACf4d,UAAA,EACAC,YAAA,kCCFe7d,EAAA,GACf8d,KAAA,EACAC,QAAA,EACAC,OAAA,EAKAvT,MAAA,EACAwT,MAAA,EACAC,MAAA,iCCjBApe,EAAAC,EAAAC,EAAA,sBAAAyV,IASA,IAAAxC,EAAA,CACA4C,QAAA,UACAsI,KAAA,KACA5J,OAAA,IACA6J,OAAA,SACAC,YAAA,cACAC,OAAA,SAUO7I,EAAA,GAEPA,EAAAxC,EAAA4C,SAAA,EAAApR,KAAAoF,GAAA,YACA4L,EAAAxC,EAAAkL,MAAA,MACA1I,EAAAxC,EAAAsB,QAAA,EACAkB,EAAAxC,EAAAqL,QAAA,UAEete,EAAA,kCChCfF,EAAAC,EAAAC,EAAA,sBAAAue,IAcA,IAAA5B,EAAA,SAAApQ,GAKAmF,KAAA8M,mBAOA9M,KAAAnF,OAOAmF,KAAApF,OAAA,MAuBO,SAAAiS,EAAAlR,GACPA,EAAAkR,kBAjBA5B,EAAAhK,UAAA8L,eAAA,WACA/M,KAAA8M,oBAAA,GAOA7B,EAAAhK,UAAA4L,gBAAA,WACA7M,KAAA8M,oBAAA,GAmBexe,EAAA,kCCzDR,SAAA0e,EAAA7V,GACP,OAAApE,KAAAka,IAAA9V,EAAA,GAUO,SAAA+V,EAAA/V,GACP,SAAA6V,EAAA,EAAA7V,GAUO,SAAAgW,EAAAhW,GACP,SAAAA,IAAA,EAAAA,MAUO,SAAAiW,EAAAjW,GACP,OAAAA,EA7CA/I,EAAAC,EAAAC,EAAA,sBAAA0e,IAAA5e,EAAAC,EAAAC,EAAA,sBAAA4e,IAAA9e,EAAAC,EAAAC,EAAA,sBAAA6e,IAAA/e,EAAAC,EAAAC,EAAA,sBAAA8e,kCCAAhf,EAAAC,EAAAC,EAAA,sBAAA+e,IAAA,IAAA1C,EAAAvc,EAAA,KAAAkf,EAAAlf,EAAA,KAAAmf,EAAAnf,EAAA,KAAAof,EAAApf,EAAA,KAAAqf,EAAArf,EAAA,KAAAsf,EAAAtf,EAAA,KAkBAuf,EAAA,SAAAC,GACA,SAAAD,IAEAC,EAAAva,KAAA2M,MAMAA,KAAA6N,OAAkBL,EAAA,EAAcM,GAMhC9N,KAAAnN,OAAA,EAMAmN,KAAAtN,gBAAA,KAgOA,OA5NAkb,IAAAD,EAAA3K,UAAA4K,GACAD,EAAA1M,UAAArN,OAAAqP,OAAA2K,KAAA3M,WACA0M,EAAA1M,UAAAiC,YAAAyK,EAKAA,EAAA1M,UAAA8M,cAAA,SAAAhd,GACA,OAAW6C,OAAA0Z,EAAA,EAAA1Z,CAAiCoM,KAAAtN,gBAC5C,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OAAA9B,IAOA4c,EAAA1M,UAAA+M,eAAA,WACA,OAAWpa,OAAA+W,EAAA,EAAA/W,IAQX+Z,EAAA1M,UAAAgN,mBAAA,WACA,OAAAjO,KAAAtN,gBAAArB,MAAA,EAAA2O,KAAAnN,SAMA8a,EAAA1M,UAAAiN,mBAAA,WACA,OAAAlO,KAAAtN,iBAQAib,EAAA1M,UAAAkN,kBAAA,WACA,OAAAnO,KAAAtN,gBAAArB,MAAA2O,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,SAQA8a,EAAA1M,UAAAmN,UAAA,WACA,OAAApO,KAAA6N,QAMAF,EAAA1M,UAAAoN,sBAAA,SAAAC,GAQA,GAPAtO,KAAAuO,4BAAAvO,KAAAwO,gBACM5a,OAAA8Z,EAAA,EAAA9Z,CAAKoM,KAAAyO,yBACXzO,KAAA0O,yCAAA,EACA1O,KAAAuO,2BAAAvO,KAAAwO,eAIAF,EAAA,GACA,IAAAtO,KAAA0O,0CACAJ,GAAAtO,KAAA0O,yCACA,OAAA1O,KAEA,IAAAlE,EAAAwS,EAAAK,WACA,GAAA3O,KAAAyO,wBAAA/R,eAAAZ,GACA,OAAAkE,KAAAyO,wBAAA3S,GAEA,IAAA8S,EACA5O,KAAA6O,8BAAAP,GAEA,OADAM,EAAAV,qBACAhd,OAAA8O,KAAAtN,gBAAAxB,QACA8O,KAAAyO,wBAAA3S,GAAA8S,EACAA,IAQA5O,KAAA0O,yCAAAJ,EACAtO,OAUA2N,EAAA1M,UAAA4N,8BAAA,SAAAP,GACA,OAAAtO,MAMA2N,EAAA1M,UAAA6N,UAAA,WACA,OAAA9O,KAAAnN,QAOA8a,EAAA1M,UAAA8N,mBAAA,SAAAlB,EAAAnb,GACAsN,KAAAnN,OAAAmc,EAAAnB,GACA7N,KAAA6N,SACA7N,KAAAtN,mBAQAib,EAAA1M,UAAAgO,eAAA,SAAAne,EAAAoe,GACItb,OAAA+W,EAAA,EAAA/W,IASJ+Z,EAAA1M,UAAAkO,UAAA,SAAAtB,EAAA/c,EAAAse,GAEA,IAAAvc,EACA,GAAAgb,EACAhb,EAAAmc,EAAAnB,OACK,CACL,QAAA7c,EAAA,EAAqBA,EAAAoe,IAAape,EAAA,CAClC,OAAAF,EAAAI,OAGA,OAFA8O,KAAA6N,OAAwBL,EAAA,EAAcM,QACtC9N,KAAAnN,OAAA,GAGA/B,EAAyCA,EAAA,GAIzC+c,EA8EA,SAAAhb,GACA,IAAAgb,EACA,GAAAhb,EACAgb,EAAaL,EAAA,EAAcM,GACxB,GAAAjb,EACHgb,EAAaL,EAAA,EAAc6B,IACxB,GAAAxc,IACHgb,EAAaL,EAAA,EAAc8B,MAE3B,SAvFAC,CADA1c,EAAA/B,EAAAI,QAGA8O,KAAA6N,SACA7N,KAAAnN,UAOA8a,EAAA1M,UAAAvQ,eAAA,SAAAkF,GACAoK,KAAAtN,kBACAkD,EAAAoK,KAAAtN,gBAAAsN,KAAAtN,gBAAAsN,KAAAnN,QACAmN,KAAAwP,YAQA7B,EAAA1M,UAAAwO,OAAA,SAAAtF,EAAAuF,GACA,IAAAhd,EAAAsN,KAAAkO,qBACA,GAAAxb,EAAA,CACA,IAAAG,EAAAmN,KAAA8O,YACMlb,OAAA6Z,EAAA,EAAA7Z,CACNlB,EAAA,EAAAA,EAAAxB,OACA2B,EAAAsX,EAAAuF,EAAAhd,GACAsN,KAAAwP,YAQA7B,EAAA1M,UAAAsH,MAAA,SAAA0B,EAAA0F,EAAAC,GACA,IAAA1F,EAAAyF,OACA3U,IAAAkP,IACAA,EAAAD,GAEA,IAAAyF,EAAAE,EACAF,IACAA,EAAe9b,OAAA0Z,EAAA,EAAA1Z,CAASoM,KAAAoB,cAExB,IAAA1O,EAAAsN,KAAAkO,qBACA,GAAAxb,EAAA,CACA,IAAAG,EAAAmN,KAAA8O,YACMlb,OAAA6Z,EAAA,EAAA7Z,CACNlB,EAAA,EAAAA,EAAAxB,OACA2B,EAAAoX,EAAAC,EAAAwF,EAAAhd,GACAsN,KAAAwP,YAQA7B,EAAA1M,UAAAuH,UAAA,SAAAtT,EAAAC,GACA,IAAAzC,EAAAsN,KAAAkO,qBACA,GAAAxb,EAAA,CACA,IAAAG,EAAAmN,KAAA8O,YACMlb,OAAA6Z,EAAA,EAAA7Z,CACNlB,EAAA,EAAAA,EAAAxB,OAAA2B,EACAqC,EAAAC,EAAAzC,GACAsN,KAAAwP,YAIA7B,EArPA,CAsPEJ,EAAA,GA0BK,SAAAyB,EAAAnB,GACP,IAAAhb,EAQA,OAPAgb,GAAgBL,EAAA,EAAcM,GAC9Bjb,EAAA,EACGgb,GAAoBL,EAAA,EAAc6B,KAAAxB,GAAkBL,EAAA,EAAcqC,IACrEhd,EAAA,EACGgb,GAAoBL,EAAA,EAAc8B,OACrCzc,EAAA,GAE2B,EAUpB,SAAAwa,EAAAyC,EAAAlJ,EAAAmJ,GACP,IAAArd,EAAAod,EAAA5B,qBACA,GAAAxb,EAEG,CACH,IAAAG,EAAAid,EAAAhB,YACA,OAAWlb,OAAA6Z,EAAA,EAAA7Z,CACXlB,EAAA,EAAAA,EAAAxB,OAAA2B,EACA+T,EAAAmJ,GALA,YASezhB,EAAA,oCC7SR,SAAAU,EAAAghB,EAAA1e,EAAAC,EAAA0e,GACP,YAAAjV,IAAAiV,GACAA,EAAA,GAAAD,EACAC,EAAA,GAAA3e,EACA2e,EAAA,GAAA1e,EACA0e,GAEA,CAAAD,EAAA1e,EAAAC,GAWO,SAAA2e,EAAAF,EAAA1e,EAAAC,GACP,OAAAye,EAAA,IAAA1e,EAAA,IAAAC,EASO,SAAA4e,EAAAC,GACP,OAAAF,EAAAE,EAAA,GAAAA,EAAA,GAAAA,EAAA,IASO,SAAAC,EAAAvU,GACP,OAAAA,EAAAwU,MAAA,KAAAC,IAAAC,QAQO,SAAAC,EAAAL,GACP,OAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAkCO,SAAAM,EAAAN,EAAAtO,GACP,IAAAkO,EAAAI,EAAA,GACA9e,EAAA8e,EAAA,GACA7e,EAAA6e,EAAA,GAEA,GAAAtO,EAAA6O,aAAAX,KAAAlO,EAAA8O,aACA,SAEA,IACAC,EADA9f,EAAA+Q,EAAAV,YAOA,QAFAyP,EAHA9f,EAGA+Q,EAAAgP,0BAAA/f,EAAAif,GAFAlO,EAAAiP,iBAAAf,KAOAa,EAAAhiB,WAAAyC,EAAAC,GAxHAnD,EAAAC,EAAAC,EAAA,sBAAAU,IAAAZ,EAAAC,EAAAC,EAAA,sBAAA4hB,IAAA9hB,EAAAC,EAAAC,EAAA,sBAAA6hB,IAAA/hB,EAAAC,EAAAC,EAAA,sBAAA+hB,IAAAjiB,EAAAC,EAAAC,EAAA,sBAAAmiB,IAAAriB,EAAAC,EAAAC,EAAA,sBAAAoiB,kCCYO,SAAAM,EAAAte,EAAAC,EAAAjB,EAAAmB,GACP,QAAA7B,EAAA,EAAAC,EAAAS,EAAAR,OAAyCF,EAAAC,IAAQD,EACjD0B,EAAAC,KAAAjB,EAAAV,GAEA,OAAA2B,EAWO,SAAAse,EAAAve,EAAAC,EAAA7B,EAAA+B,GACP,QAAA7B,EAAA,EAAAC,EAAAH,EAAAI,OAA0CF,EAAAC,IAAQD,EAElD,IADA,IAAAU,EAAAZ,EAAAE,GACA4G,EAAA,EAAmBA,EAAA/E,IAAY+E,EAC/BlF,EAAAC,KAAAjB,EAAAkG,GAGA,OAAAjF,EAYO,SAAAue,EAAAxe,EAAAC,EAAAwe,EAAAte,EAAAue,GAGP,IAFA,IAAAC,EAAAD,GAAA,GACApgB,EAAA,EACA4G,EAAA,EAAA0Z,EAAAH,EAAAjgB,OAA2C0G,EAAA0Z,IAAQ1Z,EAAA,CACnD,IAAAhF,EAAAqe,EACAve,EAAAC,EAAAwe,EAAAvZ,GAAA/E,GACAwe,EAAArgB,KAAA4B,EACAD,EAAAC,EAGA,OADAye,EAAAngB,OAAAF,EACAqgB,EAYO,SAAAE,EAAA7e,EAAAC,EAAA6e,EAAA3e,EAAA4e,GAGP,IAFA,IAAAC,EAAAD,GAAA,GACAzgB,EAAA,EACA4G,EAAA,EAAA0Z,EAAAE,EAAAtgB,OAA4C0G,EAAA0Z,IAAQ1Z,EAAA,CACpD,IAAAyZ,EAAAH,EACAxe,EAAAC,EAAA6e,EAAA5Z,GAAA/E,EAAA6e,EAAA1gB,IACA0gB,EAAA1gB,KAAAqgB,EACA1e,EAAA0e,IAAAngB,OAAA,GAGA,OADAwgB,EAAAxgB,OAAAF,EACA0gB,EA9EAtjB,EAAAC,EAAAC,EAAA,sBAAA0iB,IAAA5iB,EAAAC,EAAAC,EAAA,sBAAA2iB,IAAA7iB,EAAAC,EAAAC,EAAA,sBAAA4iB,IAAA9iB,EAAAC,EAAAC,EAAA,sBAAAijB,kCCUejjB,EAAA,GACfwf,GAAA,KACAuB,IAAA,MACAQ,IAAA,MACAP,KAAA,sCCDO,SAAAqC,EAAAjf,EAAAC,EAAAC,EAAAC,EAAA+e,GAGP,IAFA,IAAA9gB,OAAAkK,IAAA4W,IAAA,GACA5gB,EAAA,EACA4G,EAAAjF,EAAsBiF,EAAAhF,EAASgF,GAAA/E,EAC/B/B,EAAAE,KAAA0B,EAAArB,MAAAuG,IAAA/E,GAGA,OADA/B,EAAAI,OAAAF,EACAF,EAYO,SAAA+gB,EAAAnf,EAAAC,EAAA0e,EAAAxe,EAAAif,GAGP,IAFA,IAAAX,OAAAnW,IAAA8W,IAAA,GACA9gB,EAAA,EACA4G,EAAA,EAAA0Z,EAAAD,EAAAngB,OAAmC0G,EAAA0Z,IAAQ1Z,EAAA,CAC3C,IAAAhF,EAAAye,EAAAzZ,GACAuZ,EAAAngB,KAAA2gB,EACAjf,EAAAC,EAAAC,EAAAC,EAAAse,EAAAngB,IACA2B,EAAAC,EAGA,OADAue,EAAAjgB,OAAAF,EACAmgB,EAaO,SAAAY,EAAArf,EAAAC,EAAA+e,EAAA7e,EAAAmf,GAGP,IAFA,IAAAR,OAAAxW,IAAAgX,IAAA,GACAhhB,EAAA,EACA4G,EAAA,EAAA0Z,EAAAI,EAAAxgB,OAAoC0G,EAAA0Z,IAAQ1Z,EAAA,CAC5C,IAAAyZ,EAAAK,EAAA9Z,GACA4Z,EAAAxgB,KAAA6gB,EACAnf,EAAAC,EAAA0e,EAAAxe,EAAA2e,EAAAxgB,IACA2B,EAAA0e,IAAAngB,OAAA,GAGA,OADAsgB,EAAAtgB,OAAAF,EACAwgB,EAjEApjB,EAAAC,EAAAC,EAAA,sBAAAqjB,IAAAvjB,EAAAC,EAAAC,EAAA,sBAAAujB,IAAAzjB,EAAAC,EAAAC,EAAA,sBAAAyjB,mCCAA,IAAAE,EAAA7jB,EAAA,KAAA8jB,EAAA9jB,EAAA,KAAA+jB,EAAA/jB,EAAA,KAAAgkB,EAAAhkB,EAAA,KA6BAikB,EAAA,SAAAC,GACA,SAAAD,IAEAC,EAAAjf,KAAA2M,MAMAA,KAAAuS,iBAAA,GAMAvS,KAAAwS,aAAA,GAMAxS,KAAAyS,WAAA,GAoHA,OAhHAH,IAAAD,EAAArP,UAAAsP,GACAD,EAAApR,UAAArN,OAAAqP,OAAAqP,KAAArR,WACAoR,EAAApR,UAAAiC,YAAAmP,EAMAA,EAAApR,UAAAvF,iBAAA,SAAAb,EAAAP,GACA,IAAAD,EAAA2F,KAAAyS,WAAA5X,GACAR,IACAA,EAAA2F,KAAAyS,WAAA5X,GAAA,KAEA,IAAAR,EAAA0B,QAAAzB,IACAD,EAAAwB,KAAAvB,IAiBA+X,EAAApR,UAAA4K,cAAA,SAAA6G,GACA,IAAA/W,EAAA,iBAAA+W,EAAA,IAA8CN,EAAA,EAAKM,KACnD7X,EAAAc,EAAAd,KACAc,EAAAf,OAAAoF,KACA,IACA2S,EADAtY,EAAA2F,KAAAyS,WAAA5X,GAEA,GAAAR,EAAA,CACAQ,KAAAmF,KAAAwS,eACAxS,KAAAwS,aAAA3X,GAAA,EACAmF,KAAAuS,iBAAA1X,GAAA,KAEAmF,KAAAwS,aAAA3X,GACA,QAAA7J,EAAA,EAAAC,EAAAoJ,EAAAnJ,OAA4CF,EAAAC,IAAQD,EACpD,QAAAqJ,EAAArJ,GAAAqC,KAAA2M,KAAArE,MAAAmR,mBAAA,CACA6F,GAAA,EACA,MAIA,KADA3S,KAAAwS,aAAA3X,GACA,IAAAmF,KAAAwS,aAAA3X,GAAA,CACA,IAAA+X,EAAA5S,KAAAuS,iBAAA1X,GAEA,WADAmF,KAAAuS,iBAAA1X,GACA+X,KACA5S,KAAA5E,oBAAAP,EAAyCsX,EAAA,UAEzCnS,KAAAwS,aAAA3X,GAEA,OAAA8X,IAOAN,EAAApR,UAAA4R,gBAAA,WACIjf,OAAAse,EAAA,EAAAte,CAAWoM,OAUfqS,EAAApR,UAAAtG,aAAA,SAAAE,GACA,OAAAmF,KAAAyS,WAAA5X,IAQAwX,EAAApR,UAAA6R,YAAA,SAAAC,GACA,OAAAA,EACAA,KAAA/S,KAAAyS,WACA7e,OAAA0H,KAAA0E,KAAAyS,YAAAvhB,OAAA,GAOAmhB,EAAApR,UAAA7F,oBAAA,SAAAP,EAAAP,GACA,IAAAD,EAAA2F,KAAAyS,WAAA5X,GACA,GAAAR,EAAA,CACA,IAAAmE,EAAAnE,EAAA0B,QAAAzB,GACAO,KAAAmF,KAAAuS,kBAEAlY,EAAAmE,GAA2B2T,EAAA,IAC3BnS,KAAAuS,iBAAA1X,KAEAR,EAAA2B,OAAAwC,EAAA,GACA,IAAAnE,EAAAnJ,eACA8O,KAAAyS,WAAA5X,MAMAwX,EAzIA,CA0IEJ,EAAA,GAGa3jB,EAAA,kCC1KfF,EAAAC,EAAAC,EAAA,sBAAA0kB,IAAA5kB,EAAAC,EAAAC,EAAA,sBAAA2kB,IAAA7kB,EAAAC,EAAAC,EAAA,sBAAA4kB,IAAA9kB,EAAAC,EAAAC,EAAA,sBAAA6kB,IAAA/kB,EAAAC,EAAAC,EAAA,sBAAA8kB,IAAA,IAAAC,EAAAjlB,EAAA,KAyEO,SAAA4kB,EAAAtgB,EAAAC,EAAAC,EACPC,EAAAyb,EAAAgF,EAAAC,GACA,IAAAlc,GAAAzE,EAAAD,GAAAE,EACA,GAAAwE,EAAA,GACA,KAAU1E,EAAAC,EAAcD,GAAAE,EACxBygB,EAAAC,KACA7gB,EAAAC,GACA2gB,EAAAC,KACA7gB,EAAAC,EAAA,GAEA,OAAA4gB,EAGA,IAAAC,EAAA,IAAAzb,MAAAV,GACAmc,EAAA,KACAA,EAAAnc,EAAA,KAIA,IAFA,IAAAoc,EAAA,CAAA9gB,EAAAC,EAAAC,GACA2L,EAAA,EACAiV,EAAAviB,OAAA,IAQA,IAPA,IAAAwiB,EAAAD,EAAAE,MACAC,EAAAH,EAAAE,MACAE,EAAA,EACAnf,EAAAhC,EAAAkhB,GACA9e,EAAApC,EAAAkhB,EAAA,GACAjf,EAAAjC,EAAAghB,GACA3e,EAAArC,EAAAghB,EAAA,GACA1iB,EAAA4iB,EAAA/gB,EAAgC7B,EAAA0iB,EAAU1iB,GAAA6B,EAAA,CAC1C,IAAAvB,EAAAoB,EAAA1B,GACAO,EAAAmB,EAAA1B,EAAA,GACA4F,EAA4BhD,OAAAyf,EAAA,EAAAzf,CAC5BtC,EAAAC,EAAAmD,EAAAI,EAAAH,EAAAI,GACA6B,EAAAid,IACArV,EAAAxN,EACA6iB,EAAAjd,GAGAid,EAAAvF,IACAkF,GAAAhV,EAAA7L,GAAAE,GAAA,EACA+gB,EAAA/gB,EAAA2L,GACAiV,EAAA5X,KAAA+X,EAAApV,GAEAA,EAAA3L,EAAA6gB,GACAD,EAAA5X,KAAA2C,EAAAkV,IAIA,QAAAI,EAAA,EAAmBA,EAAAzc,IAASyc,EAC5BN,EAAAM,KACAR,EAAAC,KACA7gB,EAAAC,EAAAmhB,EAAAjhB,GACAygB,EAAAC,KACA7gB,EAAAC,EAAAmhB,EAAAjhB,EAAA,IAGA,OAAA0gB,EAgBO,SAAAN,EAAAvgB,EAAAC,EACP0e,EAAAxe,EAAAyb,EAAAgF,EACAC,EAAAQ,GACA,QAAA/iB,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,IAAA4B,EAAAye,EAAArgB,GACAuiB,EAAAP,EACAtgB,EAAAC,EAAAC,EAAAC,EAAAyb,EACAgF,EAAAC,GACAQ,EAAAlY,KAAA0X,GACA5gB,EAAAC,EAEA,OAAA2gB,EAsFO,SAAAL,EAAA/hB,EAAA6iB,GACP,OAAAA,EAAAjhB,KAAAkhB,MAAA9iB,EAAA6iB,GAuBO,SAAAE,EAAAxhB,EAAAC,EAAAC,EAAAC,EACPmhB,EAAAV,EAAAC,GAEA,GAAA5gB,GAAAC,EACA,OAAA2gB,EAGA,IAQA5e,EAAAI,EARAL,EAAAwe,EAAAxgB,EAAAC,GAAAqhB,GACAlf,EAAAoe,EAAAxgB,EAAAC,EAAA,GAAAqhB,GACArhB,GAAAE,EAEAygB,EAAAC,KAAA7e,EACA4e,EAAAC,KAAAze,EAIA,GAIA,GAHAH,EAAAue,EAAAxgB,EAAAC,GAAAqhB,GACAjf,EAAAme,EAAAxgB,EAAAC,EAAA,GAAAqhB,IACArhB,GAAAE,IACAD,EAOA,OAFA0gB,EAAAC,KAAA5e,EACA2e,EAAAC,KAAAxe,EACAwe,QAEG5e,GAAAD,GAAAK,GAAAD,GACH,KAAAnC,EAAAC,GAAA,CAEA,IAAAgC,EAAAse,EAAAxgB,EAAAC,GAAAqhB,GACAhf,EAAAke,EAAAxgB,EAAAC,EAAA,GAAAqhB,GAGA,GAFArhB,GAAAE,EAEA+B,GAAAD,GAAAK,GAAAD,EAAA,CAIA,IAAAgV,EAAApV,EAAAD,EACAsV,EAAAjV,EAAAD,EAEAsV,EAAAxV,EAAAF,EACA2V,EAAArV,EAAAF,EAIAiV,EAAAM,GAAAL,EAAAI,IACAL,EAAA,GAAAK,EAAAL,MAAAK,GAAAL,EAAA,GAAAK,EAAAL,KACAC,EAAA,GAAAK,EAAAL,MAAAK,GAAAL,EAAA,GAAAK,EAAAL,IAEArV,EAAAC,EACAG,EAAAC,IAMAse,EAAAC,KAAA5e,EACA2e,EAAAC,KAAAxe,EACAL,EAAAC,EACAG,EAAAC,EACAJ,EAAAC,EACAG,EAAAC,IAKA,OAFAse,EAAAC,KAAA5e,EACA2e,EAAAC,KAAAxe,EACAwe,EAgBO,SAAAJ,EACPzgB,EAAAC,EAAA0e,EAAAxe,EACAmhB,EACAV,EAAAC,EAAAQ,GACA,QAAA/iB,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,IAAA4B,EAAAye,EAAArgB,GACAuiB,EAAAW,EACAxhB,EAAAC,EAAAC,EAAAC,EACAmhB,EACAV,EAAAC,GACAQ,EAAAlY,KAAA0X,GACA5gB,EAAAC,EAEA,OAAA2gB,EAgBO,SAAAH,EACP1gB,EAAAC,EAAA+e,EAAA7e,EACAmhB,EACAV,EAAAC,EAAAY,GACA,QAAAnjB,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAAA,CAC5C,IAAAqgB,EAAAK,EAAA1gB,GACA+iB,EAAA,GACAR,EAAAJ,EACAzgB,EAAAC,EAAA0e,EAAAxe,EACAmhB,EACAV,EAAAC,EAAAQ,GACAI,EAAAtY,KAAAkY,GACAphB,EAAA0e,IAAAngB,OAAA,GAEA,OAAAqiB,6CCtXO,SAAA/kB,EAAAwF,EAAAogB,EAAAC,GAMP,YALArZ,IAAAqZ,IACAA,EAAA,OAEAA,EAAA,GAAArgB,EAAA,KAAAogB,EACAC,EAAA,GAAArgB,EAAA,KAAAogB,EACAC,EASO,SAAAC,EAAAtgB,GACP,OAAAA,EAAA,MAAAA,EAAA,KAWO,SAAAuU,EAAAvU,EAAAugB,EAAAF,GAMP,YALArZ,IAAAqZ,IACAA,EAAA,OAEAA,EAAA,GAAArgB,EAAA,GAAAugB,EAAA,KACAF,EAAA,GAAArgB,EAAA,GAAAugB,EAAA,KACAF,EAaO,SAAAG,EAAAxgB,EAAAqgB,GACP,OAAAtc,MAAAkG,QAAAjK,GACAA,QAEAgH,IAAAqZ,EACAA,EAAA,CAAArgB,KAEAqgB,EAAA,GAAAA,EAAA,GAAoD,EAEpDA,GA1EAjmB,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAgmB,IAAAlmB,EAAAC,EAAAC,EAAA,sBAAAia,IAAAna,EAAAC,EAAAC,EAAA,sBAAAkmB,kCCQelmB,EAAA,GACfmmB,UAAA,YACApI,QAAA,UACAqI,MAAA,QACA3b,MAAA,uCCJezK,EAAA,GACfqmB,MAAA,QACAC,KAAA,OACAC,YAAA,cACAC,OAAA,wCCLexmB,EAAA,GAKfymB,YAAA,cAKAC,WAAA,aAKAC,OAAA,SAOAC,eAAA,gDCfO,SAAAC,EAAAziB,EAAAC,EAAAC,EAAAC,EAAA+T,EAAAmJ,GAGP,IAFA,IAAAqF,EAAArF,GAAA,GACA/e,EAAA,EACA4G,EAAAjF,EAAsBiF,EAAAhF,EAASgF,GAAA/E,EAAA,CAC/B,IAAAvB,EAAAoB,EAAAkF,GACArG,EAAAmB,EAAAkF,EAAA,GACAwd,EAAApkB,KAAA4V,EAAA,GAAAtV,EAAAsV,EAAA,GAAArV,EAAAqV,EAAA,GACAwO,EAAApkB,KAAA4V,EAAA,GAAAtV,EAAAsV,EAAA,GAAArV,EAAAqV,EAAA,GAKA,OAHAmJ,GAAAqF,EAAAlkB,QAAAF,IACAokB,EAAAlkB,OAAAF,GAEAokB,EAcO,SAAA3F,EAAA/c,EAAAC,EAAAC,EAAAC,EAAAsX,EAAAuF,EAAAK,GAOP,IANA,IAAAqF,EAAArF,GAAA,GACA7b,EAAAnB,KAAAmB,IAAAiW,GACA/V,EAAArB,KAAAqB,IAAA+V,GACAkL,EAAA3F,EAAA,GACA4F,EAAA5F,EAAA,GACA1e,EAAA,EACA4G,EAAAjF,EAAsBiF,EAAAhF,EAASgF,GAAA/E,EAAA,CAC/B,IAAAqC,EAAAxC,EAAAkF,GAAAyd,EACAlgB,EAAAzC,EAAAkF,EAAA,GAAA0d,EACAF,EAAApkB,KAAAqkB,EAAAngB,EAAAhB,EAAAiB,EAAAf,EACAghB,EAAApkB,KAAAskB,EAAApgB,EAAAd,EAAAe,EAAAjB,EACA,QAAA4D,EAAAF,EAAA,EAAuBE,EAAAF,EAAA/E,IAAgBiF,EACvCsd,EAAApkB,KAAA0B,EAAAoF,GAMA,OAHAiY,GAAAqF,EAAAlkB,QAAAF,IACAokB,EAAAlkB,OAAAF,GAEAokB,EAgBO,SAAA7M,EAAA7V,EAAAC,EAAAC,EAAAC,EAAAoX,EAAAC,EAAAwF,EAAAK,GAKP,IAJA,IAAAqF,EAAArF,GAAA,GACAsF,EAAA3F,EAAA,GACA4F,EAAA5F,EAAA,GACA1e,EAAA,EACA4G,EAAAjF,EAAsBiF,EAAAhF,EAASgF,GAAA/E,EAAA,CAC/B,IAAAqC,EAAAxC,EAAAkF,GAAAyd,EACAlgB,EAAAzC,EAAAkF,EAAA,GAAA0d,EACAF,EAAApkB,KAAAqkB,EAAApL,EAAA/U,EACAkgB,EAAApkB,KAAAskB,EAAApL,EAAA/U,EACA,QAAA2C,EAAAF,EAAA,EAAuBE,EAAAF,EAAA/E,IAAgBiF,EACvCsd,EAAApkB,KAAA0B,EAAAoF,GAMA,OAHAiY,GAAAqF,EAAAlkB,QAAAF,IACAokB,EAAAlkB,OAAAF,GAEAokB,EAcO,SAAA5M,EAAA9V,EAAAC,EAAAC,EAAAC,EAAAqC,EAAAC,EAAA4a,GAGP,IAFA,IAAAqF,EAAArF,GAAA,GACA/e,EAAA,EACA4G,EAAAjF,EAAsBiF,EAAAhF,EAASgF,GAAA/E,EAAA,CAC/BuiB,EAAApkB,KAAA0B,EAAAkF,GAAA1C,EACAkgB,EAAApkB,KAAA0B,EAAAkF,EAAA,GAAAzC,EACA,QAAA2C,EAAAF,EAAA,EAAuBE,EAAAF,EAAA/E,IAAgBiF,EACvCsd,EAAApkB,KAAA0B,EAAAoF,GAMA,OAHAiY,GAAAqF,EAAAlkB,QAAAF,IACAokB,EAAAlkB,OAAAF,GAEAokB,EAvHAhnB,EAAAC,EAAAC,EAAA,sBAAA6mB,IAAA/mB,EAAAC,EAAAC,EAAA,sBAAAmhB,IAAArhB,EAAAC,EAAAC,EAAA,sBAAAia,IAAAna,EAAAC,EAAAC,EAAA,sBAAAka,kCCAApa,EAAAC,EAAAC,EAAA,sBAAAinB,IAAAnnB,EAAAC,EAAAC,EAAA,sBAAAknB,IAAApnB,EAAAC,EAAAC,EAAA,sBAAAmnB,IAAArnB,EAAAC,EAAAC,EAAA,sBAAAonB,IAAAtnB,EAAAC,EAAAC,EAAA,sBAAAqnB,IAAAvnB,EAAAC,EAAAC,EAAA,sBAAAsnB,IAAA,IAAAvC,EAAAjlB,EAAA,KAkBA,SAAAynB,EAAAnjB,EAAAojB,EAAAC,EAAAljB,EAAAvB,EAAAC,EAAAykB,GACA,IAIArjB,EAJA+B,EAAAhC,EAAAojB,GACAhhB,EAAApC,EAAAojB,EAAA,GACAtkB,EAAAkB,EAAAqjB,GAAArhB,EACAjD,EAAAiB,EAAAqjB,EAAA,GAAAjhB,EAEA,OAAAtD,GAAA,IAAAC,EACAkB,EAAAmjB,MACG,CACH,IAAA3e,IAAA7F,EAAAoD,GAAAlD,GAAAD,EAAAuD,GAAArD,IAAAD,IAAAC,KACA,GAAA0F,EAAA,EACAxE,EAAAojB,MACK,IAAA5e,EAAA,GACL,QAAAnG,EAAA,EAAqBA,EAAA6B,IAAY7B,EACjCglB,EAAAhlB,GAA0B4C,OAAAyf,EAAA,EAAAzf,CAAIlB,EAAAojB,EAAA9kB,GAC9B0B,EAAAqjB,EAAA/kB,GAAAmG,GAGA,YADA6e,EAAA9kB,OAAA2B,GAGAF,EAAAmjB,GAGA,QAAAhC,EAAA,EAAmBA,EAAAjhB,IAAcihB,EACjCkC,EAAAlC,GAAAphB,EAAAC,EAAAmhB,GAEAkC,EAAA9kB,OAAA2B,EAcO,SAAA0iB,EAAA7iB,EAAAC,EAAAC,EAAAC,EAAAI,GACP,IAAAyB,EAAAhC,EAAAC,GACAmC,EAAApC,EAAAC,EAAA,GACA,IAAAA,GAAAE,EAAwBF,EAAAC,EAAcD,GAAAE,EAAA,CACtC,IAAA8B,EAAAjC,EAAAC,GACAoC,EAAArC,EAAAC,EAAA,GACAsjB,EAAuBriB,OAAAyf,EAAA,EAAAzf,CAASc,EAAAI,EAAAH,EAAAI,GAChCkhB,EAAAhjB,IACAA,EAAAgjB,GAEAvhB,EAAAC,EACAG,EAAAC,EAEA,OAAA9B,EAYO,SAAAuiB,EAAA9iB,EAAAC,EAAA0e,EAAAxe,EAAAI,GACP,QAAAjC,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,IAAA4B,EAAAye,EAAArgB,GACAiC,EAAAsiB,EACA7iB,EAAAC,EAAAC,EAAAC,EAAAI,GACAN,EAAAC,EAEA,OAAAK,EAYO,SAAAwiB,EAAA/iB,EAAAC,EAAA+e,EAAA7e,EAAAI,GACP,QAAAjC,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAAA,CAC5C,IAAAqgB,EAAAK,EAAA1gB,GACAiC,EAAAuiB,EACA9iB,EAAAC,EAAA0e,EAAAxe,EAAAI,GACAN,EAAA0e,IAAAngB,OAAA,GAEA,OAAA+B,EAkBO,SAAAyiB,EAAAhjB,EAAAC,EAAAC,EACPC,EAAAqjB,EAAAC,EAAA7kB,EAAAC,EAAAykB,EAAAI,EACAC,GACA,GAAA1jB,GAAAC,EACA,OAAAwjB,EAEA,IAAAplB,EAAA4F,EACA,OAAAsf,EAAA,CAIA,IAFAtf,EAAsBhD,OAAAyf,EAAA,EAAAzf,CACtBtC,EAAAC,EAAAmB,EAAAC,GAAAD,EAAAC,EAAA,KACAyjB,EAAA,CACA,IAAAplB,EAAA,EAAiBA,EAAA6B,IAAY7B,EAC7BglB,EAAAhlB,GAAA0B,EAAAC,EAAA3B,GAGA,OADAglB,EAAA9kB,OAAA2B,EACA+D,EAEA,OAAAwf,EAKA,IAFA,IAAAE,EAAAD,GAAA,CAAAE,SACA/X,EAAA7L,EAAAE,EACA2L,EAAA5L,GAIA,GAHAijB,EACAnjB,EAAA8L,EAAA3L,EAAA2L,EAAA3L,EAAAvB,EAAAC,EAAA+kB,IACA1f,EAAsBhD,OAAAyf,EAAA,EAAAzf,CAAStC,EAAAC,EAAA+kB,EAAA,GAAAA,EAAA,KAC/BF,EAAA,CAEA,IADAA,EAAAxf,EACA5F,EAAA,EAAiBA,EAAA6B,IAAY7B,EAC7BglB,EAAAhlB,GAAAslB,EAAAtlB,GAEAglB,EAAA9kB,OAAA2B,EACA2L,GAAA3L,OAYA2L,GAAA3L,EAAAE,KAAAE,KACAF,KAAAyjB,KAAA5f,GACA7D,KAAAyjB,KAAAJ,IAAAF,EAAA,KAGA,GAAAC,IAEAN,EACAnjB,EAAAE,EAAAC,EAAAF,EAAAE,EAAAvB,EAAAC,EAAA+kB,IACA1f,EAAsBhD,OAAAyf,EAAA,EAAAzf,CAAStC,EAAAC,EAAA+kB,EAAA,GAAAA,EAAA,KAC/BF,GAAA,CAEA,IADAA,EAAAxf,EACA5F,EAAA,EAAiBA,EAAA6B,IAAY7B,EAC7BglB,EAAAhlB,GAAAslB,EAAAtlB,GAEAglB,EAAA9kB,OAAA2B,EAGA,OAAAujB,EAkBO,SAAAT,EAAAjjB,EAAAC,EAAA0e,EACPxe,EAAAqjB,EAAAC,EAAA7kB,EAAAC,EAAAykB,EAAAI,EACAC,GAEA,IADA,IAAAC,EAAAD,GAAA,CAAAE,SACAvlB,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,IAAA4B,EAAAye,EAAArgB,GACAolB,EAAAV,EACAhjB,EAAAC,EAAAC,EAAAC,EACAqjB,EAAAC,EAAA7kB,EAAAC,EAAAykB,EAAAI,EAAAE,GACA3jB,EAAAC,EAEA,OAAAwjB,EAkBO,SAAAR,EAAAljB,EAAAC,EACP+e,EAAA7e,EAAAqjB,EAAAC,EAAA7kB,EAAAC,EAAAykB,EAAAI,EACAC,GAEA,IADA,IAAAC,EAAAD,GAAA,CAAAE,SACAvlB,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAAA,CAC5C,IAAAqgB,EAAAK,EAAA1gB,GACAolB,EAAAT,EACAjjB,EAAAC,EAAA0e,EAAAxe,EACAqjB,EAAAC,EAAA7kB,EAAAC,EAAAykB,EAAAI,EAAAE,GACA3jB,EAAA0e,IAAAngB,OAAA,GAEA,OAAAklB,gICzGeK,EA3HD,SAAA9I,GACd,SAAA+I,EAAA5lB,EAAAoe,GAEAvB,EAAAta,KAAA2M,MAMAA,KAAA2W,WAAA,EAMA3W,KAAA4W,mBAAA,OAEA5b,IAAAkU,GAAAnX,MAAAkG,QAAAnN,EAAA,IAGAkP,KAAAiP,eAAkF,EAAAC,GAFlFlP,KAAA+O,mBAAAG,EAAmE,GAqGnE,OA9FAvB,IAAA+I,EAAA1T,UAAA2K,GACA+I,EAAAzV,UAAArN,OAAAqP,OAAA0K,KAAA1M,WACAyV,EAAAzV,UAAAiC,YAAAwT,EAQAA,EAAAzV,UAAAxS,MAAA,WACA,WAAAioB,EAAA1W,KAAAtN,gBAAArB,QAAA2O,KAAA6N,SAMA6I,EAAAzV,UAAA4V,eAAA,SAAAvlB,EAAAC,EAAAykB,EAAAI,GACA,OAAAA,EAA6BxiB,OAAAoT,EAAA,EAAApT,CAAwBoM,KAAAoB,YAAA9P,EAAAC,GACrD6kB,GAEApW,KAAA4W,mBAAA5W,KAAAwO,gBACAxO,KAAA2W,UAAA5jB,KAAAyjB,KAAiC5iB,OAAAkjB,EAAA,EAAAljB,CACjCoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OAAA,IACAmN,KAAA4W,kBAAA5W,KAAAwO,eAEW5a,OAAAkjB,EAAA,EAAAljB,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OACAmN,KAAA2W,WAAA,EAAArlB,EAAAC,EAAAykB,EAAAI,KAQAM,EAAAzV,UAAAvR,QAAA,WACA,OAAWkE,OAAAmjB,EAAA,EAAAnjB,CAAcoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,SASzB6jB,EAAAzV,UAAA+M,eAAA,WACA,OAAWpa,OAAAojB,EAAA,EAAApjB,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,SAMA6jB,EAAAzV,UAAA4N,8BAAA,SAAAP,GACA,IAAAgF,EAAA,GAIA,OAHAA,EAAApiB,OAAuC0C,OAAAqjB,EAAA,EAAArjB,CACvCoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OACAyb,EAAAgF,EAAA,GACA,IAAAoD,EAAApD,EAAqD4D,EAAA,EAAcpJ,KAOnE4I,EAAAzV,UAAAkW,QAAA,WACA,OAAWC,EAAA,EAAYjY,aAMvBuX,EAAAzV,UAAAoW,iBAAA,SAAAtmB,GACA,UAUA2lB,EAAAzV,UAAAgO,eAAA,SAAAne,EAAAoe,GACAlP,KAAAmP,UAAAD,EAAApe,EAAA,GACAkP,KAAAtN,kBACAsN,KAAAtN,gBAAA,IAEAsN,KAAAtN,gBAAAxB,OAAkC0C,OAAA0jB,EAAA,EAAA1jB,CAClCoM,KAAAtN,gBAAA,EAAA5B,EAAAkP,KAAAnN,QACAmN,KAAAwP,WAGAkH,EAvHc,CAwHZa,EAAA,gEC5IFnpB,EAAAC,EAAAC,EAAA,sBAAAkpB,IA4BA,IAAIC,EAAO,SAAA9J,GACX,SAAA+J,EAAA5mB,EAAAoe,EAAAkC,GAEAzD,EAAAta,KAAA2M,MAMAA,KAAA2X,MAAA,GAMA3X,KAAA4X,4BAAA,EAMA5X,KAAA6X,mBAAA,KAMA7X,KAAA2W,WAAA,EAMA3W,KAAA4W,mBAAA,EAMA5W,KAAA8X,mBAAA,EAMA9X,KAAA+X,yBAAA,UAEA/c,IAAAkU,GAAAkC,GACApR,KAAA+O,mBAAAG,EAAmE,GACnElP,KAAA2X,MAAAvG,GAEApR,KAAAiP,eAAyF,EAAAC,GAmPzF,OA9OAvB,IAAA+J,EAAA1U,UAAA2K,GACA+J,EAAAzW,UAAArN,OAAAqP,OAAA0K,KAAA1M,WACAyW,EAAAzW,UAAAiC,YAAAwU,EAOAA,EAAAzW,UAAA+W,iBAAA,SAAAC,GACAjY,KAAAtN,gBAGMkB,OAAAskB,EAAA,EAAAtkB,CAAMoM,KAAAtN,gBAAAulB,EAAA/J,sBAFZlO,KAAAtN,gBAAAulB,EAAA/J,qBAAA7c,QAIA2O,KAAA2X,MAAA9b,KAAAmE,KAAAtN,gBAAAxB,QACA8O,KAAAwP,WASAkI,EAAAzW,UAAAxS,MAAA,WACA,WAAAipB,EAAA1X,KAAAtN,gBAAArB,QAAA2O,KAAA6N,OAAA7N,KAAA2X,MAAAtmB,UAMAqmB,EAAAzW,UAAA4V,eAAA,SAAAvlB,EAAAC,EAAAykB,EAAAI,GACA,OAAAA,EAA6BxiB,OAAAoT,EAAA,EAAApT,CAAwBoM,KAAAoB,YAAA9P,EAAAC,GACrD6kB,GAEApW,KAAA4W,mBAAA5W,KAAAwO,gBACAxO,KAAA2W,UAAA5jB,KAAAyjB,KAAiC5iB,OAAAkjB,EAAA,EAAAljB,CACjCoM,KAAAtN,gBAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,OAAA,IACAmN,KAAA4W,kBAAA5W,KAAAwO,eAEW5a,OAAAkjB,EAAA,EAAAljB,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,OACAmN,KAAA2W,WAAA,EAAArlB,EAAAC,EAAAykB,EAAAI,KAMAsB,EAAAzW,UAAApS,WAAA,SAAAyC,EAAAC,GACA,OAAWqC,OAAAukB,EAAA,EAAAvkB,CAAqBoM,KAAAoY,6BAAA,EAAApY,KAAA2X,MAAA3X,KAAAnN,OAAAvB,EAAAC,IAQhCmmB,EAAAzW,UAAAvR,QAAA,WACA,OAAWkE,OAAAmjB,EAAA,EAAAnjB,CAAeoM,KAAAoY,6BAAA,EAAApY,KAAA2X,MAAA3X,KAAAnN,SAiB1B6kB,EAAAzW,UAAA+M,eAAA,SAAAqK,GACA,IAAA3lB,EASA,YARAsI,IAAAqd,GACA3lB,EAAAsN,KAAAoY,6BAAA/mB,QACMuC,OAAA0kB,EAAA,EAAA1kB,CACNlB,EAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,OAAAwlB,IAEA3lB,EAAAsN,KAAAtN,gBAGWkB,OAAAojB,EAAA,EAAApjB,CACXlB,EAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,SAMA6kB,EAAAzW,UAAAsX,QAAA,WACA,OAAAvY,KAAA2X,OAMAD,EAAAzW,UAAAuX,qBAAA,WACA,GAAAxY,KAAA4X,4BAAA5X,KAAAwO,cAAA,CACA,IAAAiK,EAAuB7kB,OAAAoT,EAAA,EAAApT,CAASoM,KAAAoB,aAChCpB,KAAA6X,mBAAgCjkB,OAAA8kB,EAAA,EAAA9kB,CAChCoM,KAAAoY,6BAAA,EAAApY,KAAA2X,MAAA3X,KAAAnN,OACA4lB,EAAA,GACAzY,KAAA4X,2BAAA5X,KAAAwO,cAEA,OAAAxO,KAAA6X,oBASAH,EAAAzW,UAAA0X,iBAAA,WACA,WAAeC,EAAA,EAAK5Y,KAAAwY,uBAA8BtB,EAAA,EAAcrH,MAUhE6H,EAAAzW,UAAA4X,mBAAA,WACA,OAAA7Y,KAAA2X,MAAAzmB,QAaAwmB,EAAAzW,UAAA6X,cAAA,SAAAta,GACA,OAAAA,EAAA,GAAAwB,KAAA2X,MAAAzmB,QAAAsN,EACA,KAEA,IAAeiY,EAAUzW,KAAAtN,gBAAArB,MACzB,IAAAmN,EAAA,EAAAwB,KAAA2X,MAAAnZ,EAAA,GAAAwB,KAAA2X,MAAAnZ,IAAAwB,KAAA6N,SAQA6J,EAAAzW,UAAA8X,eAAA,WAMA,IALA,IAAAlL,EAAA7N,KAAA6N,OACAnb,EAAAsN,KAAAtN,gBACA2e,EAAArR,KAAA2X,MACAqB,EAAA,GACArmB,EAAA,EACA3B,EAAA,EAAAC,EAAAogB,EAAAngB,OAAqCF,EAAAC,IAAQD,EAAA,CAC7C,IAAA4B,EAAAye,EAAArgB,GACAinB,EAAA,IAA2BxB,EAAU/jB,EAAArB,MAAAsB,EAAAC,GAAAib,GACrCmL,EAAAnd,KAAAoc,GACAtlB,EAAAC,EAEA,OAAAomB,GAMAtB,EAAAzW,UAAAmX,2BAAA,WACA,GAAApY,KAAA8X,mBAAA9X,KAAAwO,cAAA,CACA,IAAA9b,EAAAsN,KAAAtN,gBACUkB,OAAA0kB,EAAA,EAAA1kB,CACVlB,EAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,QACAmN,KAAA+X,yBAAArlB,GAEAsN,KAAA+X,yBAAArlB,EAAArB,QACA2O,KAAA+X,yBAAA7mB,OACY0C,OAAA0kB,EAAA,EAAA1kB,CACZoM,KAAA+X,yBAAA,EAAA/X,KAAA2X,MAAA3X,KAAAnN,SAEAmN,KAAA8X,kBAAA9X,KAAAwO,cAEA,OAAAxO,KAAA+X,0BAMAL,EAAAzW,UAAA4N,8BAAA,SAAAP,GACA,IAAAgF,EAAA,GACAS,EAAA,GAKA,OAJAT,EAAApiB,OAAuC0C,OAAAqjB,EAAA,EAAArjB,CACvCoM,KAAAtN,gBAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,OACAE,KAAAyjB,KAAAlI,GACAgF,EAAA,EAAAS,GACA,IAAA2D,EAAApE,EAAkD4D,EAAA,EAAcpJ,GAAAiG,IAOhE2D,EAAAzW,UAAAkW,QAAA,WACA,OAAWC,EAAA,EAAYhY,SAOvBsY,EAAAzW,UAAAoW,iBAAA,SAAAtmB,GACA,OAAW6C,OAAAqlB,EAAA,EAAArlB,CACXoM,KAAAoY,6BAAA,EAAApY,KAAA2X,MAAA3X,KAAAnN,OAAA9B,IAUA2mB,EAAAzW,UAAAgO,eAAA,SAAAne,EAAAoe,GACAlP,KAAAmP,UAAAD,EAAApe,EAAA,GACAkP,KAAAtN,kBACAsN,KAAAtN,gBAAA,IAEA,IAAA2e,EAAezd,OAAA0jB,EAAA,EAAA1jB,CACfoM,KAAAtN,gBAAA,EAAA5B,EAAAkP,KAAAnN,OAAAmN,KAAA2X,OACA3X,KAAAtN,gBAAAxB,OAAA,IAAAmgB,EAAAngB,OAAA,EAAAmgB,IAAAngB,OAAA,GACA8O,KAAAwP,WAGAkI,EAtSW,CAuSTH,EAAA,GAGajpB,EAAA,IAiCR,SAAAkpB,EAAAzmB,GACP,IAAAc,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAgB,EAAAhB,EAAA,GACAiB,EAAAjB,EAAA,GACA2B,EACA,CAAAb,EAAAC,EAAAD,EAAAG,EAAAD,EAAAC,EAAAD,EAAAD,EAAAD,EAAAC,GACA,WAAa2lB,EAAO/kB,EAAkBwkB,EAAA,EAAcpJ,GAAA,CAAApb,EAAAxB,wCC9WpD9C,EAAAC,EAAAC,EAAA,sBAAA4qB,IAAA,IAAAC,EAAA/qB,EAAA,KAAAgrB,EAAAhrB,EAAA,KAAAirB,EAAAjrB,EAAA,KAAAkrB,EAAAlrB,EAAA,KAAAmrB,EAAAnrB,EAAA,KAAAorB,EAAAprB,EAAA,KAAAqrB,EAAArrB,EAAA,KAAAsrB,EAAAtrB,EAAA,KAAAurB,EAAAvrB,EAAA,KAiEAwrB,EAAA,SAAAC,GACA,SAAAD,EAAA7Z,GAEA,IAAA+Z,EAAsBlmB,OAAA6lB,EAAA,EAAA7lB,CAAM,GAAGmM,UAC/B+Z,EAAArd,OAEAod,EAAAxmB,KAAA2M,KAAA8Z,GAMA9Z,KAAA+Z,kBAAA,KAMA/Z,KAAAga,cAAA,KAMAha,KAAAia,iBAAA,KAEAla,EAAAwQ,KACAvQ,KAAAka,OAAAna,EAAAwQ,KAGI3c,OAAAulB,EAAA,EAAAvlB,CAAMoM,KACJpM,OAAA0lB,EAAA,EAAA1lB,CAAmB4lB,EAAA,EAAaW,QACtCna,KAAAoa,4BAAApa,MAEA,IAAAvD,EAAAsD,EAAAtD,OAAAsD,EAAAtD,OAAA,KACAuD,KAAAqa,UAAA5d,GAuHA,OApHAod,IAAAD,EAAA5W,UAAA6W,GACAD,EAAA3Y,UAAArN,OAAAqP,OAAA4W,KAAA5Y,WACA2Y,EAAA3Y,UAAAiC,YAAA0W,EAKAA,EAAA3Y,UAAAqZ,eAAA,SAAAC,GACA,IAAArC,EAAAqC,GAAA,GAEA,OADArC,EAAArc,KAAAmE,MACAkY,GAMA0B,EAAA3Y,UAAAuZ,oBAAA,SAAAC,GACA,IAAAC,EAAAD,GAAA,GAEA,OADAC,EAAA7e,KAAAmE,KAAA2a,iBACAD,GASAd,EAAA3Y,UAAA2Z,UAAA,WAEA,OADA5a,KAAAwL,IAA0BgO,EAAA,EAAaW,SAEgB,MAOvDP,EAAA3Y,UAAA4Z,eAAA,WACA,IAAApe,EAAAuD,KAAA4a,YACA,OAAAne,EAAgCA,EAAAqe,WAAXnB,EAAA,EAAWlF,WAMhCmF,EAAA3Y,UAAA8Z,oBAAA,WACA/a,KAAAwP,WAMAoK,EAAA3Y,UAAAmZ,4BAAA,WACApa,KAAAia,mBACMrmB,OAAAulB,EAAA,EAAAvlB,CAAaoM,KAAAia,kBACnBja,KAAAia,iBAAA,MAEA,IAAAxd,EAAAuD,KAAA4a,YACAne,IACAuD,KAAAia,iBAA8BrmB,OAAAulB,EAAA,EAAAvlB,CAAM6I,EAC5B2c,EAAA,EAAS7gB,OAAAyH,KAAA+a,oBAAA/a,OAEjBA,KAAAwP,WAeAoK,EAAA3Y,UAAAiZ,OAAA,SAAA3J,GACAvQ,KAAA+Z,oBACMnmB,OAAAulB,EAAA,EAAAvlB,CAAaoM,KAAA+Z,mBACnB/Z,KAAA+Z,kBAAA,MAEAxJ,GACAvQ,KAAAwP,UAEAxP,KAAAga,gBACMpmB,OAAAulB,EAAA,EAAAvlB,CAAaoM,KAAAga,eACnBha,KAAAga,cAAA,MAEAzJ,IACAvQ,KAAA+Z,kBAA+BnmB,OAAAulB,EAAA,EAAAvlB,CAAM2c,EAAMmJ,EAAA,EAAe1E,WAAA,SAAArZ,GAC1D,IAAAqf,EAA0E,EAC1EC,EAAAjb,KAAA2a,gBACAM,EAAAC,SAAA,OACAlgB,IAAAgF,KAAAmb,cACAF,EAAAG,OAAA5oB,KAEAwoB,EAAAK,WAAAC,iBAAAzf,KAAAof,GACAD,EAAAK,WAAAE,YAA2C3nB,OAAAylB,EAAA,EAAAzlB,CAAMoM,OAAAib,GAC1Cjb,MACPA,KAAAga,cAA2BpmB,OAAAulB,EAAA,EAAAvlB,CAAMoM,KAAOoZ,EAAA,EAAS7gB,OAAAgY,EAAAiL,OAAAjL,GACjDvQ,KAAAwP,YAUAoK,EAAA3Y,UAAAoZ,UAAA,SAAA5d,GACAuD,KAAA4I,IAAa4Q,EAAA,EAAaW,OAAA1d,IAG1Bmd,EA1JA,CA2JEL,EAAA,GAWK,SAAAL,EAAA+B,EAAAnnB,GACP,OAAAmnB,EAAAQ,SAAA3nB,GAAAmnB,EAAAS,eACA5nB,EAAAmnB,EAAAU,cAIertB,EAAA,kCC7OfF,EAAAC,EAAAC,EAAA,sBAAAstB,IAAA,IAAAzhB,EAAA/L,EAAA,KAAAytB,EAAAztB,EAAA,KAAA0tB,EAAA1tB,EAAA,KA6DA2tB,EAAA,WAMA/b,KAAAgc,eAAA,KAMAhc,KAAAic,yBAAA,MAkJO,SAAAL,EAAAM,EAAAC,EAAAC,GACP,IAOAC,EAPAC,EAAAF,EACIxoB,OAAAkoB,EAAA,EAAAloB,CAAawoB,EAAAE,mBAAA,KACjBN,EAAAI,EACIxoB,OAAAkoB,EAAA,EAAAloB,CAAawoB,EAAAJ,gBAAA,KAsBjB,GAZAK,EALAC,GAAAN,IACOpoB,OAAAkoB,EAAA,EAAAloB,CAAoB0oB,EAAAN,GAC3BjkB,MAAAkG,QAAAie,GAGoBtoB,OAAAkoB,EAAA,EAAAloB,CACpBsoB,EACAF,EACAM,IAEAH,EAA2E,EAAA1tB,QAAAytB,GAAAtV,UAC3EuV,EAAAG,EAAAN,EACAG,EAAAH,EAAAM,GAGAJ,EAEAC,GAAAC,QAAsDphB,IAAA,EAAAuhB,WACtDxkB,MAAAkG,QAAAoe,GAAA,CACA,IAAAG,EAAAzpB,KAAAka,IAAA,GAAqD,EAAAsP,UAYrDF,IAAAH,IACAG,EAAkE,EAAA5tB,SAElE4tB,EAAA3rB,eATA,SAAAI,GACA,QAAAE,EAAA,EAAAC,EAAAH,EAAAI,OAA8CF,EAAAC,IAAQD,EACtDF,EAAAE,GAAA+B,KAAAkhB,MAAAnjB,EAAAE,GAAAwrB,KAEA,OAAA1rB,IAOA,OAAAurB,EApLAN,EAAA9a,UAAAwb,eAAA,SAAAhgB,EAAA2f,GACA,IAAArc,EAQA,OAPAqc,IACArc,EAAA,CACAic,eAAAI,EAAAJ,eACAI,EAAAJ,eAAAhc,KAAA0c,eAAAjgB,GACA6f,kBAAAF,EAAAE,oBAGAtc,KAAA2c,aAAA5c,IAYAgc,EAAA9a,UAAA0b,aAAA,SAAA5c,GACA,OAASnM,OAAAuG,EAAA,EAAAvG,CAAM,CACfooB,eAAAhc,KAAAgc,eACAM,kBAAAtc,KAAAic,0BACGlc,IAOHgc,EAAA9a,UAAA2b,cAAA,WACA,aAOAb,EAAA9a,UAAAkW,QAAA,WACA,OAASvjB,OAAAioB,EAAA,EAAAjoB,IAWTmoB,EAAA9a,UAAA4b,YAAA,SAAApgB,EAAA2f,GACA,OAASxoB,OAAAioB,EAAA,EAAAjoB,IAWTmoB,EAAA9a,UAAA6b,aAAA,SAAArgB,EAAA2f,GACA,OAASxoB,OAAAioB,EAAA,EAAAjoB,IAWTmoB,EAAA9a,UAAA8b,aAAA,SAAAtgB,EAAA2f,GACA,OAASxoB,OAAAioB,EAAA,EAAAjoB,IAUTmoB,EAAA9a,UAAAyb,eAAA,SAAAjgB,GACA,OAAS7I,OAAAioB,EAAA,EAAAjoB,IAWTmoB,EAAA9a,UAAA+b,aAAA,SAAAC,EAAAb,GACA,OAASxoB,OAAAioB,EAAA,EAAAjoB,IAWTmoB,EAAA9a,UAAAic,cAAA,SAAAC,EAAAf,GACA,OAASxoB,OAAAioB,EAAA,EAAAjoB,IAWTmoB,EAAA9a,UAAAmc,cAAA,SAAAlB,EAAAE,GACA,OAASxoB,OAAAioB,EAAA,EAAAjoB,IAGMtF,EAAA,kCCnNf,IAAA+uB,EAAAjvB,EAAA,KAAAkvB,EAAAlvB,EAAA,KAAAmvB,EAAAnvB,EAAA,KAAAovB,EAAApvB,EAAA,KAAAqvB,EAAArvB,EAAA,KAeAwqB,EAAA,SAAAjL,GACA,SAAAiL,EAAA9nB,EAAAoe,GACAvB,EAAAta,KAAA2M,MACAA,KAAAiP,eAAAne,EAAAoe,GAmFA,OAhFAvB,IAAAiL,EAAA5V,UAAA2K,GACAiL,EAAA3X,UAAArN,OAAAqP,OAAA0K,KAAA1M,WACA2X,EAAA3X,UAAAiC,YAAA0V,EAQAA,EAAA3X,UAAAxS,MAAA,WAEA,OADA,IAAAmqB,EAAA5Y,KAAAtN,gBAAArB,QAAA2O,KAAA6N,SAOA+K,EAAA3X,UAAA4V,eAAA,SAAAvlB,EAAAC,EAAAykB,EAAAI,GACA,IAAA1jB,EAAAsN,KAAAtN,gBACAkE,EAA0BhD,OAAA6pB,EAAA,EAAA7pB,CAAStC,EAAAC,EAAAmB,EAAA,GAAAA,EAAA,IACnC,GAAAkE,EAAAwf,EAAA,CAEA,IADA,IAAAvjB,EAAAmN,KAAAnN,OACA7B,EAAA,EAAqBA,EAAA6B,IAAY7B,EACjCglB,EAAAhlB,GAAA0B,EAAA1B,GAGA,OADAglB,EAAA9kB,OAAA2B,EACA+D,EAEA,OAAAwf,GAUAwC,EAAA3X,UAAA+M,eAAA,WACA,OAAAhO,KAAAtN,gBAAAsN,KAAAtN,gBAAArB,QAAA,IAMAunB,EAAA3X,UAAA8M,cAAA,SAAAhd,GACA,OAAW6C,OAAAypB,EAAA,EAAAzpB,CAA4BoM,KAAAtN,gBAAA3B,IAOvC6nB,EAAA3X,UAAAkW,QAAA,WACA,OAAWmG,EAAA,EAAYre,OAOvB2Z,EAAA3X,UAAAoW,iBAAA,SAAAtmB,GACA,OAAW6C,OAAAypB,EAAA,EAAAzpB,CAAU7C,EAAAiP,KAAAtN,gBAAA,GAAAsN,KAAAtN,gBAAA,KAOrBkmB,EAAA3X,UAAAgO,eAAA,SAAAne,EAAAoe,GACAlP,KAAAmP,UAAAD,EAAApe,EAAA,GACAkP,KAAAtN,kBACAsN,KAAAtN,gBAAA,IAEAsN,KAAAtN,gBAAAxB,OAAkC0C,OAAA4pB,EAAA,EAAA5pB,CAClCoM,KAAAtN,gBAAA,EAAA5B,EAAAkP,KAAAnN,QACAmN,KAAAwP,WAGAoJ,EAtFA,CAuFE2E,EAAA,GAGajvB,EAAA,kCCzGfF,EAAAC,EAAAC,EAAA,sBAAAovB,IAAAtvB,EAAAC,EAAAC,EAAA,sBAAAqvB,IAAAvvB,EAAAC,EAAAC,EAAA,sBAAAsvB,IAAAxvB,EAAAC,EAAAC,EAAA,sBAAAuvB,IAAA,IAAAR,EAAAjvB,EAAA,KAAA0vB,EAAA1vB,EAAA,KAAA2vB,EAAA3vB,EAAA,KAgBO,SAAAsvB,EAAAhrB,EAAAC,EAAAC,EAAAC,EAAA9B,GACP,IAAAitB,EAA0BpqB,OAAAypB,EAAA,EAAAzpB,CACtBA,OAAAypB,EAAA,EAAAzpB,GAAWlB,EAAAC,EAAAC,EAAAC,GACf,QAAOe,OAAAypB,EAAA,EAAAzpB,CAAU7C,EAAAitB,OAGXpqB,OAAAypB,EAAA,EAAAzpB,CAAc7C,EAAAitB,KAGpBA,EAAA,IAAAjtB,EAAA,IACAitB,EAAA,IAAAjtB,EAAA,KAGAitB,EAAA,IAAAjtB,EAAA,IACAitB,EAAA,IAAAjtB,EAAA,IAGS6C,OAAAmqB,EAAA,EAAAnqB,CAAclB,EAAAC,EAAAC,EAAAC,EAOvB,SAAAorB,EAAAC,GACA,OAAatqB,OAAAypB,EAAA,EAAAzpB,CAAiB7C,EAAAktB,EAAAC,QAavB,SAAAP,EAAAjrB,EAAAC,EAAA0e,EAAAxe,EAAA9B,GACP,QAAAC,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,GAAA0sB,EACAhrB,EAAAC,EAAA0e,EAAArgB,GAAA6B,EAAA9B,GACA,SAEA4B,EAAA0e,EAAArgB,GAEA,SAyCO,SAAA4sB,EAAAlrB,EAAAC,EAAA0e,EAAAxe,EAAA9B,GACP,IA9BO,SAAA2B,EAAAC,EAAAC,EAAAC,EAAA9B,GACP,SAAA2sB,EACAhrB,EAAAC,EAAAC,EAAAC,EAAA9B,IAGM6C,OAAAkqB,EAAA,EAAAlqB,CAAoBlB,EAAAC,EAAAC,EAAAC,EAAA9B,EAAA,GAAAA,EAAA,KAGpB6C,OAAAkqB,EAAA,EAAAlqB,CAAoBlB,EAAAC,EAAAC,EAAAC,EAAA9B,EAAA,GAAAA,EAAA,KAGpB6C,OAAAkqB,EAAA,EAAAlqB,CAAoBlB,EAAAC,EAAAC,EAAAC,EAAA9B,EAAA,GAAAA,EAAA,KAGpB6C,OAAAkqB,EAAA,EAAAlqB,CAAoBlB,EAAAC,EAAAC,EAAAC,EAAA9B,EAAA,GAAAA,EAAA,KAgB1BotB,CACAzrB,EAAAC,EAAA0e,EAAA,GAAAxe,EAAA9B,GACA,SAEA,OAAAsgB,EAAAngB,OACA,SAEA,QAAAF,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAC3C,GAAQ4C,OAAAkqB,EAAA,EAAAlqB,CAAwBlB,EAAA2e,EAAArgB,EAAA,GAAAqgB,EAAArgB,GAAA6B,EAAA9B,KAChC2sB,EAAAhrB,EAAA2e,EAAArgB,EAAA,GAAAqgB,EAAArgB,GAAA6B,EAAA9B,GACA,SAIA,SAYO,SAAA8sB,EAAAnrB,EAAAC,EAAA+e,EAAA7e,EAAA9B,GACP,QAAAC,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAAA,CAC5C,IAAAqgB,EAAAK,EAAA1gB,GACA,GAAA4sB,EACAlrB,EAAAC,EAAA0e,EAAAxe,EAAA9B,GACA,SAEA4B,EAAA0e,IAAAngB,OAAA,GAEA,wCC3IA9C,EAAAC,EAAAC,EAAA,sBAAA8vB,IAAAhwB,EAAAC,EAAAC,EAAA,sBAAA+vB,IAAAjwB,EAAAC,EAAAC,EAAA,sBAAAgwB,IAAAlwB,EAAAC,EAAAC,EAAA,sBAAAiwB,IAAA,IAAAlB,EAAAjvB,EAAA,KAcO,SAAAgwB,EAAA1rB,EAAAC,EAAAC,EAAAC,EAAA9B,GASP,OARgB6C,OAAAypB,EAAA,EAAAzpB,CAAa7C,EAK7B,SAAAW,GACA,OAAA2sB,EAAA3rB,EAAAC,EAAAC,EAAAC,EAAAnB,EAAA,GAAAA,EAAA,MAeO,SAAA2sB,EAAA3rB,EAAAC,EAAAC,EAAAC,EAAAvB,EAAAC,GAWP,IAHA,IAAAitB,EAAA,EACA9pB,EAAAhC,EAAAE,EAAAC,GACAiC,EAAApC,EAAAE,EAAAC,EAAA,GACQF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAA8B,EAAAjC,EAAAC,GACAoC,EAAArC,EAAAC,EAAA,GACAmC,GAAAvD,EACAwD,EAAAxD,IAAAoD,EAAAD,IAAAnD,EAAAuD,IAAAxD,EAAAoD,IAAAK,EAAAD,GAAA,GACA0pB,IAEKzpB,GAAAxD,IAAAoD,EAAAD,IAAAnD,EAAAuD,IAAAxD,EAAAoD,IAAAK,EAAAD,GAAA,GACL0pB,IAEA9pB,EAAAC,EACAG,EAAAC,EAEA,WAAAypB,EAaO,SAAAF,EAAA5rB,EAAAC,EAAA0e,EAAAxe,EAAAvB,EAAAC,GACP,OAAA8f,EAAAngB,OACA,SAEA,IAAAmtB,EAAA3rB,EAAAC,EAAA0e,EAAA,GAAAxe,EAAAvB,EAAAC,GACA,SAEA,QAAAP,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAC3C,GAAAqtB,EAAA3rB,EAAA2e,EAAArgB,EAAA,GAAAqgB,EAAArgB,GAAA6B,EAAAvB,EAAAC,GACA,SAGA,SAaO,SAAAgtB,EAAA7rB,EAAAC,EAAA+e,EAAA7e,EAAAvB,EAAAC,GACP,OAAAmgB,EAAAxgB,OACA,SAEA,QAAAF,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAAA,CAC5C,IAAAqgB,EAAAK,EAAA1gB,GACA,GAAAstB,EAAA5rB,EAAAC,EAAA0e,EAAAxe,EAAAvB,EAAAC,GACA,SAEAoB,EAAA0e,IAAAngB,OAAA,GAEA,wCC7GA9C,EAAAC,EAAAC,EAAA,sBAAA4W,IAAA9W,EAAAC,EAAAC,EAAA,sBAAAe,IAAAjB,EAAAC,EAAAC,EAAA,sBAAAmhB,IAAArhB,EAAAC,EAAAC,EAAA,sBAAAia,IAAAna,EAAA,KAAAA,EAAA,KAyCO,SAAA8W,EAAAxT,EAAA+sB,GAGP,OAFA/sB,EAAA,IAAA+sB,EAAA,GACA/sB,EAAA,IAAA+sB,EAAA,GACA/sB,EAmMO,SAAArC,EAAAqvB,EAAAC,GAEP,IADA,IAAAtvB,GAAA,EACA2B,EAAA0tB,EAAAxtB,OAAA,EAAsCF,GAAA,IAAQA,EAC9C,GAAA0tB,EAAA1tB,IAAA2tB,EAAA3tB,GAAA,CACA3B,GAAA,EACA,MAGA,OAAAA,EAsBO,SAAAogB,EAAA/d,EAAAyY,GACP,IAAAyU,EAAA7rB,KAAAmB,IAAAiW,GACA0U,EAAA9rB,KAAAqB,IAAA+V,GACA7Y,EAAAI,EAAA,GAAAktB,EAAAltB,EAAA,GAAAmtB,EACAttB,EAAAG,EAAA,GAAAktB,EAAAltB,EAAA,GAAAmtB,EAGA,OAFAntB,EAAA,GAAAJ,EACAI,EAAA,GAAAH,EACAG,EAqBO,SAAA6W,EAAA7W,EAAA6W,GAGP,OAFA7W,EAAA,IAAA6W,EACA7W,EAAA,IAAA6W,EACA7W,wCCpSA,IAAA4gB,EAAA,WAMAtS,KAAA8e,WAAA,GAMAxM,EAAArR,UAAA8d,QAAA,WACA/e,KAAA8e,YACA9e,KAAA8e,WAAA,EACA9e,KAAA6S,oBAQAP,EAAArR,UAAA4R,gBAAA,aAEevkB,EAAA,kCCjCfF,EAAAC,EAAAC,EAAA,sBAAA0wB,IAAA5wB,EAAAC,EAAAC,EAAA,sBAAA2wB,IASO,IAAAD,EAAA,GAOAC,GAAA,gCChBP7wB,EAAAC,EAAAC,EAAA,sBAAA4wB,IAAA9wB,EAAAC,EAAAC,EAAA,sBAAA6wB,IAQO,IAAAD,EAAA,GAMAC,EAAA,kCCPQ7wB,EAAA,GAMfwd,eAAA,gDCXAlY,OAAAwrB,eAAAC,EAAA,cACAluB,OAAA,IAEAkuB,EAAAC,YAUA,SAAAC,GAAAC,WACAA,EAAA,GAAiBC,SACjBA,EAAA,QACC,GAAKC,EAAA,IAEN,IAAAC,EAAA,IAAAC,IAAAL,GAEA,QAAAzjB,KAAA0jB,EACAA,EAAA9iB,eAAAZ,IACA6jB,EAAAE,aAAAC,OAAAhkB,EAAA0jB,EAAA1jB,IAIA,OAAAikB,MAAAJ,EAAAhR,WAAA+Q,GAAAM,KAAAC,IACA,YAAAR,EAAA,CACA,IAAAzgB,EAAAihB,EAAAxxB,QACA,OAAAwxB,EAAAC,OAAAF,KAAAE,MAAAC,MAAA,IAAAnhB,EAAAohB,OAAAJ,KAAAI,IACA,MAAAC,EAAAC,EAAAF,GACAG,EAAAF,EAAAG,cAAA,qBAAAH,EAAAG,cAAA,iBACA,GAAAD,EAAA,UAAArqB,MAAAqqB,EAAAE,YAAAC,WAIA,WAAAjB,EACA,OAAAQ,EAAAG,OAAAJ,KAAAI,IACA,MAAAC,EAAAC,EAAAF,GACAG,EAAAF,EAAAG,cAAA,qBAAAH,EAAAG,cAAA,iBACA,GAAAD,EAAA,UAAArqB,MAAAqqB,EAAAE,YAAAC,QACA,OAAAL,IACOF,MAAAQ,IACP,UAAAzqB,MAAAyqB,QAvCAtB,EAAAuB,cAkDA,SAAAC,EAAAvE,GACA,MAAAN,EAAA6E,EAAAC,IAAA,QAAAD,EAAAC,IAAAC,WAAAC,KAAAC,MAAA,uBAKA,OAJA,IAAAC,EAAAC,QAAA,CACAnF,iBACAM,sBAEAQ,aAAA+D,IAvDAxB,EAAA+B,eA0DA,SAAAC,EAAAthB,GAEA,OADA,IAAAuhB,EAAAH,SACA/D,cAAAiE,EAAAthB,IA1DA,IAAAmhB,EAAAK,EAAsCnzB,EAAQ,MAE9CkzB,EAAAC,EAAkCnzB,EAAQ,MAE1C,SAAAmzB,EAAAjrB,GAAsC,OAAAA,KAAAkrB,WAAAlrB,EAAA,CAAuC6qB,QAAA7qB,GAsC7E,SAAAgqB,EAAAF,GAEA,OADA,IAAAqB,WACAC,gBAAAtB,EAAA,kDCrDA,IAAAuB,EAAAvzB,EAAA,KAAAkf,EAAAlf,EAAA,KAAAwzB,EAAAxzB,EAAA,KAAAyzB,EAAAzzB,EAAA,KAAA0zB,EAAA1zB,EAAA,KAAA2zB,EAAA3zB,EAAA,KAAA4zB,EAAA5zB,EAAA,KAAA6zB,EAAA7zB,EAAA,KAAA8zB,EAAA9zB,EAAA,KAAA+zB,EAAA/zB,EAAA,KAAAg0B,EAAAh0B,EAAA,KAAAi0B,EAAAj0B,EAAA,KAAAk0B,EAAAl0B,EAAA,KAuBAm0B,EAAA,SAAA5U,GACA,SAAA4U,EAAAzxB,EAAAoe,GAEAvB,EAAAta,KAAA2M,MAMAA,KAAAwiB,cAAA,KAMAxiB,KAAAyiB,uBAAA,EAMAziB,KAAA2W,WAAA,EAMA3W,KAAA4W,mBAAA,OAEA5b,IAAAkU,GAAAnX,MAAAkG,QAAAnN,EAAA,IAGAkP,KAAAiP,eAAkF,EAAAC,GAFlFlP,KAAA+O,mBAAAG,EAAmE,GAyLnE,OAlLAvB,IAAA4U,EAAAvf,UAAA2K,GACA4U,EAAAthB,UAAArN,OAAAqP,OAAA0K,KAAA1M,WACAshB,EAAAthB,UAAAiC,YAAAqf,EAOAA,EAAAthB,UAAAyhB,iBAAA,SAAAhxB,GACAsO,KAAAtN,gBAGMkB,OAAA+tB,EAAA,EAAA/tB,CAAMoM,KAAAtN,gBAAAhB,GAFZsO,KAAAtN,gBAAAhB,EAAAL,QAIA2O,KAAAwP,WASA+S,EAAAthB,UAAAxS,MAAA,WACA,WAAA8zB,EAAAviB,KAAAtN,gBAAArB,QAAA2O,KAAA6N,SAMA0U,EAAAthB,UAAA4V,eAAA,SAAAvlB,EAAAC,EAAAykB,EAAAI,GACA,OAAAA,EAA6BxiB,OAAA0Z,EAAA,EAAA1Z,CAAwBoM,KAAAoB,YAAA9P,EAAAC,GACrD6kB,GAEApW,KAAA4W,mBAAA5W,KAAAwO,gBACAxO,KAAA2W,UAAA5jB,KAAAyjB,KAAiC5iB,OAAAmuB,EAAA,EAAAnuB,CACjCoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OAAA,IACAmN,KAAA4W,kBAAA5W,KAAAwO,eAEW5a,OAAAmuB,EAAA,EAAAnuB,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OACAmN,KAAA2W,WAAA,EAAArlB,EAAAC,EAAAykB,EAAAI,KAcAmM,EAAAthB,UAAA0hB,eAAA,SAAAzvB,GACA,OAAWU,OAAAyuB,EAAA,EAAAzuB,CAAcoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OAAAK,IAiBzBqvB,EAAAthB,UAAA2hB,iBAAA,SAAA3qB,EAAA4qB,GACA,GAAA7iB,KAAA6N,QAAuB+T,EAAA,EAAc/R,KACrC7P,KAAA6N,QAAuB+T,EAAA,EAActS,KACrC,YAEA,IAAAwT,OAAA9nB,IAAA6nB,KACA,OAAWjvB,OAAAsuB,EAAA,EAAAtuB,CAAuBoM,KAAAtN,gBAAA,EAClCsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OAAAoF,EAAA6qB,IASAP,EAAAthB,UAAA+M,eAAA,WACA,OAAWpa,OAAAquB,EAAA,EAAAruB,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,SAaA0vB,EAAAthB,UAAA8hB,gBAAA,SAAAC,EAAAjT,GACA,OAAWnc,OAAAsuB,EAAA,EAAAtuB,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OACAmwB,EAAAjT,IAQAwS,EAAAthB,UAAAgiB,UAAA,WACA,OAAWrvB,OAAAwuB,EAAA,EAAAxuB,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,SAMA0vB,EAAAthB,UAAAiiB,gBAAA,WAKA,OAJAljB,KAAAyiB,uBAAAziB,KAAAwO,gBACAxO,KAAAwiB,cAAAxiB,KAAA+iB,gBAAA,GAAA/iB,KAAAwiB,eACAxiB,KAAAyiB,sBAAAziB,KAAAwO,eAEAxO,KAAAwiB,eAMAD,EAAAthB,UAAA4N,8BAAA,SAAAP,GACA,IAAAgF,EAAA,GAIA,OAHAA,EAAApiB,OAAuC0C,OAAA0uB,EAAA,EAAA1uB,CACvCoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OACAyb,EAAAgF,EAAA,GACA,IAAAiP,EAAAjP,EAAqDsO,EAAA,EAAc9T,KAOnEyU,EAAAthB,UAAAkW,QAAA,WACA,OAAW0K,EAAA,EAAY3iB,aAOvBqjB,EAAAthB,UAAAoW,iBAAA,SAAAtmB,GACA,OAAW6C,OAAAuuB,EAAA,EAAAvuB,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OACA9B,IAUAwxB,EAAAthB,UAAAgO,eAAA,SAAAne,EAAAoe,GACAlP,KAAAmP,UAAAD,EAAApe,EAAA,GACAkP,KAAAtN,kBACAsN,KAAAtN,gBAAA,IAEAsN,KAAAtN,gBAAAxB,OAAkC0C,OAAAouB,EAAA,EAAApuB,CAClCoM,KAAAtN,gBAAA,EAAA5B,EAAAkP,KAAAnN,QACAmN,KAAAwP,WAGA+S,EAvNA,CAwNET,EAAA,GAGaxzB,EAAA,kCClPf,IAAAqzB,EAAAvzB,EAAA,KAAAkf,EAAAlf,EAAA,KAAA+0B,EAAA/0B,EAAA,KAAAg1B,EAAAh1B,EAAA,KAAA0zB,EAAA1zB,EAAA,KAAAi1B,EAAAj1B,EAAA,KAAAk1B,EAAAl1B,EAAA,KAAAm1B,EAAAn1B,EAAA,KAkBAo1B,EAAA,SAAA7V,GACA,SAAA6V,EAAA1yB,EAAAoe,GACAvB,EAAAta,KAAA2M,MACAkP,IAAAnX,MAAAkG,QAAAnN,EAAA,IACAkP,KAAA+O,mBAAAG,EAAmE,GAEnElP,KAAAiP,eAAkF,EAAAC,GA8IlF,OA1IAvB,IAAA6V,EAAAxgB,UAAA2K,GACA6V,EAAAviB,UAAArN,OAAAqP,OAAA0K,KAAA1M,WACAuiB,EAAAviB,UAAAiC,YAAAsgB,EAOAA,EAAAviB,UAAAwiB,YAAA,SAAA3gB,GACA9C,KAAAtN,gBAGMkB,OAAA+tB,EAAA,EAAA/tB,CAAMoM,KAAAtN,gBAAAoQ,EAAAoL,sBAFZlO,KAAAtN,gBAAAoQ,EAAAoL,qBAAA7c,QAIA2O,KAAAwP,WASAgU,EAAAviB,UAAAxS,MAAA,WAEA,OADA,IAAA+0B,EAAAxjB,KAAAtN,gBAAArB,QAAA2O,KAAA6N,SAOA2V,EAAAviB,UAAA4V,eAAA,SAAAvlB,EAAAC,EAAAykB,EAAAI,GACA,GAAAA,EAA6BxiB,OAAA0Z,EAAA,EAAA1Z,CAAwBoM,KAAAoB,YAAA9P,EAAAC,GACrD,OAAA6kB,EAIA,IAFA,IAAA1jB,EAAAsN,KAAAtN,gBACAG,EAAAmN,KAAAnN,OACA7B,EAAA,EAAAC,EAAAyB,EAAAxB,OAAgDF,EAAAC,EAAQD,GAAA6B,EAAA,CACxD,IAAA+D,EAA4BhD,OAAA2vB,EAAA,EAAA3vB,CAC5BtC,EAAAC,EAAAmB,EAAA1B,GAAA0B,EAAA1B,EAAA,IACA,GAAA4F,EAAAwf,EAAA,CACAA,EAAAxf,EACA,QAAAgB,EAAA,EAAuBA,EAAA/E,IAAY+E,EACnCoe,EAAApe,GAAAlF,EAAA1B,EAAA4G,GAEAoe,EAAA9kB,OAAA2B,GAGA,OAAAujB,GASAoN,EAAAviB,UAAA+M,eAAA,WACA,OAAWpa,OAAA0vB,EAAA,EAAA1vB,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,SASA2wB,EAAAviB,UAAAyiB,SAAA,SAAAllB,GACA,IAAAnH,EAAA2I,KAAAtN,gBAAAsN,KAAAtN,gBAAAxB,OAAA8O,KAAAnN,OAAA,EACA,OAAA2L,EAAA,GAAAnH,GAAAmH,EACA,KAEA,IAAe4kB,EAAA,EAAKpjB,KAAAtN,gBAAArB,MACpBmN,EAAAwB,KAAAnN,QAAA2L,EAAA,GAAAwB,KAAAnN,QAAAmN,KAAA6N,SAQA2V,EAAAviB,UAAA0iB,UAAA,WAMA,IALA,IAAAjxB,EAAAsN,KAAAtN,gBACAmb,EAAA7N,KAAA6N,OACAhb,EAAAmN,KAAAnN,OAEA+wB,EAAA,GACA5yB,EAAA,EAAAC,EAAAyB,EAAAxB,OAAgDF,EAAAC,EAAQD,GAAA6B,EAAA,CACxD,IAAAiQ,EAAA,IAAsBsgB,EAAA,EAAK1wB,EAAArB,MAAAL,IAAA6B,GAAAgb,GAC3B+V,EAAA/nB,KAAAiH,GAEA,OAAA8gB,GAOAJ,EAAAviB,UAAAkW,QAAA,WACA,OAAWgM,EAAA,EAAY9jB,aAOvBmkB,EAAAviB,UAAAoW,iBAAA,SAAAtmB,GAGA,IAFA,IAAA2B,EAAAsN,KAAAtN,gBACAG,EAAAmN,KAAAnN,OACA7B,EAAA,EAAAC,EAAAyB,EAAAxB,OAAgDF,EAAAC,EAAQD,GAAA6B,EAAA,CACxD,IAAAvB,EAAAoB,EAAA1B,GACAO,EAAAmB,EAAA1B,EAAA,GACA,GAAU4C,OAAA0Z,EAAA,EAAA1Z,CAAU7C,EAAAO,EAAAC,GACpB,SAGA,UAUAiyB,EAAAviB,UAAAgO,eAAA,SAAAne,EAAAoe,GACAlP,KAAAmP,UAAAD,EAAApe,EAAA,GACAkP,KAAAtN,kBACAsN,KAAAtN,gBAAA,IAEAsN,KAAAtN,gBAAAxB,OAAkC0C,OAAAyvB,EAAA,EAAAzvB,CAClCoM,KAAAtN,gBAAA,EAAA5B,EAAAkP,KAAAnN,QACAmN,KAAAwP,WAGAgU,EApJA,CAqJE1B,EAAA,GAGaxzB,EAAA,kCC9JR,SAAA2pB,EAAAvlB,EAAAC,EAAAC,EAAAC,GAIP,IAHA,IAAAgxB,EAAA,EACAnvB,EAAAhC,EAAAE,EAAAC,GACAiC,EAAApC,EAAAE,EAAAC,EAAA,GACQF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAA8B,EAAAjC,EAAAC,GACAoC,EAAArC,EAAAC,EAAA,GACAkxB,GAAA/uB,EAAAH,EAAAD,EAAAK,EACAL,EAAAC,EACAG,EAAAC,EAEA,OAAA8uB,EAAA,EAWO,SAAA7K,EAAAtmB,EAAAC,EAAA0e,EAAAxe,GAEP,IADA,IAAAS,EAAA,EACAtC,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,IAAA4B,EAAAye,EAAArgB,GACAsC,GAAA2kB,EAAAvlB,EAAAC,EAAAC,EAAAC,GACAF,EAAAC,EAEA,OAAAU,EAWO,SAAAwwB,EAAApxB,EAAAC,EAAA+e,EAAA7e,GAEP,IADA,IAAAS,EAAA,EACAtC,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAAA,CAC5C,IAAAqgB,EAAAK,EAAA1gB,GACAsC,GAAA0lB,EAAAtmB,EAAAC,EAAA0e,EAAAxe,GACAF,EAAA0e,IAAAngB,OAAA,GAEA,OAAAoC,EA3DAlF,EAAAC,EAAAC,EAAA,sBAAA2pB,IAAA7pB,EAAAC,EAAAC,EAAA,sBAAA0qB,IAAA5qB,EAAAC,EAAAC,EAAA,sBAAAw1B,kCCAA11B,EAAAC,EAAAC,EAAA,sBAAAy1B,IAAA31B,EAAAC,EAAAC,EAAA,sBAAA01B,IAAA51B,EAAAC,EAAAC,EAAA,sBAAA21B,IAAA71B,EAAAC,EAAAC,EAAA,sBAAA41B,IAAA,IAAA7Q,EAAAjlB,EAAA,KAgBO,SAAA21B,EAAAhwB,EAAA0qB,GACP,YAAAzjB,IAAAjH,EACA,OAEA,EAUO,SAAAiwB,EAAAjwB,EAAA0qB,GACP,YAAAzjB,IAAAjH,EACAA,EAAA0qB,OAEA,EASO,SAAAwF,EAAA5sB,GACP,IAAA8sB,EAAA,EAAApxB,KAAAoF,GAAAd,EACA,gBAMAtD,EAAA0qB,GACA,YAAAzjB,IAAAjH,EACAA,EAAAhB,KAAAqxB,OAAArwB,EAAA0qB,GAAA0F,EAAA,IAAAA,OAGA,GAUO,SAAAD,EAAAG,GACP,IAAArQ,EAAAqQ,GAAmCzwB,OAAAyf,EAAA,EAAAzf,CAAS,GAC5C,gBAMAG,EAAA0qB,GACA,YAAAzjB,IAAAjH,EACAhB,KAAAyE,IAAAzD,EAAA0qB,IAAAzK,EACA,EAEAjgB,EAAA0qB,OAGA,+DC3Ee6F,EACf,UADeA,EAEf,kCCkCIC,EAAS,SAAA3K,GACb,SAAA4K,EAAApI,GACA,IAAArc,EAAAqc,GAAA,GAEAtC,EAAsBlmB,OAAA0C,EAAA,EAAA1C,CAAM,GAAGmM,UAE/B+Z,EAAA2K,eACA3K,EAAA4K,uBACA9K,EAAAvmB,KAAA2M,KAAA8Z,GAEA9Z,KAAA2kB,gBAAA3pB,IAAA+E,EAAA0kB,QAAA1kB,EAAA0kB,QAAA,GACAzkB,KAAA4kB,+BAAA5pB,IAAA+E,EAAA2kB,wBACA3kB,EAAA2kB,wBAOA1kB,KAAAnF,KAAgBgqB,EAAA,EAASjQ,KAgDzB,OA5CAgF,IAAA4K,EAAAxhB,UAAA4W,GACA4K,EAAAvjB,UAAArN,OAAAqP,OAAA2W,KAAA3Y,WACAujB,EAAAvjB,UAAAiC,YAAAshB,EAQAA,EAAAvjB,UAAA6jB,WAAA,WACA,OAA6B9kB,KAAAwL,IAAc8Y,IAS3CE,EAAAvjB,UAAA0jB,WAAA,SAAAF,GACAzkB,KAAA4I,IAAa0b,EAAYG,IASzBD,EAAAvjB,UAAA8jB,0BAAA,WACA,OAA8B/kB,KAAAwL,IAAc8Y,IAS5CE,EAAAvjB,UAAA2jB,0BAAA,SAAAF,GACA1kB,KAAA4I,IAAa0b,EAAYI,IAGzBF,EAnEa,CAoEXQ,EAAA,GASFT,EAAStjB,UAAA2Z,UAGMtsB,EAAA,+IC1Gf22B,EAAA,QAmCIC,EAAQ,SAAAnlB,GAmBZ,IAAAolB,EACA,GAdAnlB,KAAAolB,aAAApqB,IAAA+E,EAAAqlB,QAAArlB,EAAAqlB,QAAA,EAMAplB,KAAAqlB,aAAAtlB,EAAAulB,YACE1xB,OAAA2xB,EAAA,EAAA3xB,CAAOA,OAAAskB,EAAA,EAAAtkB,CAAQoM,KAAAqlB,aAAA,SAAAhtB,EAAAC,GACjB,OAAAA,EAAAD,IACG,QAKH0H,EAAAylB,QACA,QAAAx0B,EAAA,EAAAC,EAAA+O,KAAAqlB,aAAAn0B,OAAA,EAAsDF,EAAAC,IAAQD,EAC9D,GAAAm0B,GAGA,GAAAnlB,KAAAqlB,aAAAr0B,GAAAgP,KAAAqlB,aAAAr0B,EAAA,KAAAm0B,EAAA,CACAA,OAAAnqB,EACA,YAJAmqB,EAAAnlB,KAAAqlB,aAAAr0B,GAAAgP,KAAAqlB,aAAAr0B,EAAA,GAeAgP,KAAAylB,YAAAN,EAOAnlB,KAAA0lB,QAAA1lB,KAAAqlB,aAAAn0B,OAAA,EAMA8O,KAAA2lB,aAAA3qB,IAAA+E,EAAA6lB,OAAA7lB,EAAA6lB,OAAA,KAMA5lB,KAAA6lB,SAAA,UACA7qB,IAAA+E,EAAAylB,UACAxlB,KAAA6lB,SAAA9lB,EAAAylB,QACI5xB,OAAA2xB,EAAA,EAAA3xB,CAAMoM,KAAA6lB,SAAA30B,QAAA8O,KAAAqlB,aAAAn0B,OACV,KAGA,IAAAH,EAAAgP,EAAAhP,YAEAiK,IAAAjK,GACAiP,KAAA2lB,SAAA3lB,KAAA6lB,WACA7lB,KAAA2lB,QAAmB/xB,OAAAoT,EAAA,EAAApT,CAAU7C,IAG3B6C,OAAA2xB,EAAA,EAAA3xB,EACFoM,KAAA2lB,SAAA3lB,KAAA6lB,UAAA7lB,KAAA2lB,UAAA3lB,KAAA6lB,SACA,IAMA7lB,KAAA8lB,WAAA,UACA9qB,IAAA+E,EAAAgmB,YACA/lB,KAAA8lB,WAAA/lB,EAAAgmB,UACInyB,OAAA2xB,EAAA,EAAA3xB,CAAMoM,KAAA8lB,WAAA50B,QAAA8O,KAAAqlB,aAAAn0B,OACV,KAOA8O,KAAAgmB,eAAAhrB,IAAA+E,EAAAkmB,SACAlmB,EAAAkmB,SACAjmB,KAAA8lB,WAAwC,KAAjBI,EAAA,EACrBtyB,OAAA2xB,EAAA,EAAA3xB,EACFoM,KAAAgmB,WAAAhmB,KAAA8lB,YACA9lB,KAAAgmB,YAAAhmB,KAAA8lB,WACA,IAMA9lB,KAAAI,aAAApF,IAAAjK,IAAA,KAOAiP,KAAAmmB,gBAAA,KAMAnmB,KAAAomB,SAAA,WAEAprB,IAAA+E,EAAAsmB,MACArmB,KAAAmmB,gBAAApmB,EAAAsmB,MAAA9V,IAAA,SAAAvc,EAAAgc,GAIA,OAHA,IAA0BsW,EAAA,EAC1BvzB,KAAAC,IAAA,EAAAgB,EAAA,IAAAjB,KAAAE,IAAAe,EAAA,SACAjB,KAAAC,IAAA,EAAAgB,EAAA,IAAAjB,KAAAE,IAAAe,EAAA,WAEKgM,MACFjP,GACHiP,KAAAumB,qBAAAx1B,IAaAm0B,EAAQjkB,UAAAulB,iBAAA,SAAAz1B,EAAA01B,EAAAvzB,GAER,IADA,IAAA2d,EAAA7Q,KAAA8Q,0BAAA/f,EAAA01B,GACAz1B,EAAA6f,EAAAhf,KAAAZ,EAAA4f,EAAA9e,KAAmDf,GAAAC,IAASD,EAC5D,QAAA4G,EAAAiZ,EAAA/e,KAAAwf,EAAAT,EAAA7e,KAAqD4F,GAAA0Z,IAAS1Z,EAC9D1E,EAAA,CAAAuzB,EAAAz1B,EAAA4G,KAcAstB,EAAQjkB,UAAAylB,gCAAA,SAAAtW,EAAAld,EAAAC,EAAAwzB,EAAAv1B,GACR,IAAAyf,EAAAvf,EAAAC,EACAq1B,EAAA,KACA5W,EAAAI,EAAA,KAOA,IANA,IAAApQ,KAAAylB,aACAn0B,EAAA8e,EAAA,GACA7e,EAAA6e,EAAA,IAEAwW,EAAA5mB,KAAA6mB,mBAAAzW,EAAAhf,GAEA4e,GAAAhQ,KAAAolB,SAAA,CAQA,GAPA,IAAAplB,KAAAylB,aACAn0B,EAAAyB,KAAAqxB,MAAA9yB,EAAA,GACAC,EAAAwB,KAAAqxB,MAAA7yB,EAAA,GACAsf,EAAkBjd,OAAA0yB,EAAA,EAAA1yB,CAAuBtC,IAAAC,IAAAo1B,IAEzC9V,EAAA7Q,KAAA8Q,0BAAA8V,EAAA5W,EAAA2W,GAEAzzB,EAAAG,KAAAF,EAAA6c,EAAAa,GACA,WAEAb,EAEA,UAOAkV,EAAQjkB,UAAAG,UAAA,WACR,OAAApB,KAAAI,SAQA8kB,EAAQjkB,UAAA2P,WAAA,WACR,OAAA5Q,KAAA0lB,SAQAR,EAAQjkB,UAAA0P,WAAA,WACR,OAAA3Q,KAAAolB,SASAF,EAAQjkB,UAAA6lB,UAAA,SAAA9W,GACR,OAAAhQ,KAAA2lB,QACA3lB,KAAA2lB,QAEA3lB,KAAA6lB,SAAA7V,IAUAkV,EAAQjkB,UAAA8lB,cAAA,SAAA/W,GACR,OAAAhQ,KAAAqlB,aAAArV,IAQAkV,EAAQjkB,UAAA+lB,eAAA,WACR,OAAAhnB,KAAAqlB,cASAH,EAAQjkB,UAAAgmB,2BAAA,SAAA7W,EAAAuW,EAAAv1B,GACR,GAAAgf,EAAA,GAAApQ,KAAA0lB,QAAA,CACA,OAAA1lB,KAAAylB,YAAA,CACA,IAAA5zB,EAAA,EAAAue,EAAA,GACAte,EAAA,EAAAse,EAAA,GACA,OAAaxc,OAAA0yB,EAAA,EAAA1yB,CAAuB/B,IAAA,EAAAC,IAAA,EAAA60B,GAEpC,IAAAC,EAAA5mB,KAAA6mB,mBAAAzW,EAAAhf,GACA,OAAA4O,KAAA8Q,0BACA8V,EAAAxW,EAAA,KAAAuW,GAEA,aAUAzB,EAAQjkB,UAAAimB,mBAAA,SAAAlX,EAAAa,EAAAzf,GACR,IAAAw0B,EAAA5lB,KAAA8mB,UAAA9W,GACAlc,EAAAkM,KAAA+mB,cAAA/W,GACAiW,EAAiBryB,OAAAuzB,EAAA,EAAAvzB,CAAMoM,KAAAonB,YAAApX,GAAAhQ,KAAAomB,UACvBv0B,EAAA+zB,EAAA,GAAA/U,EAAAhf,KAAAo0B,EAAA,GAAAnyB,EACA/B,EAAA6zB,EAAA,IAAA/U,EAAA9e,KAAA,GAAAk0B,EAAA,GAAAnyB,EACAhC,EAAA8zB,EAAA,GAAA/U,EAAA/e,KAAAm0B,EAAA,GAAAnyB,EACA9B,EAAA4zB,EAAA,IAAA/U,EAAA7e,KAAA,GAAAi0B,EAAA,GAAAnyB,EACA,OAASF,OAAAoT,EAAA,EAAApT,CAAc/B,EAAAC,EAAAC,EAAAC,EAAAZ,IAUvB8zB,EAAQjkB,UAAA6P,0BAAA,SAAA/f,EAAAif,EAAA2W,GACR,IAAAvW,EAAA6U,EACAjlB,KAAAqnB,uBAAAt2B,EAAA,GAAAA,EAAA,GAAAif,GAAA,EAAAI,GACA,IAAAve,EAAAue,EAAA,GACAte,EAAAse,EAAA,GAEA,OADApQ,KAAAqnB,uBAAAt2B,EAAA,GAAAA,EAAA,GAAAif,GAAA,EAAAI,GACSxc,OAAA0yB,EAAA,EAAA1yB,CAAuB/B,EAAAue,EAAA,GAAAte,EAAAse,EAAA,GAAAuW,IAOhCzB,EAAQjkB,UAAAqmB,mBAAA,SAAAlX,GACR,IAAAwV,EAAA5lB,KAAA8mB,UAAA1W,EAAA,IACAtc,EAAAkM,KAAA+mB,cAAA3W,EAAA,IACA6V,EAAiBryB,OAAAuzB,EAAA,EAAAvzB,CAAMoM,KAAAonB,YAAAhX,EAAA,IAAApQ,KAAAomB,UACvB,OACAR,EAAA,IAAAxV,EAAA,OAAA6V,EAAA,GAAAnyB,EACA8xB,EAAA,IAAAxV,EAAA,OAAA6V,EAAA,GAAAnyB,IAYAoxB,EAAQjkB,UAAA4lB,mBAAA,SAAAzW,EAAAhf,GACR,IAAAw0B,EAAA5lB,KAAA8mB,UAAA1W,EAAA,IACAtc,EAAAkM,KAAA+mB,cAAA3W,EAAA,IACA6V,EAAiBryB,OAAAuzB,EAAA,EAAAvzB,CAAMoM,KAAAonB,YAAAhX,EAAA,IAAApQ,KAAAomB,UACvBv0B,EAAA+zB,EAAA,GAAAxV,EAAA,GAAA6V,EAAA,GAAAnyB,EACAhC,EAAA8zB,EAAA,GAAAxV,EAAA,GAAA6V,EAAA,GAAAnyB,EACA/B,EAAAF,EAAAo0B,EAAA,GAAAnyB,EACA9B,EAAAF,EAAAm0B,EAAA,GAAAnyB,EACA,OAASF,OAAAoT,EAAA,EAAApT,CAAc/B,EAAAC,EAAAC,EAAAC,EAAAZ,IAcvB8zB,EAAQjkB,UAAAsmB,kCAAA,SAAA71B,EAAAoC,EAAAmc,GACR,OAAAjQ,KAAAwnB,gCACA91B,EAAA,GAAAA,EAAA,GAAAoC,GAAA,EAAAmc,IAgBAiV,EAAQjkB,UAAAumB,gCAAA,SAAAl2B,EAAAC,EAAAuC,EAAA2zB,EAAAxX,GACR,IAAAD,EAAAhQ,KAAA0nB,kBAAA5zB,GACAyU,EAAAzU,EAAAkM,KAAA+mB,cAAA/W,GACA4V,EAAA5lB,KAAA8mB,UAAA9W,GACAiW,EAAiBryB,OAAAuzB,EAAA,EAAAvzB,CAAMoM,KAAAonB,YAAApX,GAAAhQ,KAAAomB,UAEvBuB,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAA90B,KAAAqxB,OAAA9yB,EAAAs0B,EAAA,IAAA9xB,EAAA6zB,GACAG,EAAA/0B,KAAAqxB,OAAA7yB,EAAAq0B,EAAA,IAAA9xB,EAAA8zB,GACAG,EAAAxf,EAAAsf,EAAA5B,EAAA,GACA+B,EAAAzf,EAAAuf,EAAA7B,EAAA,GAUA,OARAwB,GACAM,EAAAh1B,KAAAk1B,KAAAF,GAAA,EACAC,EAAAj1B,KAAAk1B,KAAAD,GAAA,IAEAD,EAAAh1B,KAAAqxB,MAAA2D,GACAC,EAAAj1B,KAAAqxB,MAAA4D,IAGSp0B,OAAAs0B,EAAA,EAAAt0B,CAAuBoc,EAAA+X,EAAAC,EAAA/X,IAkBhCiV,EAAQjkB,UAAAomB,uBAAA,SAAA/1B,EAAAC,EAAAye,EAAAyX,EAAAxX,GACR,IAAA2V,EAAA5lB,KAAA8mB,UAAA9W,GACAlc,EAAAkM,KAAA+mB,cAAA/W,GACAiW,EAAiBryB,OAAAuzB,EAAA,EAAAvzB,CAAMoM,KAAAonB,YAAApX,GAAAhQ,KAAAomB,UAEvBuB,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAA90B,KAAAqxB,OAAA9yB,EAAAs0B,EAAA,IAAA9xB,EAAA6zB,GACAG,EAAA/0B,KAAAqxB,OAAA7yB,EAAAq0B,EAAA,IAAA9xB,EAAA8zB,GACAG,EAAAF,EAAA5B,EAAA,GACA+B,EAAAF,EAAA7B,EAAA,GAUA,OARAwB,GACAM,EAAAh1B,KAAAk1B,KAAAF,GAAA,EACAC,EAAAj1B,KAAAk1B,KAAAD,GAAA,IAEAD,EAAAh1B,KAAAqxB,MAAA2D,GACAC,EAAAj1B,KAAAqxB,MAAA4D,IAGSp0B,OAAAs0B,EAAA,EAAAt0B,CAAuBoc,EAAA+X,EAAAC,EAAA/X,IAWhCiV,EAAQjkB,UAAAknB,yBAAA,SAAAz2B,EAAAse,EAAAC,GACR,OAAAjQ,KAAAqnB,uBACA31B,EAAA,GAAAA,EAAA,GAAAse,GAAA,EAAAC,IAOAiV,EAAQjkB,UAAAmnB,uBAAA,SAAAhY,GACR,OAAApQ,KAAAqlB,aAAAjV,EAAA,KAWA8U,EAAQjkB,UAAAmmB,YAAA,SAAApX,GACR,OAAAhQ,KAAAgmB,UACAhmB,KAAAgmB,UAEAhmB,KAAA8lB,WAAA9V,IAQAkV,EAAQjkB,UAAA8P,iBAAA,SAAAf,GACR,OAAAhQ,KAAAmmB,gBAGAnmB,KAAAmmB,gBAAAnW,GAFA,MAcAkV,EAAQjkB,UAAAymB,kBAAA,SAAA5zB,EAAAu0B,GACR,IAAArY,EAAUpc,OAAAskB,EAAA,EAAAtkB,CAAiBoM,KAAAqlB,aAAAvxB,EAAAu0B,GAAA,GAC3B,OAASz0B,OAAAmP,EAAA,EAAAnP,CAAKoc,EAAAhQ,KAAAolB,QAAAplB,KAAA0lB,UAOdR,EAAQjkB,UAAAslB,qBAAA,SAAAx1B,GAGR,IAFA,IAAAG,EAAA8O,KAAAqlB,aAAAn0B,OACAo3B,EAAA,IAAAvwB,MAAA7G,GACA8e,EAAAhQ,KAAAolB,QAA4BpV,EAAA9e,IAAY8e,EACxCsY,EAAAtY,GAAAhQ,KAAA8Q,0BAAA/f,EAAAif,GAEAhQ,KAAAmmB,gBAAAmC,GAIe,IAAAC,EAAA,EClhBR,SAAAC,EAAAvjB,GACP,IAAAnD,EAAAmD,EAAArD,qBAKA,OAJAE,IACAA,EAiIO,SAAAmD,EAAAwjB,EAAAC,EAAAC,GAEP,OA9FO,SAAA53B,EAAA03B,EAAAC,EAAAC,GACP,IAAAp1B,OAAAyH,IAAA2tB,IAAuDC,EAAA,EAAMl1B,SAE7D4xB,EAAAuD,EAAA93B,EAAA03B,EAAAC,GAEA,WAAaH,EAAQ,CACrBx3B,SACA60B,OAAYhyB,OAAAoT,EAAA,EAAApT,CAAS7C,EAAAwC,GACrB+xB,cACAW,SAAAyC,IAqFAI,CADAC,EAAA9jB,GACAwjB,EAAAC,EAAAC,GAnIAK,CAAA/jB,GACAA,EAAApD,mBAAAC,IAEAA,EAUO,SAAAmnB,EAAAnnB,EAAAsO,EAAAnL,GACP,IAAA+K,EAAAI,EAAA,GACAvc,EAAAiO,EAAAwlB,mBAAAlX,GACA8Y,EAAAH,EAAA9jB,GACA,GAAOrR,OAAAoT,EAAA,EAAApT,CAAkBs1B,EAAAr1B,GAMzB,OAAAuc,EALA,IAAA+Y,EAAqBv1B,OAAAoT,EAAA,EAAApT,CAAQs1B,GAC7BE,EAAAr2B,KAAAk1B,MAAAiB,EAAA,GAAAr1B,EAAA,IAAAs1B,GAEA,OADAt1B,EAAA,IAAAs1B,EAAAC,EACAtnB,EAAAqmB,yBAAAt0B,EAAAmc,GAgDO,SAAAqZ,EAAAjN,GAEP,IAAAkN,EAAAlN,GAAA,GAEArrB,EAAAu4B,EAAAv4B,QAAoC6C,OAAA21B,EAAA,EAAA31B,CAAa,aAAAwN,YAGjDooB,EAAA,CACAz4B,SACAq0B,QAAAkE,EAAAlE,QACAa,SAAAqD,EAAArD,SACAX,YAAAuD,EACA93B,EACAu4B,EAAA5D,QACA4D,EAAArD,WAGA,WAAasC,EAAQiB,GAarB,SAAAX,EAAA93B,EAAA03B,EAAAC,GAcA,IAbA,IAAAhD,OAAA1qB,IAAAytB,EACAA,EAAkBvC,EAAA,EAElB1e,EAAe5T,OAAAoT,EAAA,EAAApT,CAAS7C,GACxBwW,EAAc3T,OAAAoT,EAAA,EAAApT,CAAQ7C,GAEtBk1B,EAAiBryB,OAAAuzB,EAAA,EAAAvzB,MAAMoH,IAAA0tB,EACvBA,EAAmBxC,EAAA,GACnBvK,EAAA5oB,KAAAE,IACAsU,EAAA0e,EAAA,GAAAze,EAAAye,EAAA,IAEA/0B,EAAAw0B,EAAA,EACAJ,EAAA,IAAAvtB,MAAA7G,GACA8e,EAAA,EAAiBA,EAAA9e,IAAY8e,EAC7BsV,EAAAtV,GAAA2L,EAAA5oB,KAAAka,IAAA,EAAA+C,GAEA,OAAAsV,EAyBO,SAAAyD,EAAA9jB,GAEP,IAAAlU,GADAkU,EAAerR,OAAA21B,EAAA,EAAA31B,CAAaqR,IAC5B7D,YACA,IAAArQ,EAAA,CACA,IAAA04B,EAAA,IAAqBF,EAAA,EAAgBhoB,EAAA,EAAK4C,SAAAc,EAAA3D,mBAC1CvQ,EAAa6C,OAAAoT,EAAA,EAAApT,EAAc61B,UAE3B,OAAA14B,EAxKA3C,EAAAC,EAAAC,EAAA,sBAAAk6B,IAAAp6B,EAAAC,EAAAC,EAAA,sBAAA26B,IAAA76B,EAAAC,EAAAC,EAAA,sBAAA+6B,IAAAj7B,EAAAC,EAAAC,EAAA,sBAAAy6B,kCCEAn1B,OAAAwrB,eAAAC,EAAA,cACAluB,OAAA,IAEAkuB,EAAA8B,aAAA,EAEA,IAAAuI,EAAAnI,EAAsCnzB,EAAQ,MAE9Cu7B,EAAApI,EAAmCnzB,EAAQ,MAE3Cw7B,EAAWx7B,EAAQ,KAEnBy7B,EAAWz7B,EAAQ,KAEnB07B,EAAW17B,EAAQ,KAEnB,SAAAmzB,EAAAjrB,GAAsC,OAAAA,KAAAkrB,WAAAlrB,EAAA,CAAuC6qB,QAAA7qB,GAE7E,SAAAyzB,EAAAC,GAAAzK,IACAA,EAAA0K,aACAA,EAAA,GAAmBC,YACnBA,EAAAzO,QACAA,GAAA,GACC,GAAK0O,GACN,MACA,IAAAC,EAAAD,EAEAC,IACAH,EAAA,CACAI,OAAA,KACAJ,EACAK,OAAAN,GAEAI,EAAA,CACA3O,UACAhf,OAAA,IAAAitB,EAAAvI,QAAA,CACA5B,MACAgL,WAAA,YACAC,OAAAP,EACAC,kBAOAP,EAAAxI,QAAA9tB,KAAA2M,KAAAoqB,IAtBA,GA2BAL,EAAA9oB,UAAArN,OAAAqP,OAAA0mB,EAAAxI,QAAAlgB,WACA8oB,EAAA9oB,UAAAiC,YAAA6mB,EAGAA,EAAAU,MAAA,SAAAN,GACA,WAAAJ,EAAA,UAAAI,IAKA,MAAAO,EAAAX,EAAA9oB,UACAypB,EAAAC,QAAAb,EAAAa,QACAD,EAAAE,OAAAd,EAAAc,OACAF,EAAAG,SAAAf,EAAAe,SACAH,EAAAI,UAAAhB,EAAAgB,UACAJ,EAAAK,SAAAjB,EAAAiB,SACAL,EAAAM,SAAAlB,EAAAkB,SACAN,EAAAO,YAAArB,EAAAqB,YACAP,EAAAQ,wBAAApB,EAAAoB,wBACAR,EAAAS,cAAAvB,EAAAuB,cACAT,EAAAU,cAAAxB,EAAAwB,cACAV,EAAAW,QAAAxB,EAAAwB,QACAX,EAAAY,QAAAzB,EAAAyB,QACAZ,EAAAa,eAAA3B,EAAA2B,eACA,IAAAC,EAAAzB,EACA1K,EAAA8B,QAAAqK,gCC7EAp9B,EAAAC,EAAAC,EAAA,sBAAAm9B,IAAAr9B,EAAAC,EAAAC,EAAA,sBAAAqE,IAAA,IAAA0gB,EAAAjlB,EAAA,KA+BOs9B,GA/BPt9B,EAAA,KA+BO,WAYA,SAAAq9B,EAAAviB,EAAAM,EAAAmiB,GACP,IAAAC,EAAAD,GAAAD,EACAG,EAAaj4B,OAAAyf,EAAA,EAAAzf,CAASsV,EAAA,IACtB4iB,EAAal4B,OAAAyf,EAAA,EAAAzf,CAAS4V,EAAA,IACtBuiB,GAAAD,EAAAD,GAAA,EACAG,EAAoBp4B,OAAAyf,EAAA,EAAAzf,CAAS4V,EAAA,GAAAN,EAAA,MAC7B7Q,EAAAtF,KAAAqB,IAAA23B,GAAAh5B,KAAAqB,IAAA23B,GACAh5B,KAAAqB,IAAA43B,GAAAj5B,KAAAqB,IAAA43B,GACAj5B,KAAAmB,IAAA23B,GAAA94B,KAAAmB,IAAA43B,GACA,SAAAF,EAAA74B,KAAAk5B,MAAAl5B,KAAAyjB,KAAAne,GAAAtF,KAAAyjB,KAAA,EAAAne,IA8LO,SAAA1F,EAAAuW,EAAAgjB,EAAAC,EAAAR,GACP,IAAAC,EAAAD,GAAAD,EACAG,EAAaj4B,OAAAyf,EAAA,EAAAzf,CAASsV,EAAA,IACtBkjB,EAAax4B,OAAAyf,EAAA,EAAAzf,CAASsV,EAAA,IACtBmjB,EAAAH,EAAAN,EACAU,EAAAv5B,KAAAw5B,KACAx5B,KAAAqB,IAAAy3B,GAAA94B,KAAAmB,IAAAm4B,GACAt5B,KAAAmB,IAAA23B,GAAA94B,KAAAqB,IAAAi4B,GAAAt5B,KAAAmB,IAAAi4B,IACAK,EAAAJ,EAAAr5B,KAAAk5B,MACAl5B,KAAAqB,IAAA+3B,GAAAp5B,KAAAqB,IAAAi4B,GAAAt5B,KAAAmB,IAAA23B,GACA94B,KAAAmB,IAAAm4B,GAAAt5B,KAAAqB,IAAAy3B,GAAA94B,KAAAqB,IAAAk4B,IACA,OAAU14B,OAAAyf,EAAA,EAAAzf,CAAS44B,GAAO54B,OAAAyf,EAAA,EAAAzf,CAAS04B,mCC7PnC,IAAA3hB,EAAAvc,EAAA,KAUAq+B,EAAA,SAAAv2B,GACA,SAAAu2B,EAAAvsB,GACA,IACAwsB,EAAA,oDADsB,WAAP/hB,EAAA,EAAuBA,EAAA,EAAO,IAASA,EAAA,EAAO2F,MAAA,SAE7D,gBAAApQ,EAAA,gBAEAhK,EAAA7C,KAAA2M,KAAA0sB,GAUA1sB,KAAAE,OAKAF,KAAAghB,KAAA,iBAGAhhB,KAAA0sB,UAOA,OAJAx2B,IAAAu2B,EAAAzpB,UAAA9M,GACAu2B,EAAAxrB,UAAArN,OAAAqP,OAAA/M,KAAA+K,WACAwrB,EAAAxrB,UAAAiC,YAAAupB,EAEAA,EA/BA,CAgCCv2B,OAEc5H,EAAA,kCCpCAA,EAAA,GACf4D,QAAA,EACAK,aAAA,EACAD,MAAA,EACAF,MAAA,EACAC,MAAA,EACAF,KAAA,kCCNe7D,EAAA,GACfkF,YAAA,cACAC,aAAA,eACAC,SAAA,WACAC,UAAA,2CCZAvF,EAAAC,EAAAC,EAAA,sBAAAq+B,IAAAv+B,EAAAC,EAAAC,EAAA,sBAAAktB,IAAA,IAAAoR,EAAAx+B,EAAA,KAAAkf,EAAAlf,EAAA,KAAAy+B,EAAAz+B,EAAA,KAAA0+B,EAAA1+B,EAAA,KAqBO,SAAAu+B,EAAAI,EAAAC,EACPC,EAAAC,GAEA,IAAAC,EAAqBv5B,OAAAk5B,EAAA,EAAAl5B,CAASq5B,EAAAD,EAAAD,GAG9BK,EAAyBx5B,OAAAk5B,EAAA,EAAAl5B,CAAkBo5B,EAAAE,EAAAD,GAE3CI,EAAAL,EAAA1rB,wBACAtG,IAAAqyB,IACAD,GAAAC,GAEA,IAAAC,EAAAP,EAAAzrB,wBACAtG,IAAAsyB,IACAF,GAAAE,GAOA,IAAAC,EAAAR,EAAA3rB,YACA,IAAAmsB,GAAuB35B,OAAA0Z,EAAA,EAAA1Z,CAAkB25B,EAAAJ,GAAA,CACzC,IAAAK,EAA6B55B,OAAAk5B,EAAA,EAAAl5B,CAAkBm5B,EAAAK,EAAAD,GAC/CC,EACAK,SAAAD,MAAA,IACAJ,GAAAI,GAIA,OAAAJ,EAcA,SAAAM,EAAAC,EAAAC,EAAAt8B,EAAAC,GACA,IAAAs8B,EAAAv8B,EAAAq8B,EACAG,EAAAv8B,EAAAq8B,EACA1B,EAAAn5B,KAAAyjB,KAAAqX,IAAAC,KACA,OAAA/6B,KAAAkhB,MAAA3iB,EAAAu8B,EAAA3B,GAAAn5B,KAAAkhB,MAAA1iB,EAAAu8B,EAAA5B,IAuBO,SAAA1Q,EAAAjU,EAAAC,EAAAumB,EACPX,EAAAG,EAAAL,EAAAc,EACAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAgBz6B,OAAAg5B,EAAA,EAAAh5B,CAAqBb,KAAAkhB,MAAA8Z,EAAAxmB,GACrCxU,KAAAkhB,MAAA8Z,EAAAvmB,IAEA,OAAA0mB,EAAAh9B,OACA,OAAAm9B,EAAAjnB,OAGAinB,EAAA9lB,MAAAwlB,KAEA,IAAAO,EAAyB16B,OAAA0Z,EAAA,EAAA1Z,GACzBs6B,EAAApoB,QAAA,SAAAyoB,EAAAv9B,EAAA0M,GACI9J,OAAA0Z,EAAA,EAAA1Z,CAAM06B,EAAAC,EAAAx9B,UAGV,IAAAy9B,EAA2B56B,OAAA0Z,EAAA,EAAA1Z,CAAQ06B,GACnCG,EAA4B76B,OAAA0Z,EAAA,EAAA1Z,CAAS06B,GACrCI,EAAsB96B,OAAAg5B,EAAA,EAAAh5B,CACtBb,KAAAkhB,MAAA8Z,EAAAS,EAAApB,GACAr6B,KAAAkhB,MAAA8Z,EAAAU,EAAArB,IAEAuB,EAAAZ,EAAAX,EAEAc,EAAApoB,QAAA,SAAAyoB,EAAAv9B,EAAA0M,GACA,IAAAkxB,EAAAL,EAAAx9B,OAAA,GAAAu9B,EAAA,GACAO,IAAAN,EAAAx9B,OAAA,GAAAu9B,EAAA,IACAQ,EAAmBl7B,OAAA0Z,EAAA,EAAA1Z,CAAQ26B,EAAAx9B,QAC3Bg+B,EAAoBn7B,OAAA0Z,EAAA,EAAA1Z,CAAS26B,EAAAx9B,QAE7B29B,EAAAM,UACAT,EAAAU,MACAd,IACAI,EAAAU,MAAA1nB,MAAA,EAAA4mB,EAAAI,EAAAU,MAAAznB,OAAA,EAAA2mB,EACAS,EAAAD,EAAAE,EAAAF,EACAG,EAAAH,EAAAI,EAAAJ,KAGA,IAAAO,EAAsBt7B,OAAA0Z,EAAA,EAAA1Z,CAAUo6B,GA6GhC,OA3GAC,EAAAkB,eAAArpB,QAAA,SAAAspB,EAAAp+B,EAAA0M,GAqBA,IAAAjB,EAAA2yB,EAAA3yB,OACA7B,EAAAw0B,EAAAx0B,OACAnG,EAAAgI,EAAA,MAAA5H,EAAA4H,EAAA,MACA/H,EAAA+H,EAAA,MAAA3H,EAAA2H,EAAA,MACA9H,EAAA8H,EAAA,MAAA1H,EAAA0H,EAAA,MACA4yB,GAAAz0B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAoC,IAAA10B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAqC,GAAA30B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAsC,IAAA50B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAuC,GAAA70B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAwC,IAAA90B,EAAA,MAAAs0B,EAAA,IAAAhC,EAKAyC,EAAAl7B,EACAm7B,EAAA/6B,EACAJ,EAAA,EACAI,EAAA,EAMA,IAAAg7B,EAAA,CACA,CANAn7B,GAAAi7B,EACA76B,GAAA86B,EAKA,IAAAL,EAAAF,GACA,CALA16B,GAAAg7B,EACA56B,GAAA66B,EAIA,IAAAH,EAAAJ,GACA,KAAA36B,EAAAI,EAAA06B,EAAAF,GACA,KAAA36B,EAAAI,EAAA26B,EAAAJ,IAEAQ,EAAsBl8B,OAAAi5B,EAAA,EAAAj5B,CAAiBi8B,GACvC,GAAAC,EAAA,CAIAzB,EAAA0B,OACA1B,EAAA2B,YACA,IAAArC,GAAA0B,EAAAE,EAAAE,GAAA,EACA7B,GAAA0B,EAAAE,EAAAE,GAAA,EACAO,EAAAvC,EAAAC,EAAAC,EAAAyB,EAAAC,GACAY,EAAAxC,EAAAC,EAAAC,EAAA2B,EAAAC,GACAW,EAAAzC,EAAAC,EAAAC,EAAA6B,EAAAC,GAEArB,EAAA+B,OAAAF,EAAA,GAAAA,EAAA,IACA7B,EAAAgC,OAAAJ,EAAA,GAAAA,EAAA,IACA5B,EAAAgC,OAAAF,EAAA,GAAAA,EAAA,IACA9B,EAAAiC,OAEAjC,EAAAznB,UACAkpB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAT,EAAAC,GAEAjB,EAAA7lB,UAAA8lB,EAAA,GAAAqB,EACArB,EAAA,GAAAsB,GAEAvB,EAAA9lB,MAAA6kB,EAAAW,GACAX,EAAAW,GAEAM,EAAAW,UAAAN,EAAAtnB,OAAA,KACAinB,EAAAkC,aAGAnC,IACAC,EAAA0B,OAEA1B,EAAAmC,YAAA,QACAnC,EAAAoC,UAAA,EAEAxC,EAAAkB,eAAArpB,QAAA,SAAAspB,EAAAp+B,EAAA0M,GACA,IAAA9C,EAAAw0B,EAAAx0B,OACAy0B,GAAAz0B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAoC,IAAA10B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAqC,GAAA30B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAsC,IAAA50B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAuC,GAAA70B,EAAA,MAAAs0B,EAAA,IAAAhC,EACAwC,IAAA90B,EAAA,MAAAs0B,EAAA,IAAAhC,EAEAmB,EAAA2B,YACA3B,EAAA+B,OAAAb,EAAAC,GACAnB,EAAAgC,OAAAhB,EAAAC,GACAjB,EAAAgC,OAAAZ,EAAAC,GACArB,EAAAqC,YACArC,EAAAsC,WAGAtC,EAAAkC,WAEAlC,EAAAjnB,sCCvOO,SAAAwpB,EAAAC,EAAAtpB,EAAAupB,GACP,IAAAC,OAAA/1B,IAAA81B,EAAAD,EAAAG,QAAAF,GAAA,GAAAD,EACAI,EAAAF,EAAAh1B,QAAA,KAEA,OADAk1B,GAAA,IAAAA,EAAAF,EAAA7/B,OAAA+/B,GACA1pB,EAAAwpB,EAAA,IAAAh5B,MAAA,EAAAwP,EAAA0pB,GAAAC,KAAA,KAAAH,EAUO,SAAAI,EAAA3B,EAAAE,GAIP,IAHA,IAAA0B,GAAA,GAAA5B,GAAAlf,MAAA,KACA+gB,GAAA,GAAA3B,GAAApf,MAAA,KAEAtf,EAAA,EAAiBA,EAAA+B,KAAAE,IAAAm+B,EAAAlgC,OAAAmgC,EAAAngC,QAAoCF,IAAA,CACrD,IAAAsgC,EAAAC,SAAAH,EAAApgC,IAAA,QACAwgC,EAAAD,SAAAF,EAAArgC,IAAA,QAEA,GAAAsgC,EAAAE,EACA,SAEA,GAAAA,EAAAF,EACA,SAIA,SAxCAljC,EAAAC,EAAAC,EAAA,sBAAAsiC,IAAAxiC,EAAAC,EAAAC,EAAA,sBAAA6iC,kCCAA/iC,EAAAC,EAAAC,EAAA,sBAAAU,IAQA,IAAAs3B,EAAA,SAAAz0B,EAAAE,EAAAD,EAAAE,GAKAgO,KAAAnO,OAKAmO,KAAAjO,OAKAiO,KAAAlO,OAKAkO,KAAAhO,QAkGO,SAAAhD,EAAA6C,EAAAE,EAAAD,EAAAE,EAAA6e,GACP,YAAA7V,IAAA6V,GACAA,EAAAhf,OACAgf,EAAA9e,OACA8e,EAAA/e,OACA+e,EAAA7e,OACA6e,GAEA,IAAAyV,EAAAz0B,EAAAE,EAAAD,EAAAE,GAlGAs0B,EAAArlB,UAAAkX,SAAA,SAAA/H,GACA,OAAApQ,KAAAnR,WAAAuhB,EAAA,GAAAA,EAAA,KAOAkW,EAAArlB,UAAAwwB,kBAAA,SAAA5gB,GACA,OAAA7Q,KAAAnO,MAAAgf,EAAAhf,MAAAgf,EAAA9e,MAAAiO,KAAAjO,MACAiO,KAAAlO,MAAA+e,EAAA/e,MAAA+e,EAAA7e,MAAAgO,KAAAhO,MAQAs0B,EAAArlB,UAAApS,WAAA,SAAAyC,EAAAC,GACA,OAAAyO,KAAAnO,MAAAP,MAAA0O,KAAAjO,MAAAiO,KAAAlO,MAAAP,MAAAyO,KAAAhO,MAOAs0B,EAAArlB,UAAA5R,OAAA,SAAAwhB,GACA,OAAA7Q,KAAAnO,MAAAgf,EAAAhf,MAAAmO,KAAAlO,MAAA+e,EAAA/e,MACAkO,KAAAjO,MAAA8e,EAAA9e,MAAAiO,KAAAhO,MAAA6e,EAAA7e,MAMAs0B,EAAArlB,UAAA3R,OAAA,SAAAuhB,GACAA,EAAAhf,KAAAmO,KAAAnO,OACAmO,KAAAnO,KAAAgf,EAAAhf,MAEAgf,EAAA9e,KAAAiO,KAAAjO,OACAiO,KAAAjO,KAAA8e,EAAA9e,MAEA8e,EAAA/e,KAAAkO,KAAAlO,OACAkO,KAAAlO,KAAA+e,EAAA/e,MAEA+e,EAAA7e,KAAAgO,KAAAhO,OACAgO,KAAAhO,KAAA6e,EAAA7e,OAOAs0B,EAAArlB,UAAAjR,UAAA,WACA,OAAAgQ,KAAAhO,KAAAgO,KAAAlO,KAAA,GAMAw0B,EAAArlB,UAAAywB,QAAA,WACA,OAAA1xB,KAAA5P,WAAA4P,KAAAhQ,cAMAs2B,EAAArlB,UAAA7Q,SAAA,WACA,OAAA4P,KAAAjO,KAAAiO,KAAAnO,KAAA,GAOAy0B,EAAArlB,UAAA5Q,WAAA,SAAAwgB,GACA,OAAA7Q,KAAAnO,MAAAgf,EAAA9e,MACAiO,KAAAjO,MAAA8e,EAAAhf,MACAmO,KAAAlO,MAAA+e,EAAA7e,MACAgO,KAAAhO,MAAA6e,EAAA/e,MAyBexD,EAAA,kCC3If,IAAAqC,EAAAvC,EAAA,KAAAujC,EAAAvjC,EAAA,KAAAwjC,EAAAxjC,EAAA,KA2BAyjC,EAAA,SAAAC,GACA,SAAAD,EAAAE,GAEAD,EAAAz+B,KAAA2M,MAKAA,KAAAgyB,mBAAAh3B,IAAA+2B,IAAA,KAMA/xB,KAAAiyB,OAAA,EAMAjyB,KAAAkyB,SAAA,GAMAlyB,KAAAmyB,QAAA,KAMAnyB,KAAAoyB,QAAA,KAgPA,OA5OAN,IAAAD,EAAA7uB,UAAA8uB,GACAD,EAAA5wB,UAAArN,OAAAqP,OAAA6uB,KAAA7wB,WACA4wB,EAAA5wB,UAAAiC,YAAA2uB,EAMAA,EAAA5wB,UAAAoxB,eAAA,WACA,OAAAryB,KAAAsyB,WAAAtyB,KAAAgyB,eAOAH,EAAA5wB,UAAA/E,MAAA,WACA8D,KAAAiyB,OAAA,EACAjyB,KAAAkyB,SAAA,GACAlyB,KAAAmyB,QAAA,KACAnyB,KAAAoyB,QAAA,KACApyB,KAAA6L,cAAuB+lB,EAAA,EAASp5B,QAQhCq5B,EAAA5wB,UAAAsxB,YAAA,SAAAz2B,GACA,OAAAkE,KAAAkyB,SAAAx1B,eAAAZ,IAYA+1B,EAAA5wB,UAAA6E,QAAA,SAAAgE,EAAA3W,GAEA,IADA,IAAAq/B,EAAAxyB,KAAAmyB,QACAK,GACA1oB,EAAAzW,KAAAF,EAAAq/B,EAAAC,OAAAD,EAAAE,KAAA1yB,MACAwyB,IAAAG,OASAd,EAAA5wB,UAAAuK,IAAA,SAAA1P,GACA,IAAA02B,EAAAxyB,KAAAkyB,SAAAp2B,GAGA,OAFIlI,OAAAjD,EAAA,EAAAiD,MAAMoH,IAAAw3B,EACV,IACAA,IAAAxyB,KAAAoyB,QACAI,EAAAC,QACKD,IAAAxyB,KAAAmyB,SACLnyB,KAAAmyB,QAAsCnyB,KAAAmyB,QAAA,MACtCnyB,KAAAmyB,QAAAS,MAAA,OAEAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,OAEAH,EAAAG,MAAA,KACAH,EAAAI,MAAA5yB,KAAAoyB,QACApyB,KAAAoyB,QAAAO,MAAAH,EACAxyB,KAAAoyB,QAAAI,EACAA,EAAAC,SASAZ,EAAA5wB,UAAA/C,OAAA,SAAApC,GACA,IAAA02B,EAAAxyB,KAAAkyB,SAAAp2B,GAkBA,OAjBIlI,OAAAjD,EAAA,EAAAiD,MAAMoH,IAAAw3B,EAAA,IACVA,IAAAxyB,KAAAoyB,SACApyB,KAAAoyB,QAAsCI,EAAA,MACtCxyB,KAAAoyB,UACApyB,KAAAoyB,QAAAO,MAAA,OAEKH,IAAAxyB,KAAAmyB,SACLnyB,KAAAmyB,QAAsCK,EAAA,MACtCxyB,KAAAmyB,UACAnyB,KAAAmyB,QAAAS,MAAA,QAGAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,cAEA3yB,KAAAkyB,SAAAp2B,KACAkE,KAAAiyB,OACAO,EAAAC,QAOAZ,EAAA5wB,UAAAqxB,SAAA,WACA,OAAAtyB,KAAAiyB,QAOAJ,EAAA5wB,UAAAwK,QAAA,WACA,IAEA+mB,EAFAl3B,EAAA,IAAAvD,MAAAiI,KAAAiyB,QACAjhC,EAAA,EAEA,IAAAwhC,EAAAxyB,KAAAoyB,QAA8BI,EAAOA,IAAAI,MACrCt3B,EAAAtK,KAAAwhC,EAAAE,KAEA,OAAAp3B,GAOAu2B,EAAA5wB,UAAA9E,UAAA,WACA,IAEAq2B,EAFA31B,EAAA,IAAA9E,MAAAiI,KAAAiyB,QACAjhC,EAAA,EAEA,IAAAwhC,EAAAxyB,KAAAoyB,QAA8BI,EAAOA,IAAAI,MACrC/1B,EAAA7L,KAAAwhC,EAAAC,OAEA,OAAA51B,GAOAg1B,EAAA5wB,UAAA4xB,SAAA,WACA,OAAA7yB,KAAAmyB,QAAAM,QAOAZ,EAAA5wB,UAAA6xB,YAAA,WACA,OAAA9yB,KAAAmyB,QAAAO,MAQAb,EAAA5wB,UAAA8xB,aAAA,WACA,OAAA/yB,KAAAoyB,QAAAM,MAOAb,EAAA5wB,UAAA0S,IAAA,WACA,IAAA6e,EAAAxyB,KAAAmyB,QAUA,cATAnyB,KAAAkyB,SAAAM,EAAAE,MACAF,EAAAG,QACAH,EAAAG,MAAAC,MAAA,MAEA5yB,KAAAmyB,QAAoCK,EAAA,MACpCxyB,KAAAmyB,UACAnyB,KAAAoyB,QAAA,QAEApyB,KAAAiyB,OACAO,EAAAC,QAQAZ,EAAA5wB,UAAA+xB,QAAA,SAAAl3B,EAAA3K,GACA6O,KAAAwL,IAAA1P,GACAkE,KAAAkyB,SAAAp2B,GAAA22B,OAAAthC,GAQA0gC,EAAA5wB,UAAA2H,IAAA,SAAA9M,EAAA3K,GACIyC,OAAAjD,EAAA,EAAAiD,GAAMkI,KAAAkE,KAAAkyB,UACV,IACA,IAAAM,EAAiC,CACjCE,KAAA52B,EACA62B,MAAA,KACAC,MAAA5yB,KAAAoyB,QACAK,OAAAthC,GAEA6O,KAAAoyB,QAGApyB,KAAAoyB,QAAAO,MAAAH,EAFAxyB,KAAAmyB,QAAAK,EAIAxyB,KAAAoyB,QAAAI,EACAxyB,KAAAkyB,SAAAp2B,GAAA02B,IACAxyB,KAAAiyB,QASAJ,EAAA5wB,UAAAgyB,QAAA,SAAAj/B,GACAgM,KAAAgyB,cAAAh+B,GAOA69B,EAAA5wB,UAAAiyB,MAAA,WACA,KAAAlzB,KAAAqyB,kBACAryB,KAAA2T,OAIAke,EAhRA,CAiREF,EAAA,GAEarjC,EAAA,kCC9Sf,IAAA6qB,EAAA/qB,EAAA,KAAAujC,EAAAvjC,EAAA,KAAAwjC,EAAAxjC,EAAA,KAkBAgd,EAAA,SAAA0mB,GACA,SAAA1mB,IAEA0mB,EAAAz+B,KAAA2M,MAMAA,KAAAmzB,UAAA,EAwFA,OApFArB,IAAA1mB,EAAApI,UAAA8uB,GACA1mB,EAAAnK,UAAArN,OAAAqP,OAAA6uB,KAAA7wB,WACAmK,EAAAnK,UAAAiC,YAAAkI,EAMAA,EAAAnK,UAAAuO,QAAA,aACAxP,KAAAmzB,UACAnzB,KAAA6L,cAAuB+lB,EAAA,EAASr5B,SAShC6S,EAAAnK,UAAAuN,YAAA,WACA,OAAAxO,KAAAmzB,WAYA/nB,EAAAnK,UAAAmyB,GAAA,SAAAv4B,EAAAP,GACA,GAAAvC,MAAAkG,QAAApD,GAAA,CAGA,IAFA,IAAAw4B,EAAAx4B,EAAA3J,OACAoK,EAAA,IAAAvD,MAAAs7B,GACAriC,EAAA,EAAqBA,EAAAqiC,IAASriC,EAC9BsK,EAAAtK,GAAkB4C,OAAAulB,EAAA,EAAAvlB,CAAMoM,KAAAnF,EAAA7J,GAAAsJ,GAExB,OAAAgB,EAEA,OAAa1H,OAAAulB,EAAA,EAAAvlB,CAAMoM,KAAyB,EAAA1F,IAa5C8Q,EAAAnK,UAAAqyB,KAAA,SAAAz4B,EAAAP,GACA,GAAAvC,MAAAkG,QAAApD,GAAA,CAGA,IAFA,IAAAw4B,EAAAx4B,EAAA3J,OACAoK,EAAA,IAAAvD,MAAAs7B,GACAriC,EAAA,EAAqBA,EAAAqiC,IAASriC,EAC9BsK,EAAAtK,GAAkB4C,OAAAulB,EAAA,EAAAvlB,CAAUoM,KAAAnF,EAAA7J,GAAAsJ,GAE5B,OAAAgB,EAEA,OAAa1H,OAAAulB,EAAA,EAAAvlB,CAAUoM,KAAyB,EAAA1F,IAUhD8Q,EAAAnK,UAAAsyB,GAAA,SAAA14B,EAAAP,GACA,GAAAvC,MAAAkG,QAAApD,GACA,QAAA7J,EAAA,EAAAC,EAAA4J,EAAA3J,OAAuCF,EAAAC,IAAQD,EACvC4C,OAAAulB,EAAA,EAAAvlB,CAAQoM,KAAAnF,EAAA7J,GAAAsJ,QAIV1G,OAAAulB,EAAA,EAAAvlB,CAAQoM,KAAyB,EAAA1F,IAIvC8Q,EAjGA,CAkGEumB,EAAA,GAoBarjC,EAAA,kCCjIAA,EAAA,GACfklC,QAAA,UACAC,QAAA,UACAlxB,OAAA,SACAmxB,QAAA,SACAC,eAAA,gBACAC,eAAA,gBACAzZ,OAAA,wCCdA,IAAAxP,EAAAvc,EAAA,KAAAylC,EAAAzlC,EAAA,KAAA0lC,EAAA1lC,EAAA,KAAA2lC,EAAA3lC,EAAA,KAAA2c,EAAA3c,EAAA,KAqCAyrB,EAAA,SAAA1O,GACA,SAAA0O,EAAA9Z,GAEAoL,EAAA9X,KAAA2M,MAKA,IAAA+gB,EAAqBntB,OAAAmX,EAAA,EAAAnX,CAAM,GAAGmM,GAC9BghB,EAAe+S,EAAA,EAAaN,cAC5Bx4B,IAAA+E,EAAAi0B,QAAAj0B,EAAAi0B,QAAA,EACAjT,EAAe+S,EAAA,EAAaL,cAC5Bz4B,IAAA+E,EAAA0b,SAAA1b,EAAA0b,QACAsF,EAAe+S,EAAA,EAAaJ,SAAA3zB,EAAAqb,OAC5B2F,EAAe+S,EAAA,EAAaH,qBAC5B34B,IAAA+E,EAAA4b,cAAA5b,EAAA4b,cAAAnpB,IACAuuB,EAAe+S,EAAA,EAAaF,qBAC5B54B,IAAA+E,EAAA2b,cAAA3b,EAAA2b,cAAA,EAEA1b,KAAAuL,cAAAwV,GAMA/gB,KAAAi0B,OAAA,KAOAj0B,KAAAnF,KA+LA,OA3LAsQ,IAAA0O,EAAA7W,UAAAmI,GACA0O,EAAA5Y,UAAArN,OAAAqP,OAAAkI,KAAAlK,WACA4Y,EAAA5Y,UAAAiC,YAAA2W,EAMAA,EAAA5Y,UAAAkW,QAAA,WACA,OAAAnX,KAAAnF,MAMAgf,EAAA5Y,UAAA0Z,cAAA,WAEA,IAAAuZ,EAAAl0B,KAAAi0B,QAA4C,CAC5CE,MAAAn0B,KACAkb,SAAA,GAWA,OATAgZ,EAAAF,QAAoBpgC,OAAAmgC,EAAA,EAAAngC,CAAKoM,KAAAo0B,aAAA,KACzBF,EAAAG,YAAAr0B,KAAA6a,iBACAqZ,EAAAzY,QAAAzb,KAAAs0B,aACAJ,EAAAnjC,OAAAiP,KAAAoB,YACA8yB,EAAA9Y,OAAApb,KAAAmb,aAAA,EACA+Y,EAAAvY,cAAA3b,KAAAu0B,mBACAL,EAAAxY,cAAA3oB,KAAAE,IAAA+M,KAAAw0B,mBAAA,GACAx0B,KAAAi0B,OAAAC,EAEAA,GASAra,EAAA5Y,UAAAqZ,eAAA,SAAAC,GACA,OAAW3mB,OAAA+W,EAAA,EAAA/W,IASXimB,EAAA5Y,UAAAuZ,oBAAA,SAAAC,GACA,OAAW7mB,OAAA+W,EAAA,EAAA/W,IAUXimB,EAAA5Y,UAAAG,UAAA,WACA,OACyDpB,KAAAwL,IAAcsoB,EAAA,EAAavxB,SAUpFsX,EAAA5Y,UAAAszB,iBAAA,WACA,OAA6Bv0B,KAAAwL,IAAcsoB,EAAA,EAAaH,iBASxD9Z,EAAA5Y,UAAAuzB,iBAAA,WACA,OAA6Bx0B,KAAAwL,IAAcsoB,EAAA,EAAaF,iBASxD/Z,EAAA5Y,UAAAmzB,WAAA,WACA,OAA6Bp0B,KAAAwL,IAAcsoB,EAAA,EAAaN,UAOxD3Z,EAAA5Y,UAAA4Z,eAAA,WACA,OAAWjnB,OAAA+W,EAAA,EAAA/W,IASXimB,EAAA5Y,UAAAqzB,WAAA,WACA,OAA8Bt0B,KAAAwL,IAAcsoB,EAAA,EAAaL,UAUzD5Z,EAAA5Y,UAAAka,UAAA,WACA,OAA6Bnb,KAAAwL,IAAcsoB,EAAA,EAAaJ,UAUxD7Z,EAAA5Y,UAAAc,UAAA,SAAAhR,GACAiP,KAAA4I,IAAakrB,EAAA,EAAavxB,OAAAxR,IAS1B8oB,EAAA5Y,UAAAwzB,iBAAA,SAAA9Y,GACA3b,KAAA4I,IAAakrB,EAAA,EAAaH,eAAAhY,IAS1B9B,EAAA5Y,UAAAyzB,iBAAA,SAAAhZ,GACA1b,KAAA4I,IAAakrB,EAAA,EAAaF,eAAAlY,IAS1B7B,EAAA5Y,UAAA0zB,WAAA,SAAAX,GACAh0B,KAAA4I,IAAakrB,EAAA,EAAaN,QAAAQ,IAS1Bna,EAAA5Y,UAAA2zB,WAAA,SAAAnZ,GACAzb,KAAA4I,IAAakrB,EAAA,EAAaL,QAAAhY,IAU1B5B,EAAA5Y,UAAA4zB,UAAA,SAAAC,GACA90B,KAAA4I,IAAakrB,EAAA,EAAaJ,QAAAoB,IAG1Bjb,EA/NA,CAgOEga,EAAA,GAGavlC,EAAA,kCCxQf,IAAAqC,EAAAvC,EAAA,KAAA8jB,EAAA9jB,EAAA,KAAAwjC,EAAAxjC,EAAA,KAAAkrB,EAAAlrB,EAAA,KA4DA2mC,EAAA,SAAA5pB,GACA,SAAA4pB,EAAAC,GAuCA,GArCA7pB,EAAA9X,KAAA2M,MAMAA,KAAAi1B,SAAAj6B,EAMAgF,KAAAk1B,cAAA,WAOAl1B,KAAAm1B,OAAA,KAMAn1B,KAAAo1B,oBAAAp6B,EAMAgF,KAAAq1B,mBAAA,KAEIzhC,OAAAse,EAAA,EAAAte,CACJoM,KAAYpM,OAAA0lB,EAAA,EAAA1lB,CAAkBoM,KAAAk1B,eAC9Bl1B,KAAAs1B,uBAAAt1B,MAEAg1B,EACA,GAA8B,qBAAA3mB,sBAAA,CAC9B,IAAA6N,EAAuE,EACvElc,KAAAu1B,YAAArZ,OACO,CAEP,IAAA6E,EAAAiU,EACAh1B,KAAAuL,cAAAwV,IAqKA,OAhKA5V,IAAA4pB,EAAA/xB,UAAAmI,GACA4pB,EAAA9zB,UAAArN,OAAAqP,OAAAkI,KAAAlK,WACA8zB,EAAA9zB,UAAAiC,YAAA6xB,EAQAA,EAAA9zB,UAAAxS,MAAA,WACA,IAAAA,EAAA,IAAAsmC,EAAA/0B,KAAA0L,iBACAjd,EAAA+mC,gBAAAx1B,KAAAy1B,mBACA,IAAAvZ,EAAAlc,KAAA01B,cACAxZ,GACAztB,EAAA8mC,YAAArZ,EAAAztB,SAEA,IAAAknC,EAAA31B,KAAAgrB,WAIA,OAHA2K,GACAlnC,EAAAs8B,SAAA4K,GAEAlnC,GAWAsmC,EAAA9zB,UAAAy0B,YAAA,WACA,OACgE11B,KAAAwL,IAAAxL,KAAAk1B,gBAWhEH,EAAA9zB,UAAA20B,MAAA,WACA,OAAA51B,KAAAi1B,KAUAF,EAAA9zB,UAAAw0B,gBAAA,WACA,OAAAz1B,KAAAk1B,eASAH,EAAA9zB,UAAA+pB,SAAA,WACA,OAAAhrB,KAAAm1B,QASAJ,EAAA9zB,UAAA40B,iBAAA,WACA,OAAA71B,KAAAo1B,gBAMAL,EAAA9zB,UAAA60B,sBAAA,WACA91B,KAAAwP,WAMAulB,EAAA9zB,UAAAq0B,uBAAA,WACAt1B,KAAAq1B,qBACMzhC,OAAAse,EAAA,EAAAte,CAAaoM,KAAAq1B,oBACnBr1B,KAAAq1B,mBAAA,MAEA,IAAAnZ,EAAAlc,KAAA01B,cACAxZ,IACAlc,KAAAq1B,mBAAgCzhC,OAAAse,EAAA,EAAAte,CAAMsoB,EAC9B0V,EAAA,EAASr5B,OAAAyH,KAAA81B,sBAAA91B,OAEjBA,KAAAwP,WAUAulB,EAAA9zB,UAAAs0B,YAAA,SAAArZ,GACAlc,KAAA4I,IAAA5I,KAAAk1B,cAAAhZ,IAWA6Y,EAAA9zB,UAAA8pB,SAAA,SAAA4K,GACA31B,KAAAm1B,OAAAQ,EACA31B,KAAAo1B,eAAAO,EAgDO,SAAAr/B,GACP,sBAAAA,EACA,OAAAA,EAKA,IAAAy/B,EACA,GAAAh+B,MAAAkG,QAAA3H,GACAy/B,EAAAz/B,MACK,CACC1C,OAAAjD,EAAA,EAAAiD,CAA2B,qBAAAunB,UACjC,IACA,IAAAwa,EAAgE,EAChEI,EAAA,CAAAJ,GAEA,kBACA,OAAAI,GAjEAC,CAAAL,QAAA36B,EACAgF,KAAAwP,WAYAulB,EAAA9zB,UAAAg1B,MAAA,SAAAC,GACAl2B,KAAAi1B,IAAAiB,EACAl2B,KAAAwP,WAUAulB,EAAA9zB,UAAAu0B,gBAAA,SAAAxU,GACIptB,OAAAse,EAAA,EAAAte,CACJoM,KAAYpM,OAAA0lB,EAAA,EAAA1lB,CAAkBoM,KAAAk1B,eAC9Bl1B,KAAAs1B,uBAAAt1B,MACAA,KAAAk1B,cAAAlU,EACIptB,OAAAse,EAAA,EAAAte,CACJoM,KAAYpM,OAAA0lB,EAAA,EAAA1lB,CAAkBoM,KAAAk1B,eAC9Bl1B,KAAAs1B,uBAAAt1B,MACAA,KAAAs1B,0BAGAP,EApNA,CAqNEzb,EAAA,GAgCahrB,EAAA,kCC1SAA,EAAA,GACf6nC,aAAA,cACAC,KAAA,OACAC,KAAA,OACAC,IAAA,qCCXA,IAAAnd,EAAA/qB,EAAA,KAAAgrB,EAAAhrB,EAAA,KAAAmoC,EAAAnoC,EAAA,KAAAooC,EAAApoC,EAAA,KAAAqoC,EAAAroC,EAAA,KAAAsf,EAAAtf,EAAA,KAgBAsoC,EAAA,SAAA9oB,GACA,SAAA8oB,EAAAC,GAEA/oB,EAAAva,KAAA2M,MAMAA,KAAA42B,YAAAD,GAAA,KAEA32B,KAAA62B,0BA4PA,OAzPAjpB,IAAA8oB,EAAA1zB,UAAA4K,GACA8oB,EAAAz1B,UAAArN,OAAAqP,OAAA2K,KAAA3M,WACAy1B,EAAAz1B,UAAAiC,YAAAwzB,EAKAA,EAAAz1B,UAAA61B,0BAAA,WACA,GAAA92B,KAAA42B,YAGA,QAAA5lC,EAAA,EAAAC,EAAA+O,KAAA42B,YAAA1lC,OAAiDF,EAAAC,IAAQD,EACnD4C,OAAAulB,EAAA,EAAAvlB,CACNoM,KAAA42B,YAAA5lC,GAA6BooB,EAAA,EAAS7gB,OACtCyH,KAAAwP,QAAAxP,OAOA02B,EAAAz1B,UAAA41B,wBAAA,WACA,GAAA72B,KAAA42B,YAGA,QAAA5lC,EAAA,EAAAC,EAAA+O,KAAA42B,YAAA1lC,OAAiDF,EAAAC,IAAQD,EACnD4C,OAAAulB,EAAA,EAAAvlB,CACNoM,KAAA42B,YAAA5lC,GAA6BooB,EAAA,EAAS7gB,OACtCyH,KAAAwP,QAAAxP,OAUA02B,EAAAz1B,UAAAxS,MAAA,WACA,IAAAsoC,EAAA,IAAAL,EAAA,MAEA,OADAK,EAAAC,cAAAh3B,KAAA42B,aACAG,GAMAL,EAAAz1B,UAAA4V,eAAA,SAAAvlB,EAAAC,EAAAykB,EAAAI,GACA,GAAAA,EAA6BxiB,OAAA2iC,EAAA,EAAA3iC,CAAwBoM,KAAAoB,YAAA9P,EAAAC,GACrD,OAAA6kB,EAGA,IADA,IAAA6gB,EAAAj3B,KAAA42B,YACA5lC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EACnDolB,EAAA6gB,EAAAjmC,GAAA6lB,eACAvlB,EAAAC,EAAAykB,EAAAI,GAEA,OAAAA,GAMAsgB,EAAAz1B,UAAApS,WAAA,SAAAyC,EAAAC,GAEA,IADA,IAAA0lC,EAAAj3B,KAAA42B,YACA5lC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EACnD,GAAAimC,EAAAjmC,GAAAnC,WAAAyC,EAAAC,GACA,SAGA,UAMAmlC,EAAAz1B,UAAA8M,cAAA,SAAAhd,GACI6C,OAAA2iC,EAAA,EAAA3iC,CAAmB7C,GAEvB,IADA,IAAAkmC,EAAAj3B,KAAA42B,YACA5lC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EAC7C4C,OAAA2iC,EAAA,EAAA3iC,CAAM7C,EAAAkmC,EAAAjmC,GAAAoQ,aAEZ,OAAArQ,GAQA2lC,EAAAz1B,UAAAi2B,cAAA,WACA,OAAAC,EAAAn3B,KAAA42B,cAMAF,EAAAz1B,UAAAm2B,mBAAA,WACA,OAAAp3B,KAAA42B,aAMAF,EAAAz1B,UAAAoN,sBAAA,SAAAC,GAMA,GALAtO,KAAAuO,4BAAAvO,KAAAwO,gBACM5a,OAAA8Z,EAAA,EAAA9Z,CAAKoM,KAAAyO,yBACXzO,KAAA0O,yCAAA,EACA1O,KAAAuO,2BAAAvO,KAAAwO,eAEAF,EAAA,GACA,IAAAtO,KAAA0O,0CACAJ,EAAAtO,KAAA0O,yCACA,OAAA1O,KAEA,IAAAlE,EAAAwS,EAAAK,WACA,GAAA3O,KAAAyO,wBAAA/R,eAAAZ,GACA,OAAAkE,KAAAyO,wBAAA3S,GAKA,IAHA,IAAAu7B,EAAA,GACAJ,EAAAj3B,KAAA42B,YACAU,GAAA,EACAtmC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA6CF,EAAAC,IAAQD,EAAA,CACrD,IAAAkrB,EAAA+a,EAAAjmC,GACA4d,EAAAsN,EAAA7N,sBAAAC,GACA+oB,EAAAx7B,KAAA+S,GACAA,IAAAsN,IACAob,GAAA,GAGA,GAAAA,EAAA,CACA,IAAAC,EAAA,IAAAb,EAAA,MAGA,OAFAa,EAAAC,mBAAAH,GACAr3B,KAAAyO,wBAAA3S,GAAAy7B,EACAA,EAGA,OADAv3B,KAAA0O,yCAAAJ,EACAtO,MASA02B,EAAAz1B,UAAAkW,QAAA,WACA,OAAWsf,EAAA,EAAYj3B,qBAOvBk3B,EAAAz1B,UAAAoW,iBAAA,SAAAtmB,GAEA,IADA,IAAAkmC,EAAAj3B,KAAA42B,YACA5lC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EACnD,GAAAimC,EAAAjmC,GAAAqmB,iBAAAtmB,GACA,SAGA,UAMA2lC,EAAAz1B,UAAA3Q,QAAA,WACA,WAAA0P,KAAA42B,YAAA1lC,QAOAwlC,EAAAz1B,UAAAwO,OAAA,SAAAtF,EAAAuF,GAEA,IADA,IAAAunB,EAAAj3B,KAAA42B,YACA5lC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EACnDimC,EAAAjmC,GAAAye,OAAAtF,EAAAuF,GAEA1P,KAAAwP,WAOAknB,EAAAz1B,UAAAsH,MAAA,SAAA0B,EAAA0F,EAAAC,GACA,IAAAF,EAAAE,EACAF,IACAA,EAAe9b,OAAA2iC,EAAA,EAAA3iC,CAASoM,KAAAoB,cAGxB,IADA,IAAA61B,EAAAj3B,KAAA42B,YACA5lC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EACnDimC,EAAAjmC,GAAAuX,MAAA0B,EAAA0F,EAAAD,GAEA1P,KAAAwP,WAQAknB,EAAAz1B,UAAA+1B,cAAA,SAAAC,GACAj3B,KAAAw3B,mBAAAL,EAAAF,KAMAP,EAAAz1B,UAAAu2B,mBAAA,SAAAP,GACAj3B,KAAA82B,4BACA92B,KAAA42B,YAAAK,EACAj3B,KAAA62B,0BACA72B,KAAAwP,WAOAknB,EAAAz1B,UAAAvQ,eAAA,SAAAkF,GAEA,IADA,IAAAqhC,EAAAj3B,KAAA42B,YACA5lC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EACnDimC,EAAAjmC,GAAAN,eAAAkF,GAEAoK,KAAAwP,WAOAknB,EAAAz1B,UAAAuH,UAAA,SAAAtT,EAAAC,GAEA,IADA,IAAA8hC,EAAAj3B,KAAA42B,YACA5lC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EACnDimC,EAAAjmC,GAAAwX,UAAAtT,EAAAC,GAEA6K,KAAAwP,WAMAknB,EAAAz1B,UAAA4R,gBAAA,WACA7S,KAAA82B,4BACAlpB,EAAA3M,UAAA4R,gBAAAxf,KAAA2M,OAGA02B,EAvQA,CAwQEF,EAAA,GAOF,SAAAW,EAAAF,GAEA,IADA,IAAAQ,EAAA,GACAzmC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAAyCF,EAAAC,IAAQD,EACjDymC,EAAA57B,KAAAo7B,EAAAjmC,GAAAvC,SAEA,OAAAgpC,EAIenpC,EAAA,kCCxSf,IAAAqc,EAAAvc,EAAA,KAAAylC,EAAAzlC,EAAA,KAAAmoC,EAAAnoC,EAAA,KAAAspC,EAAAtpC,EAAA,KAAAupC,EAAAvpC,EAAA,KAAAwpC,EAAAxpC,EAAA,KAAAypC,EAAAzpC,EAAA,KAeA0pC,EAAmBlkC,OAAAikC,EAAA,EAAAjkC,GAenBga,EAAA,SAAAzC,GACA,SAAAyC,IAEAzC,EAAA9X,KAAA2M,MAMAA,KAAAI,QAAmBxM,OAAA2iC,EAAA,EAAA3iC,GAMnBoM,KAAA+3B,iBAAA,EAMA/3B,KAAAyO,wBAAA,GAMAzO,KAAA0O,yCAAA,EAMA1O,KAAAuO,2BAAA,EA2NA,OAvNApD,IAAAyC,EAAA5K,UAAAmI,GACAyC,EAAA3M,UAAArN,OAAAqP,OAAAkI,KAAAlK,WACA2M,EAAA3M,UAAAiC,YAAA0K,EAOAA,EAAA3M,UAAAxS,MAAA,WACA,OAAWmF,OAAA+W,EAAA,EAAA/W,IAWXga,EAAA3M,UAAA4V,eAAA,SAAAvlB,EAAAC,EAAAykB,EAAAI,GACA,OAAWxiB,OAAA+W,EAAA,EAAA/W,IAQXga,EAAA3M,UAAApS,WAAA,SAAAyC,EAAAC,GACA,UAWAqc,EAAA3M,UAAA+2B,gBAAA,SAAAl1B,EAAAm1B,GACA,IAAAjiB,EAAAiiB,GAAA,CAAA1hB,SAEA,OADAvW,KAAA6W,eAAA/T,EAAA,GAAAA,EAAA,GAAAkT,EAAAxjB,KACAwjB,GAUApI,EAAA3M,UAAAi3B,qBAAA,SAAAxmC,GACA,OAAAsO,KAAAnR,WAAA6C,EAAA,GAAAA,EAAA,KASAkc,EAAA3M,UAAA8M,cAAA,SAAAhd,GACA,OAAW6C,OAAA+W,EAAA,EAAA/W,IASXga,EAAA3M,UAAAG,UAAA,SAAAhQ,GAKA,OAJA4O,KAAA+3B,iBAAA/3B,KAAAwO,gBACAxO,KAAAI,QAAAJ,KAAA+N,cAAA/N,KAAAI,SACAJ,KAAA+3B,gBAAA/3B,KAAAwO,eAEW5a,OAAA2iC,EAAA,EAAA3iC,CAAcoM,KAAAI,QAAAhP,IAWzBwc,EAAA3M,UAAAwO,OAAA,SAAAtF,EAAAuF,GACI9b,OAAA+W,EAAA,EAAA/W,IAcJga,EAAA3M,UAAAsH,MAAA,SAAA0B,EAAA0F,EAAAC,GACIhc,OAAA+W,EAAA,EAAA/W,IAaJga,EAAA3M,UAAAgW,SAAA,SAAAjD,GACA,OAAAhU,KAAAqO,sBAAA2F,MAWApG,EAAA3M,UAAAoN,sBAAA,SAAAC,GACA,OAAW1a,OAAA+W,EAAA,EAAA/W,IAQXga,EAAA3M,UAAAkW,QAAA,WACA,OAAWvjB,OAAA+W,EAAA,EAAA/W,IAWXga,EAAA3M,UAAAvQ,eAAA,SAAAkF,GACIhC,OAAA+W,EAAA,EAAA/W,IASJga,EAAA3M,UAAAoW,iBAAA,SAAAtmB,GACA,OAAW6C,OAAA+W,EAAA,EAAA/W,IAWXga,EAAA3M,UAAAuH,UAAA,SAAAtT,EAAAC,GACIvB,OAAA+W,EAAA,EAAA/W,IAkBJga,EAAA3M,UAAA2F,UAAA,SAAAnK,EAAAkI,GAEA,IAAAooB,EAAqBn5B,OAAA+jC,EAAA,EAAA/jC,CAAa6I,GAClC7G,EAAAm3B,EAAA1rB,YAA+Cu2B,EAAA,EAAKjrB,YACpD,SAAAwrB,EAAAC,EAAAvlC,GACA,IAAAwlC,EAAAtL,EAAA3rB,YACAk3B,EAAAvL,EAAAvrB,iBACA+G,EAAoB3U,OAAA2iC,EAAA,EAAA3iC,CAAS0kC,GAAoB1kC,OAAA2iC,EAAA,EAAA3iC,CAASykC,GAO1D,OANQzkC,OAAAikC,EAAA,EAAAjkC,CAAgBkkC,EACxBQ,EAAA,GAAAA,EAAA,GACA/vB,KAAA,EACA,KACQ3U,OAAA8jC,EAAA,EAAA9jC,CAAWukC,EAAA,EAAAA,EAAAjnC,OAAA2B,EACnBilC,EAAAM,GACexkC,OAAA+jC,EAAA,EAAA/jC,CAAYm5B,EAAApoB,EAAZ/Q,CAAYukC,EAAAC,EAAAvlC,IAErBe,OAAA+jC,EAAA,EAAA/jC,CAAYm5B,EAAApoB,GAElB,OADA3E,KAAAtP,eAAAkF,GACAoK,MAGA4N,EA5PA,CA6PEimB,EAAA,GAGavlC,EAAA,kCC1QR,SAAAwX,EAAApT,EAAAC,EAAAC,EAAAC,EAAAK,EAAAC,GAIP,IAHA,IAEAolC,EAFAta,EAAA,CAAAvrB,EAAAC,GAAAD,EAAAC,EAAA,IACAurB,EAAA,GAEQvrB,EAAAE,EAAAD,EAAyBD,GAAAE,EAAA,CAIjC,GAHAqrB,EAAA,GAAAxrB,EAAAC,EAAAE,GACAqrB,EAAA,GAAAxrB,EAAAC,EAAAE,EAAA,GACA0lC,EAAArlC,EAAAG,KAAAF,EAAA8qB,EAAAC,GAEA,OAAAqa,EAEAta,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAEA,SAlCA9vB,EAAAC,EAAAC,EAAA,sBAAAwX,kCCAA1X,EAAAC,EAAAC,EAAA,sBAAAkqC,IAAApqC,EAAAC,EAAAC,EAAA,sBAAAmqC,IAAArqC,EAAAC,EAAAC,EAAA,sBAAAoqC,IAAA,IAAA/W,EAAAvzB,EAAA,KAAAuqC,EAAAvqC,EAAA,KAgBO,SAAAoqC,EAAA9lC,EAAAC,EAAAC,EAAAC,EAAAmwB,EAAAjT,GACP,IAAA6oB,EAAAriB,IACAsiB,EAAAtiB,IACAlf,GAAAzE,EAAAD,GAAAE,EACA,OAAAwE,EACAuhC,EAAAlmC,EAAAC,GACAkmC,EAAAnmC,EAAAC,EAAA,QACG,MAAA0E,EACHuhC,GAAA,EAAA5V,GAAAtwB,EAAAC,GACAqwB,EAAAtwB,EAAAC,EAAAE,GACAgmC,GAAA,EAAA7V,GAAAtwB,EAAAC,EAAA,GACAqwB,EAAAtwB,EAAAC,EAAAE,EAAA,QACG,OAAAwE,EAAA,CAKH,IAJA,IAAA3C,EAAAhC,EAAAC,GACAmC,EAAApC,EAAAC,EAAA,GACAzB,EAAA,EACA4nC,EAAA,IACA9nC,EAAA2B,EAAAE,EAAiC7B,EAAA4B,EAAS5B,GAAA6B,EAAA,CAC1C,IAAA8B,EAAAjC,EAAA1B,GACA+D,EAAArC,EAAA1B,EAAA,GACAE,GAAA6B,KAAAyjB,MAAA7hB,EAAAD,IAAAC,EAAAD,IAAAK,EAAAD,IAAAC,EAAAD,IACAgkC,EAAAj9B,KAAA3K,GACAwD,EAAAC,EACAG,EAAAC,EAEA,IAAA6F,EAAAooB,EAAA9xB,EACAsN,EAAgB5K,OAAA+tB,EAAA,EAAA/tB,CAAYklC,EAAAl+B,GAC5B,GAAA4D,EAAA,GACA,IAAArH,GAAAyD,EAAAk+B,GAAAt6B,EAAA,KACAs6B,GAAAt6B,EAAA,GAAAs6B,GAAAt6B,EAAA,IACAu6B,EAAApmC,IAAA6L,EAAA,GAAA3L,EACA+lC,EAAehlC,OAAA+kC,EAAA,EAAA/kC,CACflB,EAAAqmC,GAAArmC,EAAAqmC,EAAAlmC,GAAAsE,GACA0hC,EAAejlC,OAAA+kC,EAAA,EAAA/kC,CACflB,EAAAqmC,EAAA,GAAArmC,EAAAqmC,EAAAlmC,EAAA,GAAAsE,QAEAyhC,EAAAlmC,EAAAC,EAAA6L,EAAA3L,GACAgmC,EAAAnmC,EAAAC,EAAA6L,EAAA3L,EAAA,GAGA,OAAAkd,GACAA,EAAA,GAAA6oB,EACA7oB,EAAA,GAAA8oB,EACA9oB,GAEA,CAAA6oB,EAAAC,GAcO,SAAAJ,EAAA/lC,EAAAC,EAAAC,EAAAC,EAAAoF,EAAA6qB,GACP,GAAAlwB,GAAAD,EACA,YAEA,IAAAjB,EACA,GAAAuG,EAAAvF,EAAAC,EAAAE,EAAA,GACA,OAAAiwB,IACApxB,EAAAgB,EAAArB,MAAAsB,IAAAE,IACAA,EAAA,GAAAoF,EACAvG,GAEA,KAEG,GAAAgB,EAAAE,EAAA,GAAAqF,EACH,OAAA6qB,IACApxB,EAAAgB,EAAArB,MAAAuB,EAAAC,EAAAD,IACAC,EAAA,GAAAoF,EACAvG,GAEA,KAIA,GAAAuG,GAAAvF,EAAAC,EAAAE,EAAA,GACA,OAAAH,EAAArB,MAAAsB,IAAAE,GAIA,IAFA,IAAAmmC,EAAArmC,EAAAE,EACAomC,EAAArmC,EAAAC,EACAmmC,EAAAC,GAAA,CACA,IAAA/7B,EAAA87B,EAAAC,GAAA,EACAhhC,EAAAvF,GAAAwK,EAAA,GAAArK,EAAA,GACAomC,EAAA/7B,EAEA87B,EAAA97B,EAAA,EAGA,IAAAg8B,EAAAxmC,EAAAsmC,EAAAnmC,EAAA,GACA,GAAAoF,GAAAihC,EACA,OAAAxmC,EAAArB,OAAA2nC,EAAA,GAAAnmC,GAAAmmC,EAAA,GAAAnmC,KAEA,IACAsE,GAAAc,EAAAihC,IADAxmC,GAAAsmC,EAAA,GAAAnmC,EAAA,GACAqmC,GACAxnC,EAAA,GACA,QAAAV,EAAA,EAAiBA,EAAA6B,EAAA,IAAgB7B,EACjCU,EAAAmK,KAAoBjI,OAAA+kC,EAAA,EAAA/kC,CAAIlB,GAAAsmC,EAAA,GAAAnmC,EAAA7B,GACxB0B,EAAAsmC,EAAAnmC,EAAA7B,GAAAmG,IAGA,OADAzF,EAAAmK,KAAA5D,GACAvG,EAcO,SAAAgnC,EACPhmC,EAAAC,EAAA0e,EAAAxe,EAAAoF,EAAA6qB,EAAAqW,GACA,GAAAA,EACA,OAAAV,EACA/lC,EAAAC,EAAA0e,IAAAngB,OAAA,GAAA2B,EAAAoF,EAAA6qB,GAEA,IAAApxB,EACA,GAAAuG,EAAAvF,EAAAG,EAAA,GACA,OAAAiwB,IACApxB,EAAAgB,EAAArB,MAAA,EAAAwB,IACAA,EAAA,GAAAoF,EACAvG,GAEA,KAGA,GAAAgB,IAAAxB,OAAA,GAAA+G,EACA,OAAA6qB,IACApxB,EAAAgB,EAAArB,MAAAqB,EAAAxB,OAAA2B,IACAA,EAAA,GAAAoF,EACAvG,GAEA,KAGA,QAAAV,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,IAAA4B,EAAAye,EAAArgB,GACA,GAAA2B,GAAAC,EAAA,CAGA,GAAAqF,EAAAvF,EAAAC,EAAAE,EAAA,GACA,YACK,GAAAoF,GAAAvF,EAAAE,EAAA,GACL,OAAA6lC,EACA/lC,EAAAC,EAAAC,EAAAC,EAAAoF,GAAA,GAEAtF,EAAAC,GAEA,2CCnKO,SAAAwmC,EAAA1mC,EAAAC,EAAAC,EAAAC,GAIP,IAHA,IAAA6B,EAAAhC,EAAAC,GACAmC,EAAApC,EAAAC,EAAA,GACAzB,EAAA,EACAF,EAAA2B,EAAAE,EAA+B7B,EAAA4B,EAAS5B,GAAA6B,EAAA,CACxC,IAAA8B,EAAAjC,EAAA1B,GACA+D,EAAArC,EAAA1B,EAAA,GACAE,GAAA6B,KAAAyjB,MAAA7hB,EAAAD,IAAAC,EAAAD,IAAAK,EAAAD,IAAAC,EAAAD,IACAJ,EAAAC,EACAG,EAAAC,EAEA,OAAA7D,EAvBA9C,EAAAC,EAAAC,EAAA,sBAAA8qC,kCCAA,IAAAzX,EAAAvzB,EAAA,KAAAkf,EAAAlf,EAAA,KAAAwzB,EAAAxzB,EAAA,KAAAyzB,EAAAzzB,EAAA,KAAAirC,EAAAjrC,EAAA,KAAAkrC,EAAAlrC,EAAA,KAAAmrC,EAAAnrC,EAAA,KAAAorC,EAAAprC,EAAA,KAAAqrC,EAAArrC,EAAA,KAAAsrC,EAAAtrC,EAAA,KAAAurC,EAAAvrC,EAAA,KAAAwrC,EAAAxrC,EAAA,KAsBAyrC,EAAA,SAAAlsB,GACA,SAAAksB,EAAA/oC,EAAAoe,EAAAkC,GAsBA,GApBAzD,EAAAta,KAAA2M,MAMAA,KAAA2X,MAAA,GAMA3X,KAAA2W,WAAA,EAMA3W,KAAA4W,mBAAA,EAEA7e,MAAAkG,QAAAnN,EAAA,IACAkP,KAAAiP,eAAyF,EAAAC,QACpF,QAAAlU,IAAAkU,GAAAkC,EACLpR,KAAA+O,mBAAAG,EAAmE,GACnElP,KAAA2X,MAAAvG,MACK,CAKL,IAJA,IAAAvD,EAAA7N,KAAAoO,YACA0rB,EAAqD,EACrDpnC,EAAA,GACA2e,EAAA,GACArgB,EAAA,EAAAC,EAAA6oC,EAAA5oC,OAA8CF,EAAAC,IAAQD,EAAA,CACtD,IAAA+oC,EAAAD,EAAA9oC,GACA,IAAAA,IACA6c,EAAAksB,EAAA3rB,aAEQxa,OAAA+tB,EAAA,EAAA/tB,CAAMlB,EAAAqnC,EAAA7rB,sBACdmD,EAAAxV,KAAAnJ,EAAAxB,QAEA8O,KAAA+O,mBAAAlB,EAAAnb,GACAsN,KAAA2X,MAAAtG,GA4MA,OAvMA1D,IAAAksB,EAAA72B,UAAA2K,GACAksB,EAAA54B,UAAArN,OAAAqP,OAAA0K,KAAA1M,WACA44B,EAAA54B,UAAAiC,YAAA22B,EAOAA,EAAA54B,UAAA+4B,iBAAA,SAAAD,GACA/5B,KAAAtN,gBAGMkB,OAAA+tB,EAAA,EAAA/tB,CAAMoM,KAAAtN,gBAAAqnC,EAAA7rB,qBAAA7c,SAFZ2O,KAAAtN,gBAAAqnC,EAAA7rB,qBAAA7c,QAIA2O,KAAA2X,MAAA9b,KAAAmE,KAAAtN,gBAAAxB,QACA8O,KAAAwP,WASAqqB,EAAA54B,UAAAxS,MAAA,WACA,WAAAorC,EAAA75B,KAAAtN,gBAAArB,QAAA2O,KAAA6N,OAAA7N,KAAA2X,MAAAtmB,UAMAwoC,EAAA54B,UAAA4V,eAAA,SAAAvlB,EAAAC,EAAAykB,EAAAI,GACA,OAAAA,EAA6BxiB,OAAA0Z,EAAA,EAAA1Z,CAAwBoM,KAAAoB,YAAA9P,EAAAC,GACrD6kB,GAEApW,KAAA4W,mBAAA5W,KAAAwO,gBACAxO,KAAA2W,UAAA5jB,KAAAyjB,KAAiC5iB,OAAA2lC,EAAA,EAAA3lC,CACjCoM,KAAAtN,gBAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,OAAA,IACAmN,KAAA4W,kBAAA5W,KAAAwO,eAEW5a,OAAA2lC,EAAA,EAAA3lC,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,OACAmN,KAAA2W,WAAA,EAAArlB,EAAAC,EAAAykB,EAAAI,KAyBAyjB,EAAA54B,UAAA2hB,iBAAA,SAAA3qB,EAAA4qB,EAAAoX,GACA,GAAAj6B,KAAA6N,QAAwB+T,EAAA,EAAc/R,KACtC7P,KAAA6N,QAAwB+T,EAAA,EAActS,MACtC,IAAAtP,KAAAtN,gBAAAxB,OACA,YAEA,IAAA4xB,OAAA9nB,IAAA6nB,KACAsW,OAAAn+B,IAAAi/B,KACA,OAAWrmC,OAAA8lC,EAAA,EAAA9lC,CAAwBoM,KAAAtN,gBAAA,EACnCsN,KAAA2X,MAAA3X,KAAAnN,OAAAoF,EAAA6qB,EAAAqW,IASAU,EAAA54B,UAAA+M,eAAA,WACA,OAAWpa,OAAA6lC,EAAA,EAAA7lC,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,SAMAgnC,EAAA54B,UAAAsX,QAAA,WACA,OAAAvY,KAAA2X,OASAkiB,EAAA54B,UAAAi5B,cAAA,SAAA17B,GACA,OAAAA,EAAA,GAAAwB,KAAA2X,MAAAzmB,QAAAsN,EACA,KAEA,IAAe66B,EAAA,EAAUr5B,KAAAtN,gBAAArB,MACzB,IAAAmN,EAAA,EAAAwB,KAAA2X,MAAAnZ,EAAA,GAAAwB,KAAA2X,MAAAnZ,IAAAwB,KAAA6N,SAQAgsB,EAAA54B,UAAAk5B,eAAA,WAOA,IANA,IAAAznC,EAAAsN,KAAAtN,gBACA2e,EAAArR,KAAA2X,MACA9J,EAAA7N,KAAA6N,OAEAisB,EAAA,GACAnnC,EAAA,EACA3B,EAAA,EAAAC,EAAAogB,EAAAngB,OAAqCF,EAAAC,IAAQD,EAAA,CAC7C,IAAA4B,EAAAye,EAAArgB,GACA+oC,EAAA,IAA2BV,EAAA,EAAU3mC,EAAArB,MAAAsB,EAAAC,GAAAib,GACrCisB,EAAAj+B,KAAAk+B,GACApnC,EAAAC,EAEA,OAAAknC,GAMAD,EAAA54B,UAAAm5B,iBAAA,WAMA,IALA,IAAAC,EAAA,GACA3nC,EAAAsN,KAAAtN,gBACAC,EAAA,EACA0e,EAAArR,KAAA2X,MACA9kB,EAAAmN,KAAAnN,OACA7B,EAAA,EAAAC,EAAAogB,EAAAngB,OAAqCF,EAAAC,IAAQD,EAAA,CAC7C,IAAA4B,EAAAye,EAAArgB,GACAspC,EAAqB1mC,OAAA8lC,EAAA,EAAA9lC,CACrBlB,EAAAC,EAAAC,EAAAC,EAAA,IACMe,OAAA+tB,EAAA,EAAA/tB,CAAMymC,EAAAC,GACZ3nC,EAAAC,EAEA,OAAAynC,GAMAR,EAAA54B,UAAA4N,8BAAA,SAAAP,GACA,IAAAgF,EAAA,GACAS,EAAA,GAIA,OAHAT,EAAApiB,OAAuC0C,OAAAgmC,EAAA,EAAAhmC,CACvCoM,KAAAtN,gBAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,OAAAyb,EACAgF,EAAA,EAAAS,GACA,IAAA8lB,EAAAvmB,EAA0DsO,EAAA,EAAc9T,GAAAiG,IAOxE8lB,EAAA54B,UAAAkW,QAAA,WACA,OAAW0K,EAAA,EAAYviB,mBAOvBu6B,EAAA54B,UAAAoW,iBAAA,SAAAtmB,GACA,OAAW6C,OAAA+lC,EAAA,EAAA/lC,CACXoM,KAAAtN,gBAAA,EAAAsN,KAAA2X,MAAA3X,KAAAnN,OAAA9B,IAUA8oC,EAAA54B,UAAAgO,eAAA,SAAAne,EAAAoe,GACAlP,KAAAmP,UAAAD,EAAApe,EAAA,GACAkP,KAAAtN,kBACAsN,KAAAtN,gBAAA,IAEA,IAAA2e,EAAezd,OAAA4lC,EAAA,EAAA5lC,CACfoM,KAAAtN,gBAAA,EAAA5B,EAAAkP,KAAAnN,OAAAmN,KAAA2X,OACA3X,KAAAtN,gBAAAxB,OAAA,IAAAmgB,EAAAngB,OAAA,EAAAmgB,IAAAngB,OAAA,GACA8O,KAAAwP,WAGAqqB,EAtPA,CAuPEP,EAAA,GAGahrC,EAAA,kCChRfF,EAAAC,EAAAC,EAAA,sBAAAisC,IAAAnsC,EAAAC,EAAAC,EAAA,sBAAAksC,IAAA,IAAA7Y,EAAAvzB,EAAA,KAAA0vB,EAAA1vB,EAAA,KAoBO,SAAAmsC,EAAA7nC,EAAAC,EACP0e,EAAAxe,EAAA4nC,EAAAC,EAAA3qB,GAMA,IALA,IAAA/e,EAAAC,EAAAK,EAAAoD,EAAAC,EAAAG,EAAAC,EACAxD,EAAAkpC,EAAAC,EAAA,GAEAC,EAAA,GAEAljC,EAAA,EAAAmjC,EAAAvpB,EAAAngB,OAAmCuG,EAAAmjC,IAAQnjC,EAAA,CAC3C,IAAA7E,EAAAye,EAAA5Z,GAGA,IAFA/C,EAAAhC,EAAAE,EAAAC,GACAiC,EAAApC,EAAAE,EAAAC,EAAA,GACA7B,EAAA2B,EAAoB3B,EAAA4B,EAAS5B,GAAA6B,EAC7B8B,EAAAjC,EAAA1B,GACA+D,EAAArC,EAAA1B,EAAA,IACAO,GAAAuD,GAAAC,GAAAxD,GAAAuD,GAAAvD,MAAAwD,KACAzD,GAAAC,EAAAuD,IAAAC,EAAAD,IAAAH,EAAAD,KACAimC,EAAA9+B,KAAAvK,IAEAoD,EAAAC,EACAG,EAAAC,EAKA,IAAA6jC,EAAAriB,IACAskB,GAAAroC,IAGA,IAFAmoC,EAAAl8B,KAAqBkjB,EAAA,GACrBjtB,EAAAimC,EAAA,GACA3pC,EAAA,EAAAC,EAAA0pC,EAAAzpC,OAAwCF,EAAAC,IAAQD,EAAA,CAChD2D,EAAAgmC,EAAA3pC,GACA,IAAA8pC,EAAA/nC,KAAAyE,IAAA7C,EAAAD,GACAomC,EAAAD,IACAvpC,GAAAoD,EAAAC,GAAA,EACUf,OAAAkqB,EAAA,EAAAlqB,CAAqBlB,EAAAC,EAAA0e,EAAAxe,EAAAvB,EAAAC,KAC/BqnC,EAAAtnC,EACAupC,EAAAC,IAGApmC,EAAAC,EAOA,OALAomC,MAAAnC,KAGAA,EAAA6B,EAAAC,IAEA3qB,GACAA,EAAAlU,KAAA+8B,EAAArnC,EAAAspC,GACA9qB,GAEA,CAAA6oB,EAAArnC,EAAAspC,GAcO,SAAAL,EAAA9nC,EAAAC,EAAA+e,EAAA7e,EAAA4nC,GAEP,IADA,IAAAO,EAAA,GACAhqC,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAAA,CAC5C,IAAAqgB,EAAAK,EAAA1gB,GACAgqC,EAAAT,EAAA7nC,EACAC,EAAA0e,EAAAxe,EAAA4nC,EAAA,EAAAzpC,EAAAgqC,GACAroC,EAAA0e,IAAAngB,OAAA,GAEA,OAAA8pC,iCCzFAC,EAAA5b,QAAA6b,EACAD,EAAA5b,QAAA8B,QAAA+Z,EAEA,IAAAC,EAAkB/sC,EAAQ,KAE1B,SAAA8sC,EAAAE,EAAAC,GACA,KAAAr7B,gBAAAk7B,GAAA,WAAAA,EAAAE,EAAAC,GAGAr7B,KAAAs7B,YAAAvoC,KAAAE,IAAA,EAAAmoC,GAAA,GACAp7B,KAAAu7B,YAAAxoC,KAAAE,IAAA,EAAAF,KAAAk1B,KAAA,GAAAjoB,KAAAs7B,cAEAD,GACAr7B,KAAAw7B,YAAAH,GAGAr7B,KAAA9D,QAwbA,SAAAu/B,EAAAC,EAAAC,EAAAC,GACA,IAAAA,EAAA,OAAAD,EAAA5/B,QAAA2/B,GAEA,QAAA1qC,EAAA,EAAmBA,EAAA2qC,EAAAzqC,OAAkBF,IACrC,GAAA4qC,EAAAF,EAAAC,EAAA3qC,IAAA,OAAAA,EAEA,SAIA,SAAA6qC,EAAA5zB,EAAA6zB,GACAC,EAAA9zB,EAAA,EAAAA,EAAA+zB,SAAA9qC,OAAA4qC,EAAA7zB,GAIA,SAAA8zB,EAAA9zB,EAAAnQ,EAAAmkC,EAAAH,EAAAI,GACAA,MAAAC,EAAA,OACAD,EAAArqC,KAAAW,IACA0pC,EAAApqC,KAAAU,IACA0pC,EAAAnqC,MAAAS,IACA0pC,EAAAlqC,MAAAQ,IAEA,QAAA4pC,EAAAprC,EAAA8G,EAA0B9G,EAAAirC,EAAOjrC,IACjCorC,EAAAn0B,EAAA+zB,SAAAhrC,GACA1B,EAAA4sC,EAAAj0B,EAAAo0B,KAAAP,EAAAM,MAGA,OAAAF,EAGA,SAAA5sC,EAAA+I,EAAAC,GAKA,OAJAD,EAAAxG,KAAAkB,KAAAC,IAAAqF,EAAAxG,KAAAyG,EAAAzG,MACAwG,EAAAvG,KAAAiB,KAAAC,IAAAqF,EAAAvG,KAAAwG,EAAAxG,MACAuG,EAAAtG,KAAAgB,KAAAE,IAAAoF,EAAAtG,KAAAuG,EAAAvG,MACAsG,EAAArG,KAAAe,KAAAE,IAAAoF,EAAArG,KAAAsG,EAAAtG,MACAqG,EAGA,SAAAikC,EAAAjkC,EAAAC,GAAgC,OAAAD,EAAAxG,KAAAyG,EAAAzG,KAChC,SAAA0qC,EAAAlkC,EAAAC,GAAgC,OAAAD,EAAAvG,KAAAwG,EAAAxG,KAEhC,SAAA0qC,EAAAnkC,GAAwB,OAAAA,EAAAtG,KAAAsG,EAAAxG,OAAAwG,EAAArG,KAAAqG,EAAAvG,MACxB,SAAA2qC,EAAApkC,GAAwB,OAAAA,EAAAtG,KAAAsG,EAAAxG,MAAAwG,EAAArG,KAAAqG,EAAAvG,MAiBxB,SAAAqmB,EAAA9f,EAAAC,GACA,OAAAD,EAAAxG,MAAAyG,EAAAzG,MACAwG,EAAAvG,MAAAwG,EAAAxG,MACAwG,EAAAvG,MAAAsG,EAAAtG,MACAuG,EAAAtG,MAAAqG,EAAArG,KAGA,SAAA3B,EAAAgI,EAAAC,GACA,OAAAA,EAAAzG,MAAAwG,EAAAtG,MACAuG,EAAAxG,MAAAuG,EAAArG,MACAsG,EAAAvG,MAAAsG,EAAAxG,MACAyG,EAAAtG,MAAAqG,EAAAvG,KAGA,SAAAqqC,EAAAH,GACA,OACAA,WACAx0B,OAAA,EACA60B,MAAA,EACAxqC,KAAAW,IACAV,KAAAU,IACAT,MAAAS,IACAR,MAAAQ,KAOA,SAAAkqC,EAAAh/B,EAAAi/B,EAAAC,EAAAvlC,EAAAwH,GAIA,IAHA,IACA3B,EADAuW,EAAA,CAAAkpB,EAAAC,GAGAnpB,EAAAviB,SACA0rC,EAAAnpB,EAAAE,QACAgpB,EAAAlpB,EAAAE,QAEAtc,IAEA6F,EAAAy/B,EAAA5pC,KAAAk1B,MAAA2U,EAAAD,GAAAtlC,EAAA,GAAAA,EACA8jC,EAAAz9B,EAAAR,EAAAy/B,EAAAC,EAAA/9B,GAEA4U,EAAA5X,KAAA8gC,EAAAz/B,IAAA0/B,IA1hBA1B,EAAAj6B,UAAA,CAEA47B,IAAA,WACA,OAAA78B,KAAA88B,KAAA98B,KAAAjC,KAAA,KAGAg/B,OAAA,SAAAC,GAEA,IAAA/0B,EAAAjI,KAAAjC,KACAk/B,EAAA,GACAnB,EAAA97B,KAAA87B,OAEA,IAAAzrC,EAAA2sC,EAAA/0B,GAAA,OAAAg1B,EAKA,IAHA,IACAjsC,EAAAqiC,EAAA+I,EAAAc,EADAC,EAAA,GAGAl1B,GAAA,CACA,IAAAjX,EAAA,EAAAqiC,EAAAprB,EAAA+zB,SAAA9qC,OAAmDF,EAAAqiC,EAASriC,IAE5DorC,EAAAn0B,EAAA+zB,SAAAhrC,GAGAX,EAAA2sC,EAFAE,EAAAj1B,EAAAo0B,KAAAP,EAAAM,QAGAn0B,EAAAo0B,KAAAY,EAAAphC,KAAAugC,GACAjkB,EAAA6kB,EAAAE,GAAAl9B,KAAA88B,KAAAV,EAAAa,GACAE,EAAAthC,KAAAugC,IAGAn0B,EAAAk1B,EAAAxpB,MAGA,OAAAspB,GAGAG,SAAA,SAAAJ,GAEA,IAAA/0B,EAAAjI,KAAAjC,KACA+9B,EAAA97B,KAAA87B,OAEA,IAAAzrC,EAAA2sC,EAAA/0B,GAAA,SAKA,IAHA,IACAjX,EAAAqiC,EAAA+I,EAAAc,EADAC,EAAA,GAGAl1B,GAAA,CACA,IAAAjX,EAAA,EAAAqiC,EAAAprB,EAAA+zB,SAAA9qC,OAAmDF,EAAAqiC,EAASriC,IAK5D,GAHAorC,EAAAn0B,EAAA+zB,SAAAhrC,GAGAX,EAAA2sC,EAFAE,EAAAj1B,EAAAo0B,KAAAP,EAAAM,MAEA,CACA,GAAAn0B,EAAAo0B,MAAAlkB,EAAA6kB,EAAAE,GAAA,SACAC,EAAAthC,KAAAugC,GAGAn0B,EAAAk1B,EAAAxpB,MAGA,UAGA0pB,KAAA,SAAAt/B,GACA,IAAAA,MAAA7M,OAAA,OAAA8O,KAEA,GAAAjC,EAAA7M,OAAA8O,KAAAu7B,YAAA,CACA,QAAAvqC,EAAA,EAAAqiC,EAAAt1B,EAAA7M,OAA8CF,EAAAqiC,EAASriC,IACvDgP,KAAAs9B,OAAAv/B,EAAA/M,IAEA,OAAAgP,KAIA,IAAAiI,EAAAjI,KAAAu9B,OAAAx/B,EAAA1M,QAAA,EAAA0M,EAAA7M,OAAA,KAEA,GAAA8O,KAAAjC,KAAAi+B,SAAA9qC,OAIS,GAAA8O,KAAAjC,KAAAyJ,SAAAS,EAAAT,OAETxH,KAAAw9B,WAAAx9B,KAAAjC,KAAAkK,OAES,CACT,GAAAjI,KAAAjC,KAAAyJ,OAAAS,EAAAT,OAAA,CAEA,IAAAi2B,EAAAz9B,KAAAjC,KACAiC,KAAAjC,KAAAkK,EACAA,EAAAw1B,EAIAz9B,KAAA09B,QAAAz1B,EAAAjI,KAAAjC,KAAAyJ,OAAAS,EAAAT,OAAA,WAfAxH,KAAAjC,KAAAkK,EAkBA,OAAAjI,MAGAs9B,OAAA,SAAA5B,GAEA,OADAA,GAAA17B,KAAA09B,QAAAhC,EAAA17B,KAAAjC,KAAAyJ,OAAA,GACAxH,MAGA9D,MAAA,WAEA,OADA8D,KAAAjC,KAAAo+B,EAAA,IACAn8B,MAGA9B,OAAA,SAAAw9B,EAAAE,GACA,IAAAF,EAAA,OAAA17B,KASA,IAPA,IAIAhP,EAAA6W,EAAArJ,EAAAm/B,EAJA11B,EAAAjI,KAAAjC,KACAi/B,EAAAh9B,KAAA87B,OAAAJ,GACAkC,EAAA,GACAC,EAAA,GAIA51B,GAAA21B,EAAA1sC,QAAA,CASA,GAPA+W,IACAA,EAAA21B,EAAAjqB,MACA9L,EAAA+1B,IAAA1sC,OAAA,GACAF,EAAA6sC,EAAAlqB,MACAgqB,GAAA,GAGA11B,EAAAo0B,OAGA,KAFA79B,EAAAi9B,EAAAC,EAAAzzB,EAAA+zB,SAAAJ,IAOA,OAHA3zB,EAAA+zB,SAAAhgC,OAAAwC,EAAA,GACAo/B,EAAA/hC,KAAAoM,GACAjI,KAAA89B,UAAAF,GACA59B,KAIA29B,GAAA11B,EAAAo0B,OAAAlkB,EAAAlQ,EAAA+0B,GAOan1B,GACb7W,IACAiX,EAAAJ,EAAAm0B,SAAAhrC,GACA2sC,GAAA,GAEa11B,EAAA,MAXb21B,EAAA/hC,KAAAoM,GACA41B,EAAAhiC,KAAA7K,GACAA,EAAA,EACA6W,EAAAI,EACAA,IAAA+zB,SAAA,IAUA,OAAAh8B,MAGA87B,OAAA,SAAAJ,GAA6B,OAAAA,GAE7BqC,YAAAzB,EACA0B,YAAAzB,EAEA0B,OAAA,WAAyB,OAAAj+B,KAAAjC,MAEzBmgC,SAAA,SAAAngC,GAEA,OADAiC,KAAAjC,OACAiC,MAGA88B,KAAA,SAAA70B,EAAAg1B,GAEA,IADA,IAAAE,EAAA,GACAl1B,GACAA,EAAAo0B,KAAAY,EAAAphC,KAAA9F,MAAAknC,EAAAh1B,EAAA+zB,UACAmB,EAAAthC,KAAA9F,MAAAonC,EAAAl1B,EAAA+zB,UAEA/zB,EAAAk1B,EAAAxpB,MAEA,OAAAspB,GAGAM,OAAA,SAAA5B,EAAAgB,EAAAC,EAAAp1B,GAEA,IAEAS,EAFAk2B,EAAAvB,EAAAD,EAAA,EACAyB,EAAAp+B,KAAAs7B,YAGA,GAAA6C,GAAAC,EAIA,OADAvC,EADA5zB,EAAAk0B,EAAAR,EAAAtqC,MAAAsrC,EAAAC,EAAA,IACA58B,KAAA87B,QACA7zB,EAGAT,IAEAA,EAAAzU,KAAAk1B,KAAAl1B,KAAA2Q,IAAAy6B,GAAAprC,KAAA2Q,IAAA06B,IAGAA,EAAArrC,KAAAk1B,KAAAkW,EAAAprC,KAAAka,IAAAmxB,EAAA52B,EAAA,MAGAS,EAAAk0B,EAAA,KACAE,MAAA,EACAp0B,EAAAT,SAIA,IAEAxW,EAAA4G,EAAAymC,EAAAC,EAFAC,EAAAxrC,KAAAk1B,KAAAkW,EAAAC,GACAI,EAAAD,EAAAxrC,KAAAk1B,KAAAl1B,KAAAyjB,KAAA4nB,IAKA,IAFA1B,EAAAf,EAAAgB,EAAAC,EAAA4B,EAAAx+B,KAAA+9B,aAEA/sC,EAAA2rC,EAAsB3rC,GAAA4rC,EAAY5rC,GAAAwtC,EAMlC,IAFA9B,EAAAf,EAAA3qC,EAFAqtC,EAAAtrC,KAAAC,IAAAhC,EAAAwtC,EAAA,EAAA5B,GAEA2B,EAAAv+B,KAAAg+B,aAEApmC,EAAA5G,EAAuB4G,GAAAymC,EAAazmC,GAAA2mC,EAEpCD,EAAAvrC,KAAAC,IAAA4E,EAAA2mC,EAAA,EAAAF,GAGAp2B,EAAA+zB,SAAAngC,KAAAmE,KAAAu9B,OAAA5B,EAAA/jC,EAAA0mC,EAAA92B,EAAA,IAMA,OAFAq0B,EAAA5zB,EAAAjI,KAAA87B,QAEA7zB,GAGAw2B,eAAA,SAAAzB,EAAA/0B,EAAAy2B,EAAAd,GAIA,IAFA,IAAA5sC,EAAAqiC,EAAA+I,EAAAuC,EAAArrC,EAAAsrC,EAAAC,EAAAC,EAsPAzmC,EAAAC,EAnPAslC,EAAA/hC,KAAAoM,IAEAA,EAAAo0B,MAAAuB,EAAA1sC,OAAA,IAAAwtC,GAHA,CAOA,IAFAG,EAAAC,EAAAtsC,IAEAxB,EAAA,EAAAqiC,EAAAprB,EAAA+zB,SAAA9qC,OAAmDF,EAAAqiC,EAASriC,IAE5DsC,EAAAkpC,EADAJ,EAAAn0B,EAAA+zB,SAAAhrC,IA4OAqH,EA1OA2kC,EA0OA1kC,EA1OA8jC,GAAAwC,GA2OA7rC,KAAAE,IAAAqF,EAAAvG,KAAAsG,EAAAtG,MAAAgB,KAAAC,IAAAsF,EAAAzG,KAAAwG,EAAAxG,QACAkB,KAAAE,IAAAqF,EAAAtG,KAAAqG,EAAArG,MAAAe,KAAAC,IAAAsF,EAAAxG,KAAAuG,EAAAvG,OA5OAwB,GAGAwrC,GACAA,EAAAF,EACAC,EAAAvrC,EAAAurC,EAAAvrC,EAAAurC,EACAF,EAAAvC,GAEiBwC,IAAAE,GAEjBxrC,EAAAurC,IACAA,EAAAvrC,EACAqrC,EAAAvC,GAKAn0B,EAAA02B,GAAA12B,EAAA+zB,SAAA,GAGA,OAAA/zB,GAGAy1B,QAAA,SAAAhC,EAAAgD,EAAAK,GAEA,IAAAjD,EAAA97B,KAAA87B,OACAkB,EAAA+B,EAAArD,EAAAI,EAAAJ,GACAsD,EAAA,GAGA/2B,EAAAjI,KAAAy+B,eAAAzB,EAAAh9B,KAAAjC,KAAA2gC,EAAAM,GAOA,IAJA/2B,EAAA+zB,SAAAngC,KAAA6/B,GACApsC,EAAA2Y,EAAA+0B,GAGA0B,GAAA,GACAM,EAAAN,GAAA1C,SAAA9qC,OAAA8O,KAAAs7B,aACAt7B,KAAAi/B,OAAAD,EAAAN,GACAA,IAKA1+B,KAAAk/B,oBAAAlC,EAAAgC,EAAAN,IAIAO,OAAA,SAAAD,EAAAN,GAEA,IAAAz2B,EAAA+2B,EAAAN,GACAN,EAAAn2B,EAAA+zB,SAAA9qC,OACA+G,EAAA+H,KAAAu7B,YAEAv7B,KAAAm/B,iBAAAl3B,EAAAhQ,EAAAmmC,GAEA,IAAAgB,EAAAp/B,KAAAq/B,kBAAAp3B,EAAAhQ,EAAAmmC,GAEAz2B,EAAAw0B,EAAAl0B,EAAA+zB,SAAAhgC,OAAAojC,EAAAn3B,EAAA+zB,SAAA9qC,OAAAkuC,IACAz3B,EAAAH,OAAAS,EAAAT,OACAG,EAAA00B,KAAAp0B,EAAAo0B,KAEAR,EAAA5zB,EAAAjI,KAAA87B,QACAD,EAAAl0B,EAAA3H,KAAA87B,QAEA4C,EAAAM,EAAAN,EAAA,GAAA1C,SAAAngC,KAAA8L,GACA3H,KAAAw9B,WAAAv1B,EAAAN,IAGA61B,WAAA,SAAAv1B,EAAAN,GAEA3H,KAAAjC,KAAAo+B,EAAA,CAAAl0B,EAAAN,IACA3H,KAAAjC,KAAAyJ,OAAAS,EAAAT,OAAA,EACAxH,KAAAjC,KAAAs+B,MAAA,EACAR,EAAA77B,KAAAjC,KAAAiC,KAAA87B,SAGAuD,kBAAA,SAAAp3B,EAAAhQ,EAAAmmC,GAEA,IAAAptC,EAAAsuC,EAAAC,EAAAC,EAAAlsC,EAAAmsC,EAAAZ,EAAArgC,EA+JAnG,EAAAC,EACAzG,EACAC,EACAC,EACAC,EA/JA,IAFAytC,EAAAZ,EAAArsC,IAEAxB,EAAAiH,EAAmBjH,GAAAotC,EAAAnmC,EAAYjH,IAC/BsuC,EAAAvD,EAAA9zB,EAAA,EAAAjX,EAAAgP,KAAA87B,QACAyD,EAAAxD,EAAA9zB,EAAAjX,EAAAotC,EAAAp+B,KAAA87B,QAyJAzjC,EAvJAinC,EAuJAhnC,EAvJAinC,EAwJA1tC,SACAC,SACAC,SACAC,SAHAH,EAAAkB,KAAAE,IAAAoF,EAAAxG,KAAAyG,EAAAzG,MACAC,EAAAiB,KAAAE,IAAAoF,EAAAvG,KAAAwG,EAAAxG,MACAC,EAAAgB,KAAAC,IAAAqF,EAAAtG,KAAAuG,EAAAvG,MACAC,EAAAe,KAAAC,IAAAqF,EAAArG,KAAAsG,EAAAtG,MA3JAwtC,EA6JAzsC,KAAAE,IAAA,EAAAlB,EAAAF,GACAkB,KAAAE,IAAA,EAAAjB,EAAAF,GA7JAwB,EAAAkpC,EAAA8C,GAAA9C,EAAA+C,GAGAC,EAAAC,GACAA,EAAAD,EACAhhC,EAAAxN,EAEA6tC,EAAAvrC,EAAAurC,EAAAvrC,EAAAurC,GAEaW,IAAAC,GAEbnsC,EAAAurC,IACAA,EAAAvrC,EACAkL,EAAAxN,GAKA,OAAAwN,GAIA2gC,iBAAA,SAAAl3B,EAAAhQ,EAAAmmC,GAEA,IAAAL,EAAA91B,EAAAo0B,KAAAr8B,KAAA+9B,YAAAzB,EACA0B,EAAA/1B,EAAAo0B,KAAAr8B,KAAAg+B,YAAAzB,EACAv8B,KAAA0/B,eAAAz3B,EAAAhQ,EAAAmmC,EAAAL,GACA/9B,KAAA0/B,eAAAz3B,EAAAhQ,EAAAmmC,EAAAJ,IAIA/1B,EAAA+zB,SAAAv9B,KAAAs/B,IAIA2B,eAAA,SAAAz3B,EAAAhQ,EAAAmmC,EAAAv/B,GAEAoJ,EAAA+zB,SAAAv9B,KAAAI,GAEA,IAIA7N,EAAAorC,EAJAN,EAAA97B,KAAA87B,OACA6D,EAAA5D,EAAA9zB,EAAA,EAAAhQ,EAAA6jC,GACA8D,EAAA7D,EAAA9zB,EAAAm2B,EAAAnmC,EAAAmmC,EAAAtC,GACA+D,EAAApD,EAAAkD,GAAAlD,EAAAmD,GAGA,IAAA5uC,EAAAiH,EAAmBjH,EAAAotC,EAAAnmC,EAAWjH,IAC9BorC,EAAAn0B,EAAA+zB,SAAAhrC,GACA1B,EAAAqwC,EAAA13B,EAAAo0B,KAAAP,EAAAM,MACAyD,GAAApD,EAAAkD,GAGA,IAAA3uC,EAAAotC,EAAAnmC,EAAA,EAA2BjH,GAAAiH,EAAQjH,IACnCorC,EAAAn0B,EAAA+zB,SAAAhrC,GACA1B,EAAAswC,EAAA33B,EAAAo0B,KAAAP,EAAAM,MACAyD,GAAApD,EAAAmD,GAGA,OAAAC,GAGAX,oBAAA,SAAAlC,EAAAY,EAAAc,GAEA,QAAA1tC,EAAA0tC,EAA2B1tC,GAAA,EAAQA,IACnC1B,EAAAsuC,EAAA5sC,GAAAgsC,IAIAc,UAAA,SAAAF,GAEA,QAAAkC,EAAA9uC,EAAA4sC,EAAA1sC,OAAA,EAA+CF,GAAA,EAAQA,IACvD,IAAA4sC,EAAA5sC,GAAAgrC,SAAA9qC,OACAF,EAAA,GACA8uC,EAAAlC,EAAA5sC,EAAA,GAAAgrC,UACAhgC,OAAA8jC,EAAA/jC,QAAA6hC,EAAA5sC,IAAA,GAEiBgP,KAAA9D,QAEJ2/B,EAAA+B,EAAA5sC,GAAAgP,KAAA87B,SAIbN,YAAA,SAAAH,GAOA,IAAA0E,EAAA,wBAEA//B,KAAA+9B,YAAA,IAAAiC,SAAA,QAAAD,EAAA7O,KAAAmK,EAAA,KACAr7B,KAAAg+B,YAAA,IAAAgC,SAAA,QAAAD,EAAA7O,KAAAmK,EAAA,KAEAr7B,KAAA87B,OAAA,IAAAkE,SAAA,IACA,kBAAqB3E,EAAA,GACrB,YAAAA,EAAA,GACA,YAAAA,EAAA,GACA,YAAAA,EAAA,sGC9Je4E,EA5NP,SAAAnO,GACR,SAAAoO,EAAA9vB,EAAA8jB,EAAA9X,GACA0V,EAAAz+B,KAAA2M,MAEA,IAAAD,EAAAqc,GAAA,GAKApc,KAAAoQ,YAMApQ,KAAAk0B,QAQAl0B,KAAAmgC,YAAA,KAQAngC,KAAAlE,IAAA,GAMAkE,KAAAogC,iBAAAplC,IAAA+E,EAAAsgC,WAAA,IAAAtgC,EAAAsgC,WAOArgC,KAAAsgC,kBAAA,GA4KA,OAxKAxO,IAAAoO,EAAAl9B,UAAA8uB,GACAoO,EAAAj/B,UAAArN,OAAAqP,OAAA6uB,KAAA7wB,WACAi/B,EAAAj/B,UAAAiC,YAAAg9B,EAKAA,EAAAj/B,UAAAuO,QAAA,WACAxP,KAAA6L,cAAuB00B,EAAA,EAAShoC,SAMhC2nC,EAAAj/B,UAAAkP,OAAA,WACA,OAAAnQ,KAAAlE,IAAA,IAAAkE,KAAAoQ,WASA8vB,EAAAj/B,UAAAu/B,eAAA,WACA,IAAAxgC,KAAAmgC,YAEA,OAAAngC,KAEA,IAAAygC,EAAAzgC,KAAAmgC,YAMA,GACA,GAAAM,EAAA3lB,YAA6B4lB,EAAA,EAASp0B,OACtC,OAAAm0B,EAEAA,IAAAN,kBACKM,GAGL,OAAAzgC,MAOAkgC,EAAAj/B,UAAA0/B,oBAAA,WACA,GAAA3gC,KAAAmgC,YAAA,CAIA,IAAAM,EAAAzgC,KAAAmgC,YACAS,EAA+B,KAE/B,GACA,GAAAH,EAAA3lB,YAA6B4lB,EAAA,EAASp0B,OAAA,CAItCm0B,EAAAN,YAAA,KACA,MACOM,EAAA3lB,YAA6B4lB,EAAA,EAASr0B,QAG7Cu0B,EAAAH,EACOA,EAAA3lB,YAA6B4lB,EAAA,EAASt0B,KAG7Cw0B,EAAAT,YAAAM,EAAAN,YAEAS,EAAAH,EAEAA,EAAAG,EAAAT,kBACKM,KAQLP,EAAAj/B,UAAA4/B,aAAA,WACA,OAAA7gC,KAAAoQ,WAMA8vB,EAAAj/B,UAAA6Z,SAAA,WACA,OAAA9a,KAAAk0B,OAWAgM,EAAAj/B,UAAA6/B,SAAA,SAAA5M,GACAl0B,KAAAk0B,QACAl0B,KAAAwP,WAUA0wB,EAAAj/B,UAAAo8B,KAAA,aAQA6C,EAAAj/B,UAAA8/B,SAAA,SAAA7K,EAAA8K,GACA,IAAAhhC,KAAAogC,YACA,SAGA,IAAAhrC,EAAA4K,KAAAsgC,kBAAApK,GACA,GAAA9gC,GAGK,QAAAA,EACL,cAHAA,EAAA4rC,EACAhhC,KAAAsgC,kBAAApK,GAAA9gC,EAKA,IAAAqpB,EAAAuiB,EAAA5rC,EAAA,OACA,OAAAqpB,GAAAze,KAAAogC,YACA,EAEWxsC,OAAAqtC,EAAA,EAAArtC,CAAM6qB,EAAAze,KAAAogC,cAUjBF,EAAAj/B,UAAAigC,aAAA,SAAAhL,GACA,QAAAl2B,KAAAogC,cAGA,IAAApgC,KAAAsgC,kBAAApK,IAOAgK,EAAAj/B,UAAAkgC,cAAA,SAAAjL,GACAl2B,KAAAogC,cACApgC,KAAAsgC,kBAAApK,IAAA,IAIAgK,EAxNQ,CAyNN7tB,EAAA,qBCtIF,SAAA+uB,IACA,IAAAC,EAAYztC,OAAA0tC,EAAA,EAAA1tC,CAAqB,KAGjC,OAFAytC,EAAAE,UAAA,gBACAF,EAAAG,SAAA,SACAH,EAAAj6B,OAGe,IAAAq6B,EA5JF,SAAAvB,GACb,SAAAwB,EAAAtxB,EAAA8jB,EAAA3F,EAAArE,EAAAyX,EAAAvlB,GAEA8jB,EAAA7sC,KAAA2M,KAAAoQ,EAAA8jB,EAAA9X,GAMApc,KAAA4hC,aAAA1X,EAQAlqB,KAAA6hC,KAAAtT,EAMAvuB,KAAA8hC,OAAA,IAAAC,MACA,OAAA7X,IACAlqB,KAAA8hC,OAAA5X,eAOAlqB,KAAAgiC,mBAAA,KAMAhiC,KAAAiiC,kBAAAN,EAuGA,OAnGAzB,IAAAwB,EAAA1+B,UAAAk9B,GACAwB,EAAAzgC,UAAArN,OAAAqP,OAAAi9B,KAAAj/B,WACAygC,EAAAzgC,UAAAiC,YAAAw+B,EAKAA,EAAAzgC,UAAA4R,gBAAA,WACA7S,KAAAk0B,OAAsBwM,EAAA,EAASr0B,UAC/BrM,KAAAkiC,iBACAliC,KAAA8hC,OAAAV,KAEAphC,KAAAmgC,aACAngC,KAAAmgC,YAAAphB,UAEA/e,KAAAk0B,MAAiBwM,EAAA,EAASl0B,MAC1BxM,KAAAwP,UACA0wB,EAAAj/B,UAAA4R,gBAAAxf,KAAA2M,OAQA0hC,EAAAzgC,UAAAkhC,SAAA,WACA,OAAAniC,KAAA8hC,QAMAJ,EAAAzgC,UAAAkP,OAAA,WACA,OAAAnQ,KAAA6hC,MAQAH,EAAAzgC,UAAAmhC,kBAAA,WACApiC,KAAAk0B,MAAiBwM,EAAA,EAAS3nC,MAC1BiH,KAAAkiC,iBACAliC,KAAA8hC,OAAAV,IACAphC,KAAAwP,WAQAkyB,EAAAzgC,UAAAohC,iBAAA,WACA,IAAApT,EAA4CjvB,KAAA,OAC5CivB,EAAAqT,cAAArT,EAAAsT,cACAviC,KAAAk0B,MAAmBwM,EAAA,EAASp0B,OAE5BtM,KAAAk0B,MAAmBwM,EAAA,EAASn0B,MAE5BvM,KAAAkiC,iBACAliC,KAAAwP,WAOAkyB,EAAAzgC,UAAAo8B,KAAA,WACAr9B,KAAAk0B,OAAsBwM,EAAA,EAAS3nC,QAC/BiH,KAAAk0B,MAAmBwM,EAAA,EAASt0B,KAC5BpM,KAAA8hC,OAAA,IAAAC,MACA,OAAA/hC,KAAA4hC,eACA5hC,KAAA8hC,OAAA5X,YAAAlqB,KAAA4hC,eAGA5hC,KAAAk0B,OAAsBwM,EAAA,EAASt0B,OAC/BpM,KAAAk0B,MAAmBwM,EAAA,EAASr0B,QAC5BrM,KAAAwP,UACAxP,KAAAgiC,mBAAA,CACQpuC,OAAA4uC,EAAA,EAAA5uC,CAAUoM,KAAA8hC,OAAcvB,EAAA,EAASxnC,MACzCiH,KAAAoiC,kBAAApiC,MACQpM,OAAA4uC,EAAA,EAAA5uC,CAAUoM,KAAA8hC,OAAcvB,EAAA,EAASrnC,KACzC8G,KAAAqiC,iBAAAriC,OAEAA,KAAAiiC,kBAAAjiC,UAAA6hC,QASAH,EAAAzgC,UAAAihC,eAAA,WACAliC,KAAAgiC,mBAAAl8B,QAAoC08B,EAAA,GACpCxiC,KAAAgiC,mBAAA,MAGAN,EA7Ia,CA8IXzB,qBClGawC,EAhDF,SAAA5Q,GACb,SAAA6Q,EAAA3Q,GAEAF,EAAAx+B,KAAA2M,KAAA+xB,GAyCA,OArCAF,IAAA6Q,EAAA1/B,UAAA6uB,GACA6Q,EAAAzhC,UAAArN,OAAAqP,OAAA4uB,KAAA5wB,WACAyhC,EAAAzhC,UAAAiC,YAAAw/B,EAKAA,EAAAzhC,UAAA0hC,YAAA,SAAAC,GACA,KAAA5iC,KAAAqyB,kBAAA,CACA,IAAAoO,EAAAzgC,KAAA6yB,WACAgQ,EAAApC,EAAArwB,UAAA,GAAAzB,WACA,GAAAk0B,KAAAD,KAAAC,GAAA1qB,SAAAsoB,EAAArwB,WACA,MAEApQ,KAAA2T,MAAAoL,YAQA2jB,EAAAzhC,UAAA6hC,mBAAA,WACA,OAAA9iC,KAAAsyB,WAAA,CAGA,IAAAx2B,EAAAkE,KAAA+yB,eAEA/iB,EADoBpc,OAAAs0B,EAAA,EAAAt0B,CAAOkI,GAC3B,GACAkE,KAAA8F,QAAA,SAAA26B,GACAA,EAAArwB,UAAA,KAAAJ,IACAhQ,KAAA9B,OAAoBtK,OAAAs0B,EAAA,EAAAt0B,CAAM6sC,EAAArwB,YAC1BqwB,EAAA1hB,YAEK/e,QAGL0iC,EA5Ca,CA6CXK,EAAA,uCCREC,EAAa,SAAAjW,EAAAC,EAAAgB,EAAAiV,EAAAC,GAMjBljC,KAAAmjC,YAAApW,EAMA/sB,KAAAojC,YAAApW,EAGA,IAAAqW,EAAA,GACAC,EAAqB1vC,OAAA2vC,EAAA,EAAA3vC,CAAYoM,KAAAojC,YAAApjC,KAAAmjC,aAOjCnjC,KAAAwjC,cAAA,SAAA55B,GACA,IAAA9N,EAAA8N,EAAA,OAAAA,EAAA,GAIA,OAHAy5B,EAAAvnC,KACAunC,EAAAvnC,GAAAwnC,EAAA15B,IAEAy5B,EAAAvnC,IAOAkE,KAAAyjC,iBAAAR,EAMAjjC,KAAA0jC,uBAAAR,IAMAljC,KAAA2jC,WAAA,GAOA3jC,KAAA4jC,iBAAA,EAMA5jC,KAAA6jC,kBAAA7jC,KAAAmjC,YAAAjiC,cACA+hC,KACAjjC,KAAAmjC,YAAA/hC,aACOxN,OAAAoT,EAAA,EAAApT,CAAQqvC,IAAqBrvC,OAAAoT,EAAA,EAAApT,CAAQoM,KAAAmjC,YAAA/hC,aAM5CpB,KAAA8jC,kBAAA9jC,KAAAmjC,YAAA/hC,YACIxN,OAAAoT,EAAA,EAAApT,CAAQoM,KAAAmjC,YAAA/hC,aAAA,KAMZpB,KAAA+jC,kBAAA/jC,KAAAojC,YAAAhiC,YACIxN,OAAAoT,EAAA,EAAApT,CAAQoM,KAAAojC,YAAAhiC,aAAA,KAEZ,IAAA4iC,EAA2BpwC,OAAAoT,EAAA,EAAApT,CAAUo6B,GACrCiW,EAA4BrwC,OAAAoT,EAAA,EAAApT,CAAWo6B,GACvCkW,EAA+BtwC,OAAAoT,EAAA,EAAApT,CAAco6B,GAC7CmW,EAA8BvwC,OAAAoT,EAAA,EAAApT,CAAao6B,GAC3CoW,EAAApkC,KAAAwjC,cAAAQ,GACAK,EAAArkC,KAAAwjC,cAAAS,GACAK,EAAAtkC,KAAAwjC,cAAAU,GACAK,EAAAvkC,KAAAwjC,cAAAW,GAQA,GANAnkC,KAAAwkC,SACAR,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EA9GA,IAiHAvkC,KAAA4jC,gBAAA,CACA,IAAAa,EAAAjyC,IACAwN,KAAA2jC,WAAA79B,QAAA,SAAAspB,EAAAp+B,EAAA0M,GACA+mC,EAAA1xC,KAAAC,IAAAyxC,EACArV,EAAA3yB,OAAA,MAAA2yB,EAAA3yB,OAAA,MAAA2yB,EAAA3yB,OAAA,SAKAuD,KAAA2jC,WAAA79B,QAAA,SAAAspB,GACA,GAAAr8B,KAAAE,IAAAm8B,EAAA3yB,OAAA,MAAA2yB,EAAA3yB,OAAA,MACA2yB,EAAA3yB,OAAA,OAAAgoC,EAAAzkC,KAAA8jC,kBAAA,GACA,IAAAY,EAAA,EAAAtV,EAAA3yB,OAAA,MAAA2yB,EAAA3yB,OAAA,OACA,CAAA2yB,EAAA3yB,OAAA,MAAA2yB,EAAA3yB,OAAA,OACA,CAAA2yB,EAAA3yB,OAAA,MAAA2yB,EAAA3yB,OAAA,QACAioC,EAAA,MAAAD,EAAAzkC,KAAA8jC,kBAAA,IACAY,EAAA,OAAA1kC,KAAA8jC,mBAEAY,EAAA,MAAAD,EAAAzkC,KAAA8jC,kBAAA,IACAY,EAAA,OAAA1kC,KAAA8jC,mBAEAY,EAAA,MAAAD,EAAAzkC,KAAA8jC,kBAAA,IACAY,EAAA,OAAA1kC,KAAA8jC,mBAMA,IAAAjyC,EAAAkB,KAAAC,IACA0xC,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA3xC,KAAAE,IACAyxC,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA7yC,EAAAmO,KAAA8jC,kBAAA,IACA1U,EAAA3yB,OAAAioC,KAGKC,KAAA3kC,OAGLqjC,EAAA,IAaAL,EAAa/hC,UAAA2jC,aAAA,SAAAvsC,EAAAC,EAAAsR,EAAAi7B,EAAAC,EAAAC,GACb/kC,KAAA2jC,WAAA9nC,KAAA,CACAY,OAAA,CAAAooC,EAAAC,EAAAC,GACAnqC,OAAA,CAAAvC,EAAAC,EAAAsR,MAoBAo5B,EAAa/hC,UAAAujC,SAAA,SAAAnsC,EAAAC,EAAAsR,EAAAvb,EAAAw2C,EAAAC,EAAAC,EAAAC,EAAAC,GAEb,IAAAC,EAAyBtxC,OAAAoT,EAAA,EAAApT,CAAc,CAAAixC,EAAAC,EAAAC,EAAAC,IACvCG,EAAAnlC,KAAA8jC,kBACIlwC,OAAAoT,EAAA,EAAApT,CAAQsxC,GAAAllC,KAAA8jC,kBAAA,KACZsB,EAA2CplC,KAAA,kBAI3CqlC,EAAArlC,KAAAmjC,YAAAjiC,YACAikC,EAAA,IAAAA,EAAA,EAEAG,GAAA,EAEA,GAAAL,EAAA,GACA,GAAAjlC,KAAAojC,YAAA1hC,YAAA1B,KAAA+jC,kBAAA,CACA,IAAAwB,EAA6B3xC,OAAAoT,EAAA,EAAApT,CAAc,CAAAyE,EAAAC,EAAAsR,EAAAvb,IAE3Ci3C,EAD4B1xC,OAAAoT,EAAA,EAAApT,CAAQ2xC,GAAAvlC,KAAA+jC,kBAlMpC,KAoMAuB,GAEAD,GAAArlC,KAAAmjC,YAAAzhC,YAAAyjC,IACAG,EAAAH,EAvMA,KAwMAG,GAIA,GAAAA,IAAAtlC,KAAAyjC,kBACS7vC,OAAAoT,EAAA,EAAApT,CAAUsxC,EAAAllC,KAAAyjC,kBADnB,CAOA,KAAA6B,GACA7X,SAAAoX,EAAA,KAAApX,SAAAoX,EAAA,KACApX,SAAAqX,EAAA,KAAArX,SAAAqX,EAAA,KACArX,SAAAsX,EAAA,KAAAtX,SAAAsX,EAAA,KACAtX,SAAAuX,EAAA,KAAAvX,SAAAuX,EAAA,MACA,KAAAC,EAAA,GAGA,OAFAK,GAAA,EAOA,GAAAL,EAAA,GACA,IAAAK,EAAA,CACA,IAGA9zC,EAHAqC,EAAA,EAAAwE,EAAA,GAAAuR,EAAA,OAAAvR,EAAA,GAAAuR,EAAA,OACA47B,EAAAxlC,KAAAwjC,cAAA3vC,GAGA,GAAAwxC,EAIA7zC,GAFaoC,OAAAmP,EAAA,EAAAnP,CAAMixC,EAAA,GAAAO,GACNxxC,OAAAmP,EAAA,EAAAnP,CAAMmxC,EAAA,GAAAK,IAAA,EAEPxxC,OAAAmP,EAAA,EAAAnP,CAAM4xC,EAAA,GAAAJ,QAElB5zC,GAAAqzC,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEA,IAAA/zC,GAAAozC,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEAF,EADA9zC,IAAAC,IACAuO,KAAA0jC,uBAEA,GAAA4B,EAAA,CACA,GAAAvyC,KAAAyE,IAAAa,EAAA,GAAAuR,EAAA,KAAA7W,KAAAyE,IAAAa,EAAA,GAAAuR,EAAA,KAEA,IAAA67B,EAAA,EAAAntC,EAAA,GAAAsR,EAAA,OAAAtR,EAAA,GAAAsR,EAAA,OACA87B,EAAA1lC,KAAAwjC,cAAAiC,GACAE,EAAA,EAAAt3C,EAAA,GAAAgK,EAAA,OAAAhK,EAAA,GAAAgK,EAAA,OACAutC,EAAA5lC,KAAAwjC,cAAAmC,GAEA3lC,KAAAwkC,SACAnsC,EAAAC,EAAAmtC,EAAAE,EAAAd,EAAAC,EAAAY,EAAAE,EAAAX,EAAA,GACAjlC,KAAAwkC,SACAmB,EAAAF,EAAA77B,EAAAvb,EAAAu3C,EAAAF,EAAAX,EAAAC,EAAAC,EAAA,OACO,CAEP,IAAAY,EAAA,EAAAxtC,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAwtC,EAAA9lC,KAAAwjC,cAAAqC,GACAE,EAAA,EAAAn8B,EAAA,GAAAvb,EAAA,OAAAub,EAAA,GAAAvb,EAAA,OACA23C,EAAAhmC,KAAAwjC,cAAAuC,GAEA/lC,KAAAwkC,SACAnsC,EAAAwtC,EAAAE,EAAA13C,EAAAw2C,EAAAiB,EAAAE,EAAAhB,EAAAC,EAAA,GACAjlC,KAAAwkC,SACAqB,EAAAvtC,EAAAsR,EAAAm8B,EAAAD,EAAAhB,EAAAC,EAAAiB,EAAAf,EAAA,GAEA,QAIA,GAAAI,EAAA,CACA,IAAArlC,KAAA6jC,kBACA,OAEA7jC,KAAA4jC,iBAAA,EAGA5jC,KAAA4kC,aAAAvsC,EAAAuR,EAAAvb,EAAAw2C,EAAAE,EAAAC,GACAhlC,KAAA4kC,aAAAvsC,EAAAC,EAAAsR,EAAAi7B,EAAAC,EAAAC,KAQA/B,EAAa/hC,UAAAglC,sBAAA,WACb,IAAAl1C,EAAe6C,OAAAoT,EAAA,EAAApT,GASf,OAPAoM,KAAA2jC,WAAA79B,QAAA,SAAAspB,EAAAp+B,EAAA0M,GACA,IAAA6wB,EAAAa,EAAA3yB,OACI7I,OAAAoT,EAAA,EAAApT,CAAgB7C,EAAAw9B,EAAA,IAChB36B,OAAAoT,EAAA,EAAApT,CAAgB7C,EAAAw9B,EAAA,IAChB36B,OAAAoT,EAAA,EAAApT,CAAgB7C,EAAAw9B,EAAA,MAGpBx9B,GAMAiyC,EAAa/hC,UAAAkuB,aAAA,WACb,OAAAnvB,KAAA2jC,YAGe,IAAAuC,EAAA,ECjCAC,EA3RD,SAAAjG,GACd,SAAAkG,EACArZ,EACAsZ,EACArZ,EACAsZ,EACAl2B,EACAm2B,EACAxY,EACAI,EACAqY,EACAC,EACArY,GAEA8R,EAAA7sC,KAAA2M,KAAAoQ,EAA+BswB,EAAA,EAASt0B,MAMxCpM,KAAA0mC,kBAAA1rC,IAAAozB,KAMApuB,KAAA2mC,YAAA5Y,EAMA/tB,KAAA4mC,QAAAzY,EAMAnuB,KAAA6mC,QAAA,KAMA7mC,KAAA8mC,gBAAAT,EAMArmC,KAAA+mC,gBAAAT,EAMAtmC,KAAAgnC,kBAAAT,GAAAn2B,EAMApQ,KAAAinC,aAAA,GAMAjnC,KAAAknC,qBAAA,KAMAlnC,KAAAmnC,SAAA,EAEA,IAAAnZ,EAAAsY,EAAAzf,mBAAA7mB,KAAAgnC,mBACAI,EAAApnC,KAAA+mC,gBAAA3lC,YACA6hC,EAAAjjC,KAAA8mC,gBAAA1lC,YAEAimC,EAAAD,EACMxzC,OAAAoT,EAAA,EAAApT,CAAeo6B,EAAAoZ,GAAApZ,EAErB,GAAe,IAAPp6B,OAAAoT,EAAA,EAAApT,CAAOyzC,GAAf,CAOA,IAAAC,EAAAva,EAAA3rB,YACAkmC,IAIArE,EAHAA,EAG0BrvC,OAAAoT,EAAA,EAAApT,CAAeqvC,EAAAqE,GAFzCA,GAMA,IAAApa,EAAAoZ,EAAAvf,cACA/mB,KAAAgnC,kBAAA,IAEA/Z,EAAuBr5B,OAAAoT,EAAA,EAAApT,CAASyzC,GAChCja,EAA2Bx5B,OAAA2zC,EAAA,EAAA3zC,CAC3Bm5B,EAAAC,EAAAC,EAAAC,GAEA,IAAAO,SAAAL,OAAA,EAGAptB,KAAAk0B,MAAmBwM,EAAA,EAASn0B,UAH5B,CAOA,IAAAi7B,OAAAxsC,IAAAyrC,EACAA,EAA2BvgB,EAAA,EAU3B,GAJAlmB,KAAAynC,eAAA,IAA8BvB,EAC9BnZ,EAAAC,EAAAqa,EAAApE,EACA7V,EAAAoa,GAEA,IAAAxnC,KAAAynC,eAAAtY,eAAAj+B,OAAA,CAMA8O,KAAAmnC,SAAAd,EAAA3e,kBAAA0F,GACA,IAAAG,EAAAvtB,KAAAynC,eAAAxB,wBAaA,GAXAhD,IACAlW,EAAA7rB,YACAqsB,EAAA,GAA0B35B,OAAAmP,EAAA,EAAAnP,CAC1B25B,EAAA,GAAA0V,EAAA,GAAAA,EAAA,IACA1V,EAAA,GAA0B35B,OAAAmP,EAAA,EAAAnP,CAC1B25B,EAAA,GAAA0V,EAAA,GAAAA,EAAA,KAEA1V,EAAuB35B,OAAAoT,EAAA,EAAApT,CAAe25B,EAAA0V,IAI7BrvC,OAAAoT,EAAA,EAAApT,CAAO25B,GAEX,CAIL,IAHA,IAAAma,EAAArB,EAAAv1B,0BACAyc,EAAAvtB,KAAAmnC,UAEAQ,EAAAD,EAAA71C,KAAuC81C,GAAAD,EAAA31C,KAA0B41C,IACjE,QAAAC,EAAAF,EAAA51C,KAAyC81C,GAAAF,EAAA11C,KAA0B41C,IAAA,CACnE,IAAAnH,EAAA+F,EAAAxmC,KAAAmnC,SAAAQ,EAAAC,EAAA7Z,GACA0S,GACAzgC,KAAAinC,aAAAprC,KAAA4kC,GAKA,IAAAzgC,KAAAinC,aAAA/1C,SACA8O,KAAAk0B,MAAqBwM,EAAA,EAASn0B,YAf9BvM,KAAAk0B,MAAmBwM,EAAA,EAASn0B,WAnB5BvM,KAAAk0B,MAAmBwM,EAAA,EAASn0B,YAxC5BvM,KAAAk0B,MAAmBwM,EAAA,EAASn0B,MAiM5B,OAlHA2zB,IAAAkG,EAAApjC,UAAAk9B,GACAkG,EAAAnlC,UAAArN,OAAAqP,OAAAi9B,KAAAj/B,WACAmlC,EAAAnlC,UAAAiC,YAAAkjC,EAKAA,EAAAnlC,UAAA4R,gBAAA,WACA7S,KAAAk0B,OAAsBwM,EAAA,EAASr0B,SAC/BrM,KAAA6nC,mBAEA3H,EAAAj/B,UAAA4R,gBAAAxf,KAAA2M,OAOAomC,EAAAnlC,UAAAkhC,SAAA,WACA,OAAAniC,KAAA6mC,SAMAT,EAAAnlC,UAAA6mC,WAAA,WACA,IAAA5Z,EAAA,GAWA,GAVAluB,KAAAinC,aAAAnhC,QAAA,SAAA26B,EAAAzvC,EAAA0M,GACA+iC,KAAA3lB,YAAqC4lB,EAAA,EAASp0B,QAC9C4hB,EAAAryB,KAAA,CACA9K,OAAAiP,KAAA8mC,gBAAAjgB,mBAAA4Z,EAAArwB,WACA6e,MAAAwR,EAAA0B,cAGKwC,KAAA3kC,OACLA,KAAAinC,aAAA/1C,OAAA,EAEA,IAAAg9B,EAAAh9B,OACA8O,KAAAk0B,MAAmBwM,EAAA,EAAS3nC,UACvB,CACL,IAAAiX,EAAAhQ,KAAAgnC,kBAAA,GACAhzC,EAAAgM,KAAA+mC,gBAAA3f,YAAApX,GACAzI,EAAA,iBAAAvT,MAAA,GACAwT,EAAA,iBAAAxT,MAAA,GACAk5B,EAAAltB,KAAA+mC,gBAAAhgB,cAAA/W,GACAod,EAAAptB,KAAA8mC,gBAAA/f,cAAA/mB,KAAAmnC,UAEAnZ,EAAAhuB,KAAA+mC,gBAAAlgB,mBACA7mB,KAAAgnC,mBACAhnC,KAAA6mC,QAAqBjzC,OAAA2zC,EAAA,EAAA3zC,CAAiB2T,EAAAC,EAAAxH,KAAA2mC,YACtCvZ,EAAAptB,KAAA8mC,gBAAA1lC,YACA8rB,EAAAc,EAAAhuB,KAAAynC,eAAAvZ,EACAluB,KAAA4mC,QAAA5mC,KAAA0mC,cAEA1mC,KAAAk0B,MAAmBwM,EAAA,EAASp0B,OAE5BtM,KAAAwP,WAMA42B,EAAAnlC,UAAAo8B,KAAA,WACA,GAAAr9B,KAAAk0B,OAAsBwM,EAAA,EAASt0B,KAAA,CAC/BpM,KAAAk0B,MAAmBwM,EAAA,EAASr0B,QAC5BrM,KAAAwP,UAEA,IAAAu4B,EAAA,EAEA/nC,KAAAknC,qBAAA,GACAlnC,KAAAinC,aAAAnhC,QAAA,SAAA26B,EAAAzvC,EAAA0M,GACA,IAAAw2B,EAAAuM,EAAA3lB,WACA,GAAAoZ,GAAqBwM,EAAA,EAASt0B,MAAA8nB,GAAkBwM,EAAA,EAASr0B,QAAA,CACzD07B,IAEA,IAAAC,EAAgCp0C,OAAA4uC,EAAA,EAAA5uC,CAAM6sC,EAAOF,EAAA,EAAShoC,OACtD,SAAAsR,GACA,IAAAqqB,EAAAuM,EAAA3lB,WACAoZ,GAA2BwM,EAAA,EAASp0B,QACpC4nB,GAA6BwM,EAAA,EAAS3nC,OACtCm7B,GAA6BwM,EAAA,EAASn0B,QACtB3Y,OAAA4uC,EAAA,EAAA5uC,CAAao0C,GAE7B,MADAD,IAEA/nC,KAAA6nC,mBACA7nC,KAAA8nC,gBAGa9nC,MACbA,KAAAknC,qBAAArrC,KAAAmsC,KAEOrD,KAAA3kC,OAEPA,KAAAinC,aAAAnhC,QAAA,SAAA26B,EAAAzvC,EAAA0M,GACA+iC,EAAA3lB,YACqB4lB,EAAA,EAASt0B,MAC9Bq0B,EAAApD,SAIA,IAAA0K,GACAE,WAAAjoC,KAAA8nC,WAAAnD,KAAA3kC,MAAA,KAQAomC,EAAAnlC,UAAA4mC,iBAAA,WACA7nC,KAAAknC,qBAAAphC,QAAsC08B,EAAA,GACtCxiC,KAAAknC,qBAAA,MAGAd,EAvRc,CAwRZnG,YCrSK,SAAAiI,EAAAC,EAAArmC,GACP,IAAAsmC,EAAA,SACAC,EAAA,SACAC,EAAA,SACAC,EAAA,UACA,gBAOAn4B,EAAA2d,EAAA9oB,GACA,OAAAmL,EAGA+3B,EAAAnV,QAAAoV,EAAAh4B,EAAA,GAAAzB,YACAqkB,QAAAqV,EAAAj4B,EAAA,GAAAzB,YACAqkB,QAAAsV,EAAA,WAEA,QADAl4B,EAAA,MACAzB,aAEAqkB,QAAAuV,EAAA,WACA,IAAAv4B,EAAAI,EAAA,GACAo4B,EAAA1mC,EAAAiP,iBAAAf,GAGA,OAFYpc,OAAA2xB,EAAA,EAAA3xB,CAAM40C,EAAA,KAClBA,EAAAx4C,YAAAogB,EAAA,IACAzB,kBAbA,GA0BO,SAAA85B,EAAAC,EAAA5mC,GAGP,IAFA,IAAAuxB,EAAAqV,EAAAx3C,OACAy3C,EAAA,IAAA5wC,MAAAs7B,GACAriC,EAAA,EAAiBA,EAAAqiC,IAASriC,EAC1B23C,EAAA33C,GAAAk3C,EAAAQ,EAAA13C,GAAA8Q,GAEA,OAQO,SAAA6mC,GACP,OAAAA,EAAAz3C,OACA,OAAAy3C,EAAA,GAEA,gBAOAv4B,EAAA2d,EAAA9oB,GACA,GAAAmL,EAEO,CACP,IAAAw4B,EAAgBh1C,OAAAs0B,EAAA,EAAAt0B,CAAawc,GAC7B5R,EAAoB5K,OAAAmP,EAAA,EAAAnP,CAAMg1C,EAAAD,EAAAz3C,QAC1B,OAAAy3C,EAAAnqC,GAAA4R,EAAA2d,EAAA9oB,KAzBA4jC,CAAAF,GAsCO,SAAAG,EAAA14B,EAAA2d,EAAA9oB,4CCyFP,SAAA8jC,EAAAC,GACA,OAAAA,EAGAjxC,MAAAkG,QAAA+qC,GACA,SAAA3tB,GACA,OAAA2tB,GAIA,mBAAAA,EACAA,EAGA,SAAA3tB,GACA,OAAA2tB,IAbA,KAkBe,IAAAC,EA7JL,SAAA99B,GACV,SAAA+9B,EAAAnpC,GAEAoL,EAAA9X,KAAA2M,MAMAA,KAAAmpC,YAAuBv1C,OAAA2vC,EAAA,EAAA3vC,CAAamM,EAAAkF,YAMpCjF,KAAAopC,cAAAL,EAAAhpC,EAAAspC,cAMArpC,KAAAspC,8BAAAtuC,IAAA+E,EAAAwpC,yBACAxpC,EAAAwpC,wBAOAvpC,KAAAwpC,SAAA,EAMAxpC,KAAAi0B,YAAAj5B,IAAA+E,EAAAm0B,MACAn0B,EAAAm0B,MAAsBuV,EAAA,EAAW/0B,MAMjC1U,KAAA0pC,YAAA1uC,IAAA+E,EAAAkpB,OAAAlpB,EAAAkpB,MAsFA,OAlFA9d,IAAA+9B,EAAAlmC,UAAAmI,GACA+9B,EAAAjoC,UAAArN,OAAAqP,OAAAkI,KAAAlK,WACAioC,EAAAjoC,UAAAiC,YAAAgmC,EAMAA,EAAAjoC,UAAA0oC,gBAAA,WACA,OAAA3pC,KAAAopC,eAMAF,EAAAjoC,UAAA2oC,2BAAA,WACA,OAAA5pC,KAAAspC,0BAQAJ,EAAAjoC,UAAA4oC,cAAA,WACA,OAAA7pC,KAAAmpC,aAOAD,EAAAjoC,UAAA+lB,eAAA,WACA,OAAWpzB,OAAAk2C,EAAA,EAAAl2C,IAQXs1C,EAAAjoC,UAAA6Z,SAAA,WACA,OAAA9a,KAAAi0B,QAMAiV,EAAAjoC,UAAA8oC,SAAA,WACA,OAAA/pC,KAAA0pC,QAOAR,EAAAjoC,UAAA0pB,QAAA,WACA3qB,KAAAwP,WAUA05B,EAAAjoC,UAAA+oC,gBAAA,SAAAX,GACArpC,KAAAopC,cAAAL,EAAAM,GACArpC,KAAAwP,WAQA05B,EAAAjoC,UAAA6/B,SAAA,SAAA5M,GACAl0B,KAAAi0B,OAAAC,EACAl0B,KAAAwP,WAGA05B,EAhIU,CAiIRe,EAAA,YC7IEC,EAAU,SAAAhB,GACd,SAAAiB,EAAApqC,GAEAmpC,EAAA71C,KAAA2M,KAAA,CACAqpC,aAAAtpC,EAAAspC,aACAE,wBAAAxpC,EAAAwpC,wBACAtkC,WAAAlF,EAAAkF,WACAivB,MAAAn0B,EAAAm0B,MACAjL,MAAAlpB,EAAAkpB,QAOAjpB,KAAAoqC,aAAApvC,IAAA+E,EAAAsqC,QAAAtqC,EAAAsqC,OAMArqC,KAAAsqC,qBAAAtvC,IAAA+E,EAAAwqC,eACAxqC,EAAAwqC,eAAA,EAMAvqC,KAAA8B,cAAA9G,IAAA+E,EAAA+B,SAAA/B,EAAA+B,SAAA,KAMA9B,KAAAwqC,UAAA,IAAyB/H,EAAS1iC,EAAA0qC,WAMlCzqC,KAAA0qC,QAAA,MAMA1qC,KAAA0yB,KAAA3yB,EAAAjE,KAAA,GAMAkE,KAAA2qC,YAAA,CAAwBtK,WAAAtgC,EAAAsgC,YA2NxB,OAvNA6I,IAAAiB,EAAAnnC,UAAAkmC,GACAiB,EAAAlpC,UAAArN,OAAAqP,OAAAimC,KAAAjoC,WACAkpC,EAAAlpC,UAAAiC,YAAAinC,EAKAA,EAAAlpC,UAAAoxB,eAAA,WACA,OAAAryB,KAAAwqC,UAAAnY,kBAOA8X,EAAAlpC,UAAA0hC,YAAA,SAAA19B,EAAA29B,GACA,IAAA4H,EAAAxqC,KAAA4qC,0BAAA3lC,GACAulC,GACAA,EAAA7H,YAAAC,IAaAuH,EAAAlpC,UAAA4pC,kBAAA,SAAA5lC,EAAA+K,EAAAa,EAAA3d,GACA,IAAAs3C,EAAAxqC,KAAA4qC,0BAAA3lC,GACA,IAAAulC,EACA,SAKA,IAFA,IACA/J,EAAAqK,EAAAC,EADAC,GAAA,EAEA15C,EAAAuf,EAAAhf,KAAgCP,GAAAuf,EAAA9e,OAAqBT,EACrD,QAAAC,EAAAsf,EAAA/e,KAAkCP,GAAAsf,EAAA7e,OAAqBT,EACvDu5C,EAAuBl3C,OAAAs0B,EAAA,EAAAt0B,CAASoc,EAAA1e,EAAAC,GAChCw5C,GAAA,EACAP,EAAAjY,YAAAuY,KAEAC,GADAtK,EAA0D+J,EAAAh/B,IAAAs/B,IAC1DhwB,aAAuC4lB,EAAA,EAASp0B,UAEhDy+B,GAAA,IAAA73C,EAAAutC,IAGAsK,IACAC,GAAA,GAIA,OAAAA,GAOAb,EAAAlpC,UAAAgqC,uBAAA,SAAAhmC,GACA,UAQAklC,EAAAlpC,UAAAkP,OAAA,WACA,OAAAnQ,KAAA0yB,MAQAyX,EAAAlpC,UAAAiqC,OAAA,SAAApvC,GACAkE,KAAA0yB,OAAA52B,IACAkE,KAAA0yB,KAAA52B,EACAkE,KAAAwP,YAQA26B,EAAAlpC,UAAAkqC,UAAA,SAAAlmC,GACA,OAAAjF,KAAAoqC,SAMAD,EAAAlpC,UAAA+lB,eAAA,WACA,OAAAhnB,KAAA8B,SAAAklB,kBAYAmjB,EAAAlpC,UAAAmqC,QAAA,SAAAp7B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,GACA,OAAWrR,OAAAk2C,EAAA,EAAAl2C,IAQXu2C,EAAAlpC,UAAAoqC,YAAA,WACA,OAAArrC,KAAA8B,UAOAqoC,EAAAlpC,UAAAqqC,yBAAA,SAAArmC,GACA,OAAAjF,KAAA8B,SAGA9B,KAAA8B,SAFalO,OAAA23C,EAAA,EAAA33C,CAAwBqR,IAWrCklC,EAAAlpC,UAAA2pC,0BAAA,SAAA3lC,GACA,IAAAumC,EAAAxrC,KAAA6pC,gBACA,OAAA2B,IAAqB53C,OAAA2vC,EAAA,EAAA3vC,CAAU43C,EAAAvmC,GAC/B,KAEAjF,KAAAwqC,WAWAL,EAAAlpC,UAAAwqC,kBAAA,SAAA1d,GACA,OAAA/tB,KAAAsqC,iBASAH,EAAAlpC,UAAAyqC,iBAAA,SAAA17B,EAAA+d,EAAA9oB,GACA,IAAAnD,EAAA9B,KAAAsrC,yBAAArmC,GACAslC,EAAAvqC,KAAAyrC,kBAAA1d,GACA9H,EAAmBryB,OAAAuzB,EAAA,EAAAvzB,CAAMkO,EAAAslB,YAAApX,GAAAhQ,KAAA0qC,SACzB,UAAAH,EACAtkB,EAEaryB,OAAAuzB,EAAA,EAAAvzB,CAASqyB,EAAAskB,EAAAvqC,KAAA0qC,UAatBP,EAAAlpC,UAAA0qC,+BAAA,SAAAv7B,EAAAjK,GACA,IAAAlB,OAAAjK,IAAAmL,EACAA,EAAAnG,KAAA6pC,gBACA/nC,EAAA9B,KAAAsrC,yBAAArmC,GAIA,OAHAjF,KAAA+pC,YAAA9kC,EAAAvD,aACA0O,EAAkBxc,OAAA23C,EAAA,EAAA33C,CAAKkO,EAAAsO,EAAAnL,IAEZrR,OAAAs0B,EAAA,EAAAt0B,CAAgBwc,EAAAtO,GAAAsO,EAAA,MAM3B+5B,EAAAlpC,UAAA0pB,QAAA,WACA3qB,KAAAwqC,UAAAtuC,QACA8D,KAAAwP,WAWA26B,EAAAlpC,UAAA2qC,QAAA,SAAA57B,EAAA1e,EAAAC,EAAA0T,KAEAklC,EA/Qc,CAgRZlB,GAQK4C,EAAA,SAAA5gC,GACP,SAAA4gC,EAAAhxC,EAAA4lC,GAEAx1B,EAAA5X,KAAA2M,KAAAnF,GAOAmF,KAAAygC,OAQA,OAJAx1B,IAAA4gC,EAAA7oC,UAAAiI,GACA4gC,EAAA5qC,UAAArN,OAAAqP,OAAAgI,KAAAhK,WACA4qC,EAAA5qC,UAAAiC,YAAA2oC,EAEAA,EAlBO,CAmBL5gC,EAAA,GCzUa6gC,EAOf,gBAPeA,EAef,cAfeA,EAsBf,gBCoCIC,EAAS,SAAAC,GACb,SAAAC,EAAAlsC,GAEAisC,EAAA34C,KAAA2M,KAAA,CACAqpC,aAAAtpC,EAAAspC,aACAoB,UAAA1qC,EAAA0qC,UACAJ,OAAAtqC,EAAAsqC,OACAplC,WAAAlF,EAAAkF,WACAivB,MAAAn0B,EAAAm0B,MACApyB,SAAA/B,EAAA+B,SACA6/B,iBAAA5hC,EAAA4hC,iBACA5hC,EAAA4hC,iBAAAuK,EACA3B,eAAAxqC,EAAAwqC,eACA4B,gBAAApsC,EAAAosC,gBACA5sB,IAAAxf,EAAAwf,IACA6sB,KAAArsC,EAAAqsC,KACAnjB,MAAAlpB,EAAAkpB,MACAoX,WAAAtgC,EAAAsgC,WACAvkC,IAAAiE,EAAAjE,IACAytC,wBAAAxpC,EAAAwpC,0BAOAvpC,KAAAkqB,iBACAlvB,IAAA+E,EAAAmqB,YAAAnqB,EAAAmqB,YAAA,KAMAlqB,KAAAqsC,eAAArxC,IAAA+E,EAAAssC,UACAtsC,EAAAssC,UAA0B5K,EAM1BzhC,KAAAssC,uBAAA,GAMAtsC,KAAAusC,sBAAA,GAMAvsC,KAAAwsC,4BAAAzsC,EAAA0sC,2BAMAzsC,KAAA0sC,0BAAA,EA6QA,OA1QAV,IAAAC,EAAAjpC,UAAAgpC,GACAC,EAAAhrC,UAAArN,OAAAqP,OAAA+oC,KAAA/qC,WACAgrC,EAAAhrC,UAAAiC,YAAA+oC,EAKAA,EAAAhrC,UAAAoxB,eAAA,WACA,IAASnM,EAAA,EACT,OAAA8lB,EAAA/qC,UAAAoxB,eAAAh/B,KAAA2M,MAEA,GAAAA,KAAAwqC,UAAAnY,iBACA,SAEA,QAAAv2B,KAAAkE,KAAAssC,uBACA,GAAAtsC,KAAAssC,uBAAAxwC,GAAAu2B,iBACA,SAIA,UAMA4Z,EAAAhrC,UAAA0hC,YAAA,SAAA19B,EAAA29B,GACA,GAAS1c,EAAA,EAAT,CAIA,IAAAymB,EAAA3sC,KAAA4qC,0BAAA3lC,GAGA,QAAAixB,KADAl2B,KAAAwqC,UAAA7H,YAAA3iC,KAAAwqC,WAAAmC,EAAA/J,EAAA,IACA5iC,KAAAssC,uBAAA,CACA,IAAA9B,EAAAxqC,KAAAssC,uBAAApW,GACAsU,EAAA7H,YAAA6H,GAAAmC,EAAA/J,EAAA,UARAoJ,EAAA/qC,UAAA0hC,YAAAtvC,KAAA2M,KAAAiF,EAAA29B,IAeAqJ,EAAAhrC,UAAAgqC,uBAAA,SAAAhmC,GACA,OAAQihB,EAAA,GACRlmB,KAAA6pC,iBAAA5kC,IAA+CrR,OAAA2vC,EAAA,EAAA3vC,CAAUoM,KAAA6pC,gBAAA5kC,GACzD,EAEAjF,KAAA4sC,aAOAX,EAAAhrC,UAAA2rC,UAAA,WACA,UAMAX,EAAAhrC,UAAAkqC,UAAA,SAAAlmC,GACA,QAAQihB,EAAA,GACRlmB,KAAA6pC,iBAAA5kC,IAA+CrR,OAAA2vC,EAAA,EAAA3vC,CAAUoM,KAAA6pC,gBAAA5kC,KAGzD+mC,EAAA/qC,UAAAkqC,UAAA93C,KAAA2M,KAAAiF,IAOAgnC,EAAAhrC,UAAAqqC,yBAAA,SAAArmC,GACA,IAASihB,EAAA,EACT,OAAA8lB,EAAA/qC,UAAAqqC,yBAAAj4C,KAAA2M,KAAAiF,GAEA,IAAAumC,EAAAxrC,KAAA6pC,gBACA,IAAA7pC,KAAA8B,UAAA0pC,IAAuC53C,OAAA2vC,EAAA,EAAA3vC,CAAU43C,EAAAvmC,GAE5C,CACL,IAAA4nC,EAAoBj5C,OAAAk2C,EAAA,EAAAl2C,CAAMqR,GAI1B,OAHA4nC,KAAA7sC,KAAAusC,wBACAvsC,KAAAusC,sBAAAM,GAA8Cj5C,OAAA23C,EAAA,EAAA33C,CAAwBqR,IAGRjF,KAAAusC,sBAAAM,GAP9D,OAAA7sC,KAAA8B,UAeAmqC,EAAAhrC,UAAA2pC,0BAAA,SAAA3lC,GACA,IAASihB,EAAA,EACT,OAAA8lB,EAAA/qC,UAAA2pC,0BAAAv3C,KAAA2M,KAAAiF,GAEA,IAAAumC,EAAAxrC,KAAA6pC,gBAAwC,IAAA2B,GAAkB53C,OAAA2vC,EAAA,EAAA3vC,CAAU43C,EAAAvmC,GACpE,OAAAjF,KAAAwqC,UAEA,IAAAqC,EAAoBj5C,OAAAk2C,EAAA,EAAAl2C,CAAMqR,GAI1B,OAHA4nC,KAAA7sC,KAAAssC,yBACAtsC,KAAAssC,uBAAAO,GAAA,IAAmDpK,EAASziC,KAAAwqC,UAAAxY,gBAE5DhyB,KAAAssC,uBAAAO,IAcAZ,EAAAhrC,UAAA6rC,YAAA,SAAA98B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,EAAAnJ,GACA,IAAAsU,EAAA,CAAAJ,EAAA1e,EAAAC,GACAw7C,EAAA/sC,KAAA2rC,+BACAv7B,EAAAnL,GACA+nC,EAAAD,EACA/sC,KAAAmsC,gBAAAY,EAAAhf,EAAA9oB,QAAAjK,EACAylC,EAAA,IAAAzgC,KAAAqsC,UACAj8B,OACApV,IAAAgyC,EAA8BtM,EAAA,EAASt0B,KAAQs0B,EAAA,EAASn0B,WACxDvR,IAAAgyC,IAAA,GACAhtC,KAAAkqB,YACAlqB,KAAA2hC,iBACA3hC,KAAA2qC,aAIA,OAHAlK,EAAA3kC,MACIlI,OAAA4uC,EAAA,EAAA5uC,CAAM6sC,EAAOF,EAAA,EAAShoC,OAC1ByH,KAAAitC,iBAAAjtC,MACAygC,GAMAwL,EAAAhrC,UAAAmqC,QAAA,SAAAp7B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,GACA,IAAAwB,EAA+EzG,KAAA6pC,gBAC/E,GAAS3jB,EAAA,GACTzf,GAAAxB,IAA4CrR,OAAA2vC,EAAA,EAAA3vC,CAAU6S,EAAAxB,GAEjD,CACL,IAEAw7B,EAFAp8B,EAAArE,KAAA4qC,0BAAA3lC,GACAmL,EAAA,CAAAJ,EAAA1e,EAAAC,GAEAu5C,EAAyBl3C,OAAAs0B,EAAA,EAAAt0B,CAAMwc,GAC/B/L,EAAAkuB,YAAAuY,KACArK,EAAwDp8B,EAAAmH,IAAAs/B,IAExD,IAAAhvC,EAAAkE,KAAAmQ,SACA,GAAAswB,KAAA3kC,OACA,OAAA2kC,EAEA,IAAA4F,EAAArmC,KAAAsrC,yBAAA7kC,GACA6/B,EAAAtmC,KAAAsrC,yBAAArmC,GACAshC,EACAvmC,KAAA2rC,+BAAAv7B,EAAAnL,GACAioC,EAAA,IAA0B/G,EAC1B1/B,EAAA4/B,EACAphC,EAAAqhC,EACAl2B,EAAAm2B,EAAAvmC,KAAAyrC,kBAAA1d,GACA/tB,KAAA4sC,YACA,SAAA58B,EAAA1e,EAAAC,EAAAw8B,GACA,OAAA/tB,KAAAmtC,gBAAAn9B,EAAA1e,EAAAC,EAAAw8B,EAAAtnB,IACWk+B,KAAA3kC,WAAAwsC,4BACXxsC,KAAA0sC,0BAUA,OATAQ,EAAApxC,MAEA2kC,GACAyM,EAAA/M,YAAAM,EACAyM,EAAAvM,sBACAt8B,EAAA2uB,QAAA8X,EAAAoC,IAEA7oC,EAAAuE,IAAAkiC,EAAAoC,GAEAA,EAnCA,OAAAltC,KAAAmtC,gBAAAn9B,EAAA1e,EAAAC,EAAAw8B,EAAAtnB,GAAAxB,IAiDAgnC,EAAAhrC,UAAAksC,gBAAA,SAAAn9B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,GACA,IAAAw7B,EAAA,KACAqK,EAAuBl3C,OAAAs0B,EAAA,EAAAt0B,CAASoc,EAAA1e,EAAAC,GAChCuK,EAAAkE,KAAAmQ,SACA,GAAAnQ,KAAAwqC,UAAAjY,YAAAuY,IAKA,IADArK,EAAAzgC,KAAAwqC,UAAAh/B,IAAAs/B,IACAhvC,OAAA,CAIA,IAAAqkC,EAAAM,EACAA,EAAAzgC,KAAA8sC,YAAA98B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,EAAAnJ,GAGAqkC,EAAArlB,YAAsC4lB,EAAA,EAASt0B,KAE/Cq0B,EAAAN,0BAEAM,EAAAN,cAEAM,EAAAE,sBACA3gC,KAAAwqC,UAAAxX,QAAA8X,EAAArK,SAnBAA,EAAAzgC,KAAA8sC,YAAA98B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,EAAAnJ,GACAkE,KAAAwqC,UAAA5hC,IAAAkiC,EAAArK,GAqBA,OAAAA,GAQAwL,EAAAhrC,UAAAmsC,2BAAA,SAAA5xB,GACA,GAAS0K,EAAA,GACTlmB,KAAA0sC,0BAAAlxB,EADA,CAKA,QAAA0a,KADAl2B,KAAA0sC,yBAAAlxB,EACAxb,KAAAssC,uBACAtsC,KAAAssC,uBAAApW,GAAAh6B,QAEA8D,KAAAwP,YAeAy8B,EAAAhrC,UAAAosC,yBAAA,SAAApoC,EAAAqoC,GACA,GAAQpnB,EAAA,EAA0B,CAClC,IAAAqD,EAAiB31B,OAAA2vC,EAAA,EAAA3vC,CAAaqR,GAC9B,GAAAskB,EAAA,CACA,IAAAsjB,EAAsBj5C,OAAAk2C,EAAA,EAAAl2C,CAAM21B,GAC5BsjB,KAAA7sC,KAAAusC,wBACAvsC,KAAAusC,sBAAAM,GAAAS,MAMArB,EAvUa,CC7BF,SAAA9B,GACX,SAAA6B,EAAAjsC,GAEAoqC,EAAA92C,KAAA2M,KAAA,CACAqpC,aAAAtpC,EAAAspC,aACAoB,UAAA1qC,EAAA0qC,UACAJ,OAAAtqC,EAAAsqC,OACAplC,WAAAlF,EAAAkF,WACAivB,MAAAn0B,EAAAm0B,MACApyB,SAAA/B,EAAA+B,SACAyoC,eAAAxqC,EAAAwqC,eACAthB,MAAAlpB,EAAAkpB,MACAoX,WAAAtgC,EAAAsgC,WACAvkC,IAAAiE,EAAAjE,IACAytC,wBAAAxpC,EAAAwpC,0BAOAvpC,KAAAutC,0BAAAxtC,EAAAosC,gBAMAnsC,KAAA2hC,iBAAA5hC,EAAA4hC,iBAMA3hC,KAAAmsC,gBAAApsC,EAAAosC,gBAAApsC,EAAAosC,gBAAAxH,KAAA3kC,MAA0F8oC,EAM1F9oC,KAAAosC,KAAA,KAEArsC,EAAAqsC,KACApsC,KAAAwtC,QAAAztC,EAAAqsC,MACKrsC,EAAAwf,KACLvf,KAAAytC,OAAA1tC,EAAAwf,KAGAxf,EAAAosC,iBACAnsC,KAAA0tC,mBAAA3tC,EAAAosC,gBAAAnsC,KAAA0yB,MAOA1yB,KAAA2tC,iBAAA,GA2HA,OAvHAxD,IAAA6B,EAAAhpC,UAAAmnC,GACA6B,EAAA/qC,UAAArN,OAAAqP,OAAAknC,KAAAlpC,WACA+qC,EAAA/qC,UAAAiC,YAAA8oC,EAOAA,EAAA/qC,UAAA2sC,oBAAA,WACA,OAAA5tC,KAAA2hC,kBAQAqK,EAAA/qC,UAAA4sC,mBAAA,WACA,OAAA7tC,KAAAmsC,iBAUAH,EAAA/qC,UAAA6sC,QAAA,WACA,OAAA9tC,KAAAosC,MAQAJ,EAAA/qC,UAAAgsC,iBAAA,SAAAv6B,GACA,IAGA7X,EAHA4lC,EAAuD/tB,EAAA,OACvDq7B,EAAcn6C,OAAAk2C,EAAA,EAAAl2C,CAAM6sC,GACpBuN,EAAAvN,EAAA3lB,WAEAkzB,GAAqBtN,EAAA,EAASr0B,SAC9BrM,KAAA2tC,iBAAAI,IAAA,EACAlzC,EAAaixC,GACRiC,KAAA/tC,KAAA2tC,0BACL3tC,KAAA2tC,iBAAAI,GACAlzC,EAAAmzC,GAA0BtN,EAAA,EAAS3nC,MAAS+yC,EAC5CkC,GAAsBtN,EAAA,EAASp0B,QAAA0hC,GAAwBtN,EAAA,EAASl0B,MACtDs/B,OAAa9wC,GAEvBA,MAAAH,GACAmF,KAAA6L,cAAA,IAA6BggC,EAAehxC,EAAA4lC,KAS5CuL,EAAA/qC,UAAAgtC,oBAAA,SAAAtM,GACA3hC,KAAAwqC,UAAAtuC,QACA8D,KAAA2hC,mBACA3hC,KAAAwP,WASAw8B,EAAA/qC,UAAAysC,mBAAA,SAAAvB,EAAArwC,GACAkE,KAAAmsC,kBACAnsC,KAAAwqC,UAAA1H,0BACA,IAAAhnC,EACAkE,KAAAkrC,OAAApvC,GAEAkE,KAAAwP,WASAw8B,EAAA/qC,UAAAwsC,OAAA,SAAAluB,GACA,IAAA6sB,EAAApsC,KAAAosC,KL/EO,SAAA7sB,GACP,IAAA6sB,EAAA,GACAnrB,EAAA,sBAAkCitB,KAAA3uB,GAClC,GAAA0B,EAAA,CAEA,IAEAktB,EAFAC,EAAAntB,EAAA,GAAAotB,WAAA,GACAC,EAAArtB,EAAA,GAAAotB,WAAA,GAEA,IAAAF,EAAAC,EAAkCD,GAAAG,IAA0BH,EAC5D/B,EAAAvwC,KAAA0jB,EAAAyT,QAAA/R,EAAA,GAAAzqB,OAAA+3C,aAAAJ,KAEA,OAAA/B,EAGA,GADAnrB,IAAA,kBAAkCitB,KAAA3uB,GAClC,CAGA,IADA,IAAAivB,EAAAjd,SAAAtQ,EAAA,OACAjwB,EAAAugC,SAAAtQ,EAAA,OAAwCjwB,GAAAw9C,EAAWx9C,IACnDo7C,EAAAvwC,KAAA0jB,EAAAyT,QAAA/R,EAAA,GAAAjwB,EAAA2d,aAEA,OAAAy9B,EAGA,OADAA,EAAAvwC,KAAA0jB,GACA6sB,EKwD2BqC,CAASlvB,GACpCvf,KAAAwtC,QAAApB,IAQAJ,EAAA/qC,UAAAusC,QAAA,SAAApB,GACApsC,KAAAosC,OACA,IAAAtwC,EAAAswC,EAAAlb,KAAA,MACAlxB,KAAAutC,yBACAvtC,KAAA0tC,mBAA8BjF,EAAmB2D,EAAApsC,KAAA8B,UAAAhG,GAEjDkE,KAAAkrC,OAAApvC,IAOAkwC,EAAA/qC,UAAA2qC,QAAA,SAAA57B,EAAA1e,EAAAC,GACA,IAAAu5C,EAAuBl3C,OAAAs0B,EAAA,EAAAt0B,CAASoc,EAAA1e,EAAAC,GAChCyO,KAAAwqC,UAAAjY,YAAAuY,IACA9qC,KAAAwqC,UAAAh/B,IAAAs/B,IAIAkB,EAlLW,CH8SI,IE8Df,SAAAE,EAAAwC,EAAAngB,GAC+CmgB,EAAAvM,WAAA5T,MAGhCjgC,EAAA,wDEnVXqgD,EAAG,SAAA1C,GACP,SAAA58B,EAAA+M,GACA,IAAArc,EAAAqc,GAAA,GACAnX,OAAAjK,IAAA+E,EAAAkF,WACAlF,EAAAkF,WAAA,YAEAnD,OAAA9G,IAAA+E,EAAA+B,SAAA/B,EAAA+B,SACMlO,OAAA05C,EAAA,EAAA15C,CAAS,CACf7C,OAAgB6C,OAAA05C,EAAA,EAAA15C,CAAoBqR,GACpCygB,QAAA3lB,EAAA2lB,QACAN,QAAArlB,EAAAqlB,QACAa,SAAAlmB,EAAAkmB,WAGAgmB,EAAA54C,KAAA2M,KAAA,CACAqpC,aAAAtpC,EAAAspC,aACAoB,UAAA1qC,EAAA0qC,UACAvgB,YAAAnqB,EAAAmqB,YACAmgB,OAAAtqC,EAAAsqC,OACAplC,aACAwnC,2BAAA1sC,EAAA0sC,2BACA3qC,WACA6/B,iBAAA5hC,EAAA4hC,iBACA4I,eAAAxqC,EAAAwqC,eACA4B,gBAAApsC,EAAAosC,gBACA5sB,IAAAxf,EAAAwf,IACA6sB,KAAArsC,EAAAqsC,KACAnjB,WAAAjuB,IAAA+E,EAAAkpB,OAAAlpB,EAAAkpB,MACAoX,WAAAtgC,EAAAsgC,WACAkJ,wBAAAxpC,EAAAwpC,0BASA,OAJA0C,IAAA58B,EAAArM,UAAAipC,GACA58B,EAAApO,UAAArN,OAAAqP,OAAAgpC,KAAAhrC,WACAoO,EAAApO,UAAAiC,YAAAmM,EAEAA,EAtCO,CAuCLu/B,EAAA,GC1FKC,EAAA,2FAkCPC,EAAA,SAAAz/B,GACA,SAAAy/B,EAAA1yB,GAEA,IAEAitB,EAFAtpC,EAAAqc,GAAA,GAIAitB,OADAruC,IAAA+E,EAAAspC,aACAtpC,EAAAspC,aAEA,CAAAwF,GAGA,IAAA3kB,OAAAlvB,IAAA+E,EAAAmqB,YACAnqB,EAAAmqB,YAAA,YAEA3K,OAAAvkB,IAAA+E,EAAAwf,IACAxf,EAAAwf,IAAA,uDAEAlQ,EAAAhc,KAAA2M,KAAA,CACAqpC,eACAoB,UAAA1qC,EAAA0qC,UACAvgB,cACAmgB,YAAArvC,IAAA+E,EAAAsqC,QAAAtqC,EAAAsqC,OACA3kB,aAAA1qB,IAAA+E,EAAA2lB,QAAA3lB,EAAA2lB,QAAA,GACA+mB,2BAAA1sC,EAAA0sC,2BACA9K,iBAAA5hC,EAAA4hC,iBACApiB,MACA0J,MAAAlpB,EAAAkpB,MACAsgB,yBAAA,IASA,OAJAl6B,IAAAy/B,EAAA9rC,UAAAqM,GACAy/B,EAAA7tC,UAAArN,OAAAqP,OAAAoM,KAAApO,WACA6tC,EAAA7tC,UAAAiC,YAAA4rC,EAEAA,EArCA,CD0De,GClBAxgD,EAAA,kCC7ER,SAAAwC,EAAA4B,EAAAC,EAAAC,EAAAC,GACP,KAAAF,EAAAC,EAAAC,GAAA,CACA,QAAA7B,EAAA,EAAmBA,EAAA6B,IAAY7B,EAAA,CAC/B,IAAA2G,EAAAjF,EAAAC,EAAA3B,GACA0B,EAAAC,EAAA3B,GAAA0B,EAAAE,EAAAC,EAAA7B,GACA0B,EAAAE,EAAAC,EAAA7B,GAAA2G,EAEAhF,GAAAE,EACAD,GAAAC,GCNO,SAAAk8C,EAAAr8C,EAAAC,EAAAC,EAAAC,GAMP,IAHA,IAAAm8C,EAAA,EACAt6C,EAAAhC,EAAAE,EAAAC,GACAiC,EAAApC,EAAAE,EAAAC,EAAA,GACQF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAA8B,EAAAjC,EAAAC,GACAoC,EAAArC,EAAAC,EAAA,GACAq8C,IAAAr6C,EAAAD,IAAAK,EAAAD,GACAJ,EAAAC,EACAG,EAAAC,EAEA,OAAAi6C,EAAA,EAiBO,SAAAC,EAAAv8C,EAAAC,EAAA0e,EAAAxe,EAAAwlB,GAEP,IADA,IAAAukB,OAAA5hC,IAAAqd,KACArnB,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,IAAA4B,EAAAye,EAAArgB,GACAk+C,EAAAH,EACAr8C,EAAAC,EAAAC,EAAAC,GACA,OAAA7B,GACA,GAAA4rC,GAAAsS,IAAAtS,IAAAsS,EACA,cAGA,GAAAtS,IAAAsS,IAAAtS,GAAAsS,EACA,SAGAv8C,EAAAC,EAEA,SAiBO,SAAAu8C,EAAAz8C,EAAAC,EAAA+e,EAAA7e,EAAAwlB,GACP,QAAArnB,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAC5C,IAAAi+C,EACAv8C,EAAAC,EAAA+e,EAAA1gB,GAAA6B,EAAAwlB,GACA,SAGA,SAiBO,SAAA+2B,EAAA18C,EAAAC,EAAA0e,EAAAxe,EAAAwlB,GAEP,IADA,IAAAukB,OAAA5hC,IAAAqd,KACArnB,EAAA,EAAAC,EAAAogB,EAAAngB,OAAmCF,EAAAC,IAAQD,EAAA,CAC3C,IAAA4B,EAAAye,EAAArgB,GACAk+C,EAAAH,EACAr8C,EAAAC,EAAAC,EAAAC,IACA,IAAA7B,EACA4rC,GAAAsS,IAAAtS,IAAAsS,EACAtS,IAAAsS,IAAAtS,GAAAsS,IAEMp+C,EAAkB4B,EAAAC,EAAAC,EAAAC,GAExBF,EAAAC,EAEA,OAAAD,EAiBO,SAAA08C,EAAA38C,EAAAC,EAAA+e,EAAA7e,EAAAwlB,GACP,QAAArnB,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAC5C2B,EAAAy8C,EACA18C,EAAAC,EAAA+e,EAAA1gB,GAAA6B,EAAAwlB,GAEA,OAAA1lB,EAzIAvE,EAAAC,EAAAC,EAAA,sBAAA2gD,IAAA7gD,EAAAC,EAAAC,EAAA,sBAAA6gD,IAAA/gD,EAAAC,EAAAC,EAAA,sBAAA8gD,IAAAhhD,EAAAC,EAAAC,EAAA,sBAAA+gD,0LC2BIC,EAAY,SAAA3hC,GAChB,SAAA4hC,EAAAz+C,EAAAoe,EAAAuC,GA8CA,GA5CA9D,EAAAta,KAAA2M,MAMAA,KAAAwvC,OAAA,GAMAxvC,KAAAyvC,6BAAA,EAMAzvC,KAAA0vC,oBAAA,KAMA1vC,KAAA2W,WAAA,EAMA3W,KAAA4W,mBAAA,EAMA5W,KAAA8X,mBAAA,EAMA9X,KAAA+X,yBAAA,MAEAtG,IAAA1Z,MAAAkG,QAAAnN,EAAA,KAKA,IAJA,IAAA+c,EAAA7N,KAAAoO,YACAuhC,EAA+C,EAC/Cj9C,EAAA,GACAgf,EAAA,GACA1gB,EAAA,EAAAC,EAAA0+C,EAAAz+C,OAA2CF,EAAAC,IAAQD,EAAA,CACnD,IAAA4+C,EAAAD,EAAA3+C,GACA,IAAAA,IACA6c,EAAA+hC,EAAAxhC,aAIA,IAFA,IAAAzb,EAAAD,EAAAxB,OACAmgB,EAAAu+B,EAAAr3B,UACA3gB,EAAA,EAAA0Z,EAAAD,EAAAngB,OAAyC0G,EAAA0Z,IAAQ1Z,EACjDyZ,EAAAzZ,IAAAjF,EAEQiB,OAAAskB,EAAA,EAAAtkB,CAAMlB,EAAAk9C,EAAA1hC,sBACdwD,EAAA7V,KAAAwV,GAEAnC,EAAArB,EACA/c,EAAA4B,EACA+e,EAAAC,OAEA1W,IAAAkU,GAAAuC,GACAzR,KAAA+O,mBAAAG,EAAmE,GACnElP,KAAAwvC,OAAA/9B,GAEAzR,KAAAiP,eAAgG,EAChGC,GA8QA,OAzQAvB,IAAA4hC,EAAAvsC,UAAA2K,GACA4hC,EAAAtuC,UAAArN,OAAAqP,OAAA0K,KAAA1M,WACAsuC,EAAAtuC,UAAAiC,YAAAqsC,EAOAA,EAAAtuC,UAAA4uC,cAAA,SAAAD,GAEA,IAAAv+B,EACA,GAAArR,KAAAtN,gBAIK,CACL,IAAAC,EAAAqN,KAAAtN,gBAAAxB,OACM0C,OAAAskB,EAAA,EAAAtkB,CAAMoM,KAAAtN,gBAAAk9C,EAAA1hC,sBAEZ,QAAAld,EAAA,EAAAC,GADAogB,EAAAu+B,EAAAr3B,UAAAlnB,SACAH,OAAuCF,EAAAC,IAAQD,EAC/CqgB,EAAArgB,IAAA2B,OARAqN,KAAAtN,gBAAAk9C,EAAA1hC,qBAAA7c,QACAggB,EAAAu+B,EAAAr3B,UAAAlnB,QACA2O,KAAAwvC,OAAA3zC,OASAmE,KAAAwvC,OAAA3zC,KAAAwV,GACArR,KAAAwP,WASA+/B,EAAAtuC,UAAAxS,MAAA,WAGA,IAFA,IAAA4kC,EAAArzB,KAAAwvC,OAAAt+C,OACA4+C,EAAA,IAAA/3C,MAAAs7B,GACAriC,EAAA,EAAmBA,EAAAqiC,IAASriC,EAC5B8+C,EAAA9+C,GAAAgP,KAAAwvC,OAAAx+C,GAAAK,QAGA,WAAAk+C,EACAvvC,KAAAtN,gBAAArB,QAAA2O,KAAA6N,OAAAiiC,IAMAP,EAAAtuC,UAAA4V,eAAA,SAAAvlB,EAAAC,EAAAykB,EAAAI,GACA,OAAAA,EAA6BxiB,OAAAoT,EAAA,EAAApT,CAAwBoM,KAAAoB,YAAA9P,EAAAC,GACrD6kB,GAEApW,KAAA4W,mBAAA5W,KAAAwO,gBACAxO,KAAA2W,UAAA5jB,KAAAyjB,KAAiC5iB,OAAAkjB,EAAA,EAAAljB,CACjCoM,KAAAtN,gBAAA,EAAAsN,KAAAwvC,OAAAxvC,KAAAnN,OAAA,IACAmN,KAAA4W,kBAAA5W,KAAAwO,eAEW5a,OAAAkjB,EAAA,EAAAljB,CACXoM,KAAAoY,6BAAA,EAAApY,KAAAwvC,OAAAxvC,KAAAnN,OACAmN,KAAA2W,WAAA,EAAArlB,EAAAC,EAAAykB,EAAAI,KAMAm5B,EAAAtuC,UAAApS,WAAA,SAAAyC,EAAAC,GACA,OAAWqC,OAAAukB,EAAA,EAAAvkB,CAAsBoM,KAAAoY,6BAAA,EAAApY,KAAAwvC,OAAAxvC,KAAAnN,OAAAvB,EAAAC,IAQjCg+C,EAAAtuC,UAAAvR,QAAA,WACA,OAAWkE,OAAAmjB,EAAA,EAAAnjB,CAAgBoM,KAAAoY,6BAAA,EAAApY,KAAAwvC,OAAAxvC,KAAAnN,SAiB3B08C,EAAAtuC,UAAA+M,eAAA,SAAAqK,GACA,IAAA3lB,EASA,YARAsI,IAAAqd,GACA3lB,EAAAsN,KAAAoY,6BAAA/mB,QACMuC,OAAA0kB,EAAA,EAAA1kB,CACNlB,EAAA,EAAAsN,KAAAwvC,OAAAxvC,KAAAnN,OAAAwlB,IAEA3lB,EAAAsN,KAAAtN,gBAGWkB,OAAAojB,EAAA,EAAApjB,CACXlB,EAAA,EAAAsN,KAAAwvC,OAAAxvC,KAAAnN,SAMA08C,EAAAtuC,UAAA8uC,SAAA,WACA,OAAA/vC,KAAAwvC,QAMAD,EAAAtuC,UAAA+uC,sBAAA,WACA,GAAAhwC,KAAAyvC,6BAAAzvC,KAAAwO,cAAA,CACA,IAAAisB,ECnNO,SAAA/nC,EAAAC,EAAA+e,EAAA7e,GAGP,IAFA,IAAA4nC,EAAA,GACA1pC,EAAe6C,OAAAoT,EAAA,EAAApT,GACf5C,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAoCF,EAAAC,IAAQD,EAAA,CAC5C,IAAAqgB,EAAAK,EAAA1gB,GACAD,EAAa6C,OAAAoT,EAAA,EAAApT,CAAiClB,EAAAC,EAAA0e,EAAA,GAAAxe,GAC9C4nC,EAAA5+B,MAAA9K,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OACA4B,EAAA0e,IAAAngB,OAAA,GAEA,OAAAupC,ED0MwB3W,CACxB9jB,KAAAtN,gBAAA,EAAAsN,KAAAwvC,OAAAxvC,KAAAnN,QACAmN,KAAA0vC,oBAAiC97C,OAAA8kB,EAAA,EAAA9kB,CACjCoM,KAAAoY,6BAAA,EAAApY,KAAAwvC,OAAAxvC,KAAAnN,OACA4nC,GACAz6B,KAAAyvC,4BAAAzvC,KAAAwO,cAEA,OAAAxO,KAAA0vC,qBASAH,EAAAtuC,UAAAgvC,kBAAA,WACA,WAAezsB,EAAA,EAAUxjB,KAAAgwC,wBAAA3+C,QAAuC6lB,EAAA,EAAcrH,MAM9E0/B,EAAAtuC,UAAAmX,2BAAA,WACA,GAAApY,KAAA8X,mBAAA9X,KAAAwO,cAAA,CACA,IAAA9b,EAAAsN,KAAAtN,gBACUkB,OAAA0kB,EAAA,EAAA1kB,CACVlB,EAAA,EAAAsN,KAAAwvC,OAAAxvC,KAAAnN,QACAmN,KAAA+X,yBAAArlB,GAEAsN,KAAA+X,yBAAArlB,EAAArB,QACA2O,KAAA+X,yBAAA7mB,OACY0C,OAAA0kB,EAAA,EAAA1kB,CACZoM,KAAA+X,yBAAA,EAAA/X,KAAAwvC,OAAAxvC,KAAAnN,SAEAmN,KAAA8X,kBAAA9X,KAAAwO,cAEA,OAAAxO,KAAA+X,0BAMAw3B,EAAAtuC,UAAA4N,8BAAA,SAAAP,GACA,IAAAgF,EAAA,GACAa,EAAA,GAKA,OAJAb,EAAApiB,OAAuC0C,OAAAqjB,EAAA,EAAArjB,CACvCoM,KAAAtN,gBAAA,EAAAsN,KAAAwvC,OAAAxvC,KAAAnN,OACAE,KAAAyjB,KAAAlI,GACAgF,EAAA,EAAAa,GACA,IAAAo7B,EAAAj8B,EAAuD4D,EAAA,EAAcpJ,GAAAqG,IASrEo7B,EAAAtuC,UAAAivC,WAAA,SAAA1xC,GACA,GAAAA,EAAA,GAAAwB,KAAAwvC,OAAAt+C,QAAAsN,EACA,YAEA,IAAA7L,EACA,OAAA6L,EACA7L,EAAA,MACK,CACL,IAAAw9C,EAAAnwC,KAAAwvC,OAAAhxC,EAAA,GACA7L,EAAAw9C,IAAAj/C,OAAA,GAEA,IAAAmgB,EAAArR,KAAAwvC,OAAAhxC,GAAAnN,QACAuB,EAAAye,IAAAngB,OAAA,GACA,OAAAyB,EACA,QAAA3B,EAAA,EAAAC,EAAAogB,EAAAngB,OAAuCF,EAAAC,IAAQD,EAC/CqgB,EAAArgB,IAAA2B,EAGA,WAAe+kB,EAAA,EAAO1X,KAAAtN,gBAAArB,MAAAsB,EAAAC,GAAAoN,KAAA6N,OAAAwD,IAQtBk+B,EAAAtuC,UAAAmvC,YAAA,WAMA,IALA,IAAAviC,EAAA7N,KAAA6N,OACAnb,EAAAsN,KAAAtN,gBACAgf,EAAA1R,KAAAwvC,OACAG,EAAA,GACAh9C,EAAA,EACA3B,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAsCF,EAAAC,IAAQD,EAAA,CAC9C,IAAAqgB,EAAAK,EAAA1gB,GAAAK,QACAuB,EAAAye,IAAAngB,OAAA,GACA,OAAAyB,EACA,QAAAiF,EAAA,EAAA0Z,EAAAD,EAAAngB,OAAyC0G,EAAA0Z,IAAQ1Z,EACjDyZ,EAAAzZ,IAAAjF,EAGA,IAAAi9C,EAAA,IAAwBl4B,EAAA,EAAOhlB,EAAArB,MAAAsB,EAAAC,GAAAib,EAAAwD,GAC/Bs+B,EAAA9zC,KAAA+zC,GACAj9C,EAAAC,EAEA,OAAA+8C,GAOAJ,EAAAtuC,UAAAkW,QAAA,WACA,OAAWC,EAAA,EAAY7X,eAOvBgwC,EAAAtuC,UAAAoW,iBAAA,SAAAtmB,GACA,OAAW6C,OAAAqlB,EAAA,EAAArlB,CACXoM,KAAAoY,6BAAA,EAAApY,KAAAwvC,OAAAxvC,KAAAnN,OAAA9B,IAUAw+C,EAAAtuC,UAAAgO,eAAA,SAAAne,EAAAoe,GACAlP,KAAAmP,UAAAD,EAAApe,EAAA,GACAkP,KAAAtN,kBACAsN,KAAAtN,gBAAA,IAEA,IAAAgf,EAAgB9d,OAAA0jB,EAAA,EAAA1jB,CAChBoM,KAAAtN,gBAAA,EAAA5B,EAAAkP,KAAAnN,OAAAmN,KAAAwvC,QACA,OAAA99B,EAAAxgB,OACA8O,KAAAtN,gBAAAxB,OAAA,MACK,CACL,IAAAm/C,EAAA3+B,IAAAxgB,OAAA,GACA8O,KAAAtN,gBAAAxB,OAAA,IAAAm/C,EAAAn/C,OACA,EAAAm/C,IAAAn/C,OAAA,GAEA8O,KAAAwP,WAGA+/B,EAxVgB,CAyVdh4B,EAAA,GAGajpB,EAAA,sDErXfsF,OAAAwrB,eAAAC,EAAA,cACAluB,OAAA,IAEAkuB,EAAA8L,cAgFA,UAAAmlB,WACAA,KACAC,GACC,IACD,MAAAhxB,EAAAixB,EAAAxwC,MACAywC,EAAAzwC,KAAA4a,YAAA81B,YACA,IAAAC,EAAA,GACAnxB,EAAA,IAAoB+wB,EACpBK,QAAA,aACAC,WAAA,OACAC,UAAAL,EAAAnmB,OACAymB,QAAA,SAGA/wC,KAAA8qB,aACA6lB,EAAA90C,KAAAmE,KAAA8qB,aAKAwlB,GACAK,EAAA90C,KAAAy0C,GAKAK,EAAAz/C,SACAsuB,EAAA,WAAAmxB,EAAAzf,KAAA,UAIA,SAAA8f,EAAA1xB,aAAAC,EAAA,CACAC,aACAC,SAAA,QACGO,KAAAixB,IACH,IAAAC,EAAAD,EAAAzwB,cAAA,qBAAA2wB,aAAA,oBACA,OAAAD,KAnHA7xB,EAAA4L,cACA5L,EAAA+L,cAkJA,WACA,MAAA7L,EAAAixB,EAAAxwC,MAEA,IAAAwf,EAAA,CACAuxB,QAAA,QACAH,QAAA,sBACAQ,SAJApxC,KAAA4a,YAAA81B,YAIApmB,OACA+mB,aAAA,oBAEA,SAAAL,EAAA1xB,aAAAC,EAAA,CACAC,gBA3JAH,EAAAkM,eA+JA,SAAAxrB,EAAA,IACA,MAAAuxC,EAAA,CACA/lB,gBAAA,EACA8P,OAAA,WACAt7B,GAEA,OAAAkrB,EAAA53B,KAAA2M,KAAAsxC,EAAA,OAnKA,IAAAN,EAAY5iD,EAAQ,KAGpB,SAAAmjD,EAAAlW,GACA,IAAAmW,EAAA,GAEA,OAAAnW,GACA,UACAmW,EAAA,MACA,MAEA,WACAA,EAAA,mBACA,MAEA,YACAA,EAAA,kBACA,MAEA,WACAA,EAAA,OACA,MAEA,WACAA,EAAA,OACA,MAEA,gBACAA,EAAA,YACA,MAEA,YACAA,EAAA,QACA,MAEA,gBACAA,EAAA,YACA,MAEA,cACAA,EAAA,MAIA,OAAAA,EAGA,SAAAhB,EAAAiB,GACA,OAAAA,EAAA72B,YAAAkzB,UAAA,GAAA9a,QAAA,aAqEA,SAAA/H,GAAAoQ,OACAA,EAAA,OAAAqW,mBACAA,EAAA,GAAyBnmB,eACzBA,GAAA,KACAomB,GACCr1B,GACD,MAAAiD,EAAAixB,EAAAxwC,MACAywC,EAAAzwC,KAAA4a,YAAA81B,YACA,IAAAlxB,EAAA,IAAoBmyB,EACpBZ,QAAA,QACAH,QAAA,aACAE,UAAAL,EAAAnmB,OACA+mB,aAAAE,EAAAlW,IAKA,OAHAqW,EAAAE,OAAAF,EAAAE,QAAAnB,EAAAnmB,OACAonB,IAAAlyB,EAAAqyB,eAjFA,SAAA3xB,GACA,IAAA4xB,EAAA,GAEA,QAAAh2C,KAAAokB,EACAA,EAAAxjB,eAAAZ,IACAg2C,EAAAj2C,QAAoBC,KAAOokB,EAAApkB,MAI3B,OAAAg2C,EAAA5gB,KAAA,KAwEA6gB,CAAAL,IAEAnmB,EAvEA,SAAAhM,EAAAC,GACA,IAAAG,EAAA,IAAAC,IAAAL,GAEA,QAAAzjB,KAAA0jB,EACAA,EAAA9iB,eAAAZ,IACA6jB,EAAAE,aAAAC,OAAAhkB,EAAA0jB,EAAA1jB,IAIAk2C,OAAAC,KAAAtyB,EAAAhR,WAAA,UA+DAujC,CAAA3yB,EAAAC,IAGA,EAAAwxB,EAAA1xB,aAAAC,EAAA,CACAC,eACGQ,KAAAjiB,IAAA,EAAAizC,EAAApwB,eAAA7iB,EAAAue,mCCpJH1oB,OAAAwrB,eAAAC,EAAA,cACAluB,OAAA,IAEAkuB,EAAAiM,QAwBA,UAAA6mB,qBACAA,EAAAC,qBACAA,EAAAC,kBACAA,IAEA,MAAA9yB,EAAA+yB,EAAAtyC,MACAoxC,EAAApxC,KAAA4a,YAAA81B,YAAApmB,OACAioB,EAAAnB,EAAA9gC,MAAA,QACAkiC,EAAAJ,EAAA7hC,IAAAkiC,GAAA,IAAAC,EAAAC,SAAA,eAAAD,EAAAE,eAAAH,KACAI,EAAAR,EAAA9hC,IAAAuiC,GAAA,IAAAJ,EAAAC,SAAA,wBAAAD,EAAAE,eAAAE,KACAC,EAAA,IAAAL,EAAAM,WAAA,gBACAjC,QAAA,QACAkC,QAAA,SACAC,GACG,KAAAR,EAAAC,SAAA,eAAAD,EAAAS,kBAAA,CACHC,oBAAA,CACAC,SAAA,YAEAC,aAAA,uBACAC,OAAA,QACG,KAAAb,EAAAc,QAAA,cAAsC,KAAAd,EAAAM,WAAA,YACzCjC,QAAA,QACAkC,QAAA,OACG,KAAAP,EAAAC,SAAA,eAAAD,EAAAS,kBAAA,CACHC,oBAAA,CACAC,SAAA,YAEAC,aAAA,uBACAC,OAAA,QACG,KAAAb,EAAAc,QAAA,cAAsC,KAAAd,EAAAe,cAAA,CACzCR,QAAA,MACAlC,QAAA,QACAM,aAAA,OACAqC,UAAcnB,QAAiBA,KAC5B,IAAAG,EAAAiB,SAAA,CACHC,YAAmBxC,YAChB,IAAAsB,EAAAC,SAAA,aAAAD,EAAAmB,eAAA,CACHT,oBAAA,CACAC,SAAA,wCAEiBrzC,KAAA8qB,aAAA,cAA0B,IAAA4nB,EAAAoB,iBAAA,UAC3CV,oBAAA,CACAC,SAAA,gDAEG,IAAAX,EAAAC,SAAA,2BAAAD,EAAAE,eAAAT,OAAAK,KAAAK,GAAA,IAAAH,EAAAoB,iBAAA,UACHV,oBAAA,CACAC,SAAA,uBAGA,SAAArC,EAAA1xB,aAAAC,EAAA,GAAuC,CACvCg0B,OAAA,OACAQ,QAAA,CACAC,eAAA,0BAEAC,KAAAlB,EAAApkC,cA7EA0Q,EAAAgM,QAiFA,SAAA9a,GACA,MAAAgP,EAAA+yB,EAAAtyC,MACAoxC,EAAApxC,KAAA4a,YAAA81B,YAAApmB,OACAioB,EAAAnB,EAAA9gC,MAAA,QACAsa,EAAA5qB,KAAA8qB,aAAA,MACAioB,EAAA,IAAAL,EAAAM,WAAA,aACAjC,QAAA,QACAkC,QAAA,SACAC,GACG,KAAAR,EAAAC,SAAA,eAAAD,EAAAS,kBAAA,CACHC,oBAAA,CACAC,SAAA,YAEAC,aAAA,uBACAC,OAAA,QACG,KAAAb,EAAAc,QAAA,cAAsC,KAAAd,EAAAM,WAAA,YACzCjC,QAAA,QACAkC,QAAA,OACG,KAAAP,EAAAC,SAAA,eAAAD,EAAAS,kBAAA,CACHC,oBAAA,CACAC,SAAA,YAEAC,aAAA,uBACAC,OAAA,QACG,KAAAb,EAAAc,QAAA,cAAsC,KAAAd,EAAAe,cAAA,CACzCR,QAAA,MACAlC,QAAA,QACAM,aAAA,OACAqC,UAAcnB,QAAiBA,KAC5B,IAAAG,EAAAiB,SAAA,CACHC,YAAmBxC,YAChB,IAAAsB,EAAAC,SAAA,gBAAAD,EAAAE,eAAA,aAAAF,EAAAC,SAAA,aAAAD,EAAAmB,eAAA,CACHT,oBAAA,CACAC,SAAA,wCAEiBzoB,UAAO,IAAA8nB,EAAAoB,iBAAA,UACxBV,oBAAA,CACAC,SAAA,iDAEG,IAAAX,EAAAoB,iBAAA,WACH,SAAA9C,EAAA1xB,aAAAC,EAAA,CACAE,SAAA,OACG,CACH8zB,OAAA,OACAQ,QAAA,CACAC,eAAA,0BAEAC,KAAAlB,EAAApkC,aACGqR,KAAAK,IACH,MAAAS,EAAAT,EAAA6zB,qBAAA,sBAAA/C,aAAA,OACAgD,EAAA9zB,EAAA6zB,qBAAA,sBAAAzzB,YAAAnQ,MAAA,KACA8jC,EAAA/zB,EAAA6zB,qBAAA,sBAAAzzB,YAAAnQ,MAAA,KACAvf,EAAA,CAAAsjD,WAAAF,EAAA,IAAAE,WAAAF,EAAA,IAAAE,WAAAD,EAAA,IAAAC,WAAAD,EAAA,KACA,OACArjD,SACA+vB,UAtIA,IAAAkwB,EAAY5iD,EAAQ,KAEpBskD,EAAetkD,EAAQ,KAEvB,MAAA8kD,EAAA,CACAoB,YAAA,4CACAC,MAAA,mCACAC,YAAA,mCACAC,YAAA,6BACAC,YAAA,iCACAC,YAAA,6BACAC,YAAA,6BACAC,YAAA,mCACAC,cAAA,+BACAC,qBAAA,oFAGA,SAAAzC,EAAAb,GACA,OAAAA,EAAA72B,YAAAkzB,UAAA,GAAA9a,QAAA,4CCxBAp/B,OAAAwrB,eAAAC,EAAA,cACAluB,OAAA,IAEAkuB,EAAA2zB,WAAA3zB,EAAA8zB,kBAAA9zB,EAAAs0B,SAAAt0B,EAAAo0B,cAAAp0B,EAAAy0B,iBAAAz0B,EAAAw0B,eAAAx0B,EAAAuzB,eAAAvzB,EAAAszB,SAAAtzB,EAAAm0B,aAAA,EAEA,MAAAA,EACAE,YAAA1yB,EAAA8wB,EAAA,GAA8B9V,EAAA,IAC9Bh8B,KAAAghB,OACAhhB,KAAA8xC,QACA9xC,KAAAg8B,WAGA0X,OAAAtX,GACAp8B,KAAAg8B,SAAAngC,KAAAugC,GAGAsX,aAAA53C,EAAA3K,GACA6O,KAAA8xC,MAAAh2C,GAAA3K,EAGAuiD,WACA,MAAA1yB,KACAA,EAAA8wB,MACAA,EAAA9V,SACAA,GACKh8B,KACL,IACAg1C,EACAC,EAFAv3C,EAAA,GAIA,QAAA5B,KAAAg2C,EACAA,EAAAp1C,eAAAZ,IACA4B,EAAA7B,QAAoBC,MAAQg2C,EAAAh2C,OAO5B,OAHAk5C,EAAAhZ,EAAAzrB,IAAA3G,KAAA+E,YAAAuiB,KAAA,QAGelQ,IADfi0B,GADAA,EAAAv3C,EAAAwzB,KAAA,MACA,IAAA+jB,EAAA,MACmCD,MAAYh0B,MAK/C3B,EAAAm0B,UASAn0B,EAAAszB,SAPA,cAAAa,EACAE,YAAAwB,EAAAC,GACAC,MAAA,eAAyB,KAAA5B,EAAA,oBAAmC,CAAA0B,IAAAC,MAc5D91B,EAAAuzB,eAPA,cAAAY,EACAE,YAAA2B,GACAD,MAAA,cAAwB,KAAA5B,EAAA,qBAAoC,CAAA6B,QAiB5Dh2B,EAAAw0B,eAVA,cAAAL,EACAE,aAAAN,oBACAA,GACG,GAAKkC,GACRF,MAAA,cAAwB,KAAA5B,EAAA,sBAAmCJ,GACtD,CAAAkC,QAmBLj2B,EAAAy0B,iBAZA,cAAAN,EACAE,YAAAwB,GAAA9B,oBACAA,EAAA,MACAmC,GACG,IACHH,MAAA,sBAAgC,KAAA5B,EAAA,wBAAqCJ,KACrEmC,GACK,KAAA/B,EAAA,oBAAmC,CAAA0B,UAcxC71B,EAAAo0B,cAPA,cAAAD,EACAE,YAAA8B,EAAAC,GACAL,MAAA,iBAAAI,EAAA,CAAAC,MAcAp2B,EAAAs0B,SAPA,cAAAH,EACAE,YAAA8B,GACAJ,MAAA,YAAAI,KAmBAn2B,EAAA8zB,kBAZA,cAAAK,EACAE,aAAAN,oBACAA,KACAmC,GACG,GAAKvZ,GACRoZ,MAAA,oBAA4BhC,KAC5BmC,GACKvZ,KAcL3c,EAAA2zB,WAPA,cAAAQ,EACAE,YAAAwB,EAAAM,EAAAE,EAAAl5C,GACA44C,MAAA,cAAAI,EAAA,KAAAhC,EAAA,oBAAiE,CAAA0B,IAAA,IAAA1B,EAAA,oBAAiDkC,GAAAl5C,oCC5HlH5I,OAAAwrB,eAAAC,EAAA,cACAluB,OAAA,IAEAkuB,EAAAsL,QAsBA,WACA3qB,KAAA4a,YAAA+P,WAtBAtL,EAAAuL,OAyBA,SAAA0lB,GACAA,EACAtwC,KAAA4a,YAAA+6B,aAAA,CACAC,WAAAtF,IAGAtwC,KAAA6qB,YA9BAxL,EAAAwL,SAoCA,kBACA7qB,KAAA4a,YAAA81B,YAAA,WACA1wC,KAAA4a,YAAA+6B,gBArCAt2B,EAAAyL,UAwCA,WACA,OAAA9qB,KAAA4a,YAAA81B,YAAA,gBAxCArxB,EAAA0L,SA2CA,SAAA4K,GACA31B,KAAA4a,YAAA+6B,aAAA,CACAE,OAAAlgB,KA5CAtW,EAAA2L,SAgDA,WACA,OAAAhrB,KAAA4a,YAAA81B,YAAA,YAhDArxB,EAAA6L,wBAmDA,SAAAx5B,EAAA6e,GACA,SAAAygC,EAAA1xB,aAhDA,SAAAmyB,EAAA//C,EAAA6e,GACA,IAAAulC,EAAAvlC,EAAAwlC,UACAC,EAAA,GAEAvE,EAAA3mB,cACAkrB,EAAA,WAAAvE,EAAA3mB,aAIA,OADA2mB,EAAA72B,YAAAq7B,qBAAAvkD,EAAAokD,EAAA/uB,gBAAA+uB,EAAAjM,gBAAAmM,GAwCAE,CAAAl2C,KAAAtO,EAAA6e,GAAA,CACAiP,WAAA,CACA22B,YAAA,sBAEGn2B,KAAAjiB,IAAA,EAAAizC,EAAApwB,eAAA7iB,EAAAwS,EAAAwlC,UAAAlM,gBAAA1oC,aAtDH,IAAA6vC,EAAY5iD,EAAQ,mCCRpB,IAcAgoD,EAAA,SAAAC,GAGA,IAAAC,EAAA,8BACAC,EAAA,EAEAC,EAAA,CACAC,OAAAJ,EAAAD,OAAAC,EAAAD,MAAAK,OACAC,4BAAAL,EAAAD,OAAAC,EAAAD,MAAAM,4BACA5M,KAAA,CACA6M,OAAA,SAAAC,GACA,OAAAA,aAAAC,EACA,IAAAA,EAAAD,EAAA/7C,KAAA27C,EAAA1M,KAAA6M,OAAAC,EAAA5B,SAAA4B,EAAAE,OACI/+C,MAAAkG,QAAA24C,GACJA,EAAArmC,IAAAimC,EAAA1M,KAAA6M,QAEAC,EAAA5jB,QAAA,cAAsCA,QAAA,aAAsBA,QAAA,gBAI5Dn4B,KAAA,SAAAk+B,GACA,OAAAnlC,OAAAqN,UAAA0N,SAAAtb,KAAA0lC,GAAA1nC,MAAA,OAGA0lD,MAAA,SAAAzgD,GAIA,OAHAA,EAAA,MACA1C,OAAAwrB,eAAA9oB,EAAA,QAAwCnF,QAAAolD,IAExCjgD,EAAA,MAIA7H,MAAA,SAAAuoD,EAAAje,EAAAke,GACA,IAAAxoD,EAAAynC,EAAAr7B,EAAA27C,EAAA1M,KAAAjvC,KAAAk+B,GAGA,OAFAke,KAAA,GAEAp8C,GACA,aAEA,GADAq7B,EAAAsgB,EAAA1M,KAAAiN,MAAAhe,GACAke,EAAA/gB,GACA,OAAA+gB,EAAA/gB,GAKA,QAAAp6B,KAHArN,EAAA,GACAwoD,EAAA/gB,GAAAznC,EAEAsqC,EACAA,EAAAr8B,eAAAZ,KACArN,EAAAqN,GAAAk7C,EAAAje,EAAAj9B,GAAAm7C,IAIA,OAAAxoD,EAEA,YAEA,OADAynC,EAAAsgB,EAAA1M,KAAAiN,MAAAhe,GACAke,EAAA/gB,GACA+gB,EAAA/gB,IAEAznC,EAAA,GACAwoD,EAAA/gB,GAAAznC,EAEAsqC,EAAAjzB,QAAA,SAAAoxC,EAAAlmD,GACAvC,EAAAuC,GAAAgmD,EAAAE,EAAAD,KAGAxoD,GAEA,QACA,OAAAsqC,KAKAoe,UAAA,CACA7nD,OAAA,SAAA4mC,EAAAkhB,GACA,IAAAd,EAAAE,EAAA1M,KAAAr7C,MAAA+nD,EAAAW,UAAAjhB,IAEA,QAAAp6B,KAAAs7C,EACAd,EAAAx6C,GAAAs7C,EAAAt7C,GAGA,OAAAw6C,GAYAe,aAAA,SAAAC,EAAAC,EAAAja,EAAAka,GAEA,IAAAC,GADAD,KAAAhB,EAAAW,WACAG,GACA/e,EAAA,GAEA,QAAAmf,KAAAD,EACA,GAAAA,EAAA/6C,eAAAg7C,GAAA,CAEA,GAAAA,GAAAH,EACA,QAAAI,KAAAra,EACAA,EAAA5gC,eAAAi7C,KACApf,EAAAof,GAAAra,EAAAqa,IAMAra,EAAA5gC,eAAAg7C,KACAnf,EAAAmf,GAAAD,EAAAC,IAKA,IAAAE,EAAAJ,EAAAF,GAUA,OATAE,EAAAF,GAAA/e,EAGAie,EAAAW,UAAAU,IAAArB,EAAAW,UAAA,SAAAr7C,EAAA3K,GACAA,IAAAymD,GAAA97C,GAAAw7C,IACAt3C,KAAAlE,GAAAy8B,KAIAA,GAIAsf,IAAA,SAAAA,EAAA9e,EAAA7lC,EAAA2H,EAAAo8C,GACAA,KAAA,GAEA,IAAAF,EAAAP,EAAA1M,KAAAiN,MAEA,QAAA/lD,KAAA+nC,EACA,GAAAA,EAAAr8B,eAAA1L,GAAA,CACAkC,EAAAG,KAAA0lC,EAAA/nC,EAAA+nC,EAAA/nC,GAAA6J,GAAA7J,GAEA,IAAA4L,EAAAm8B,EAAA/nC,GACA8mD,EAAAtB,EAAA1M,KAAAjvC,KAAA+B,GAEA,WAAAk7C,GAAAb,EAAAF,EAAAn6C,IAIA,UAAAk7C,GAAAb,EAAAF,EAAAn6C,MACAq6C,EAAAF,EAAAn6C,KAAA,EACAi7C,EAAAj7C,EAAA1J,EAAAlC,EAAAimD,KALAA,EAAAF,EAAAn6C,KAAA,EACAi7C,EAAAj7C,EAAA1J,EAAA,KAAA+jD,OAUAc,QAAA,GAEAC,aAAA,SAAAC,EAAA/kD,GACAsjD,EAAA0B,kBAAA7wC,SAAA4wC,EAAA/kD,IAGAglD,kBAAA,SAAAC,EAAAF,EAAA/kD,GACA,IAAAklD,EAAA,CACAllD,WACAmlD,SAAA,oGAGA7B,EAAA8B,MAAAC,IAAA,sBAAAH,GAIA,IAFA,IAEAI,EAFAC,EAAAL,EAAAK,UAAAN,EAAAO,iBAAAN,EAAAC,UAEArnD,EAAA,EAAwBwnD,EAAAC,EAAAznD,MACxBwlD,EAAAmC,iBAAAH,GAAA,IAAAP,EAAAG,EAAAllD,WAIAylD,iBAAA,SAAAH,EAAAP,EAAA/kD,GAIA,IAFA,IAAA0lD,EAAAnB,EAAA5vC,EAAA2wC,EAEA3wC,IAAAyuC,EAAAuC,KAAAhxC,EAAAixC,YACAjxC,IAAAC,WAGAD,IACA+wC,GAAA/wC,EAAAixC,UAAA73B,MAAAq1B,IAAA,UAAAyC,cACAtB,EAAAjB,EAAAW,UAAAyB,IAIAJ,EAAAM,UAAAN,EAAAM,UAAA9lB,QAAAsjB,EAAA,IAAAtjB,QAAA,yBAAA4lB,EAEAJ,EAAA1wC,aAEAD,EAAA2wC,EAAA1wC,WAEA,OAAA+wC,KAAAhxC,EAAAmxC,YACAnxC,EAAAixC,UAAAjxC,EAAAixC,UAAA9lB,QAAAsjB,EAAA,IAAAtjB,QAAA,yBAAA4lB,IAIA,IAEAR,EAAA,CACAI,UACAI,WACAnB,UACAv3C,KANAs4C,EAAA/3B,aASAw4B,EAAA,SAAAC,GACAd,EAAAc,kBAEA1C,EAAA8B,MAAAC,IAAA,gBAAAH,GAEAA,EAAAI,QAAAW,UAAAf,EAAAc,gBAEA1C,EAAA8B,MAAAC,IAAA,kBAAAH,GACA5B,EAAA8B,MAAAC,IAAA,WAAAH,GACAllD,KAAAG,KAAA+kD,EAAAI,UAKA,GAFAhC,EAAA8B,MAAAC,IAAA,sBAAAH,GAEAA,EAAAl4C,KAOA,GAFAs2C,EAAA8B,MAAAC,IAAA,mBAAAH,GAEAA,EAAAX,QAKA,GAAAQ,GAAA5B,EAAA+C,OAAA,CACA,IAAAC,EAAA,IAAAD,OAAA5C,EAAA8C,UAEAD,EAAAE,UAAA,SAAA59C,GACAs9C,EAAAt9C,EAAAoC,OAGAs7C,EAAAG,YAAApjB,KAAAqjB,UAAA,CACAb,SAAAR,EAAAQ,SACA14C,KAAAk4C,EAAAl4C,KACAw5C,gBAAA,UAIAT,EAAAzC,EAAAmD,UAAAvB,EAAAl4C,KAAAk4C,EAAAX,QAAAW,EAAAQ,gBAlBAK,EAAAzC,EAAA1M,KAAA6M,OAAAyB,EAAAl4C,YAPAs2C,EAAA8B,MAAAC,IAAA,WAAAH,IA6BAuB,UAAA,SAAAv5B,EAAAq3B,EAAAmB,GACA,IAAAR,EAAA,CACAl4C,KAAAkgB,EACAq3B,UACAmB,YAKA,OAHApC,EAAA8B,MAAAC,IAAA,kBAAAH,GACAA,EAAAxB,OAAAJ,EAAAoD,SAAAxB,EAAAl4C,KAAAk4C,EAAAX,SACAjB,EAAA8B,MAAAC,IAAA,iBAAAH,GACAvB,EAAA4C,UAAAjD,EAAA1M,KAAA6M,OAAAyB,EAAAxB,QAAAwB,EAAAQ,WAGAiB,aAAA,SAAAz5B,EAAA05B,EAAArC,EAAAj5C,EAAAu7C,EAAAC,EAAAp/C,GACA,QAAA88C,KAAAD,EACA,GAAAA,EAAA/6C,eAAAg7C,IAAAD,EAAAC,GAAA,CAIA,GAAAA,GAAA98C,EACA,OAGA,IAAAq/C,EAAAxC,EAAAC,GACAuC,EAAA,UAAAzD,EAAA1M,KAAAjvC,KAAAo/C,KAAA,CAAAA,GAEA,QAAAriD,EAAA,EAAkBA,EAAAqiD,EAAA/oD,SAAqB0G,EAAA,CACvC,IAAAsiD,EAAAD,EAAAriD,GACA0/C,EAAA4C,EAAA5C,OACA6C,IAAAD,EAAAC,WACAC,IAAAF,EAAAE,OACAC,EAAA,EACAvD,EAAAoD,EAAApD,MAEA,GAAAsD,IAAAF,UAAAx5C,OAAA,CAEA,IAAA45C,EAAAJ,UAAAvrC,WAAAsS,MAAA,eACAi5B,UAAAK,OAAAL,UAAAz9C,OAAA69C,EAAA,KAGAJ,eAGA,QAAAlpD,EAAAwN,EAAAg8C,EAAAT,EAAuC/oD,EAAA8oD,EAAA5oD,OAAmBspD,GAAAV,EAAA9oD,GAAAE,SAAAF,EAAA,CAE1D,IAAAypD,EAAAX,EAAA9oD,GAEA,GAAA8oD,EAAA5oD,OAAAkvB,EAAAlvB,OAEA,OAGA,KAAAupD,aAAA5D,GAAA,CAIA,GAAAuD,GAAAppD,GAAA8oD,EAAA5oD,OAAA,GAGA,GAFAgpD,EAAAQ,UAAAF,IACAv5B,EAAAi5B,EAAAhM,KAAA9tB,IAEA,MAQA,IALA,IAAAu6B,EAAA15B,EAAAziB,OAAA27C,EAAAl5B,EAAA,GAAA/vB,OAAA,GACA0pD,EAAA35B,EAAAziB,MAAAyiB,EAAA,GAAA/vB,OACA4G,EAAA9G,EACAirC,EAAAue,EAEAnnB,EAAAymB,EAAA5oD,OAAmC4G,EAAAu7B,IAAA4I,EAAA2e,IAAAd,EAAAhiD,GAAA+C,OAAAi/C,EAAAhiD,EAAA,GAAAsiD,UAAmEtiD,EAGtG6iD,IAFA1e,GAAA6d,EAAAhiD,GAAA5G,YAGAF,EACAwpD,EAAAve,GAKA,GAAA6d,EAAA9oD,aAAA6lD,EACA,SAIAgE,EAAA/iD,EAAA9G,EACAypD,EAAAr6B,EAAA/uB,MAAAmpD,EAAAve,GACAhb,EAAAziB,OAAAg8C,MACM,CACNN,EAAAQ,UAAA,EAEA,IAAAz5B,EAAAi5B,EAAAhM,KAAAuM,GACAI,EAAA,EAGA,GAAA55B,EAAA,CAQAk5B,IACAE,EAAAp5B,EAAA,GAAAA,EAAA,GAAA/vB,OAAA,GAKA0pD,GAFAD,EAAA15B,EAAAziB,MAAA67C,IACAp5B,IAAA,GAAA5vB,MAAAgpD,IACAnpD,OAFA,IAGAqmD,EAAAkD,EAAAppD,MAAA,EAAAspD,GACAG,EAAAL,EAAAppD,MAAAupD,GAEAG,EAAA,CAAA/pD,EAAA6pD,GAEAtD,MACAvmD,EACAwpD,GAAAjD,EAAArmD,OACA6pD,EAAAl/C,KAAA07C,IAGA,IAAAyD,EAAA,IAAAnE,EAAAa,EAAAJ,EAAAd,EAAAoD,SAAA34B,EAAAq2B,GAAAr2B,EAAA61B,EAAA71B,EAAAm5B,GAaA,GAXAW,EAAAl/C,KAAAm/C,GAEAF,GACAC,EAAAl/C,KAAAi/C,GAGA/iD,MAAAkJ,UAAAjF,OAAAjG,MAAA+jD,EAAAiB,GAEA,GAAAF,GACArE,EAAAqD,aAAAz5B,EAAA05B,EAAArC,EAAAzmD,EAAAwpD,GAAA,EAAA9C,GAEAsC,EACA,WAvCA,GAAAA,EACA,WA4CAJ,SAAA,SAAAx5B,EAAAq3B,GACA,IAAAqC,EAAA,CAAA15B,GAEA66B,EAAAxD,EAAAwD,KAEA,GAAAA,EAAA,CACA,QAAAvD,KAAAuD,EACAxD,EAAAC,GAAAuD,EAAAvD,UAGAD,EAAAwD,KAKA,OAFAzE,EAAAqD,aAAAz5B,EAAA05B,EAAArC,EAAA,QAEAqC,GAGAxB,MAAA,CACAzb,IAAA,GAEA33B,IAAA,SAAA8b,EAAA9tB,GACA,IAAAolD,EAAA9B,EAAA8B,MAAAzb,IAEAyb,EAAAt3B,GAAAs3B,EAAAt3B,IAAA,GAEAs3B,EAAAt3B,GAAAnlB,KAAA3I,IAGAqlD,IAAA,SAAAv3B,EAAAo3B,GACA,IAAA8C,EAAA1E,EAAA8B,MAAAzb,IAAA7b,GAEA,GAAAk6B,KAAAhqD,OAIA,QAAAgC,EAAAlC,EAAA,EAA0BkC,EAAAgoD,EAAAlqD,MAC1BkC,EAAAklD,KAKAvB,SAKA,SAAAA,EAAAh8C,EAAAm6C,EAAA8B,EAAAqE,EAAAf,GACAp6C,KAAAnF,OACAmF,KAAAg1C,UACAh1C,KAAA82C,QAEA92C,KAAA9O,OAAA,GAAAiqD,GAAA,IAAAjqD,OACA8O,KAAAo6C,WAuCA,GA/CA/D,EAAAD,MAAAI,EAWAK,EAAA4C,UAAA,SAAA1gB,EAAA6f,EAAA/wC,GACA,oBAAAkxB,EACA,OAAAA,EAGA,GAAAhhC,MAAAkG,QAAA86B,GACA,OAAAA,EAAAxoB,IAAA,SAAAioC,GACA,OAAA3B,EAAA4C,UAAAjB,EAAAI,EAAA7f,KACG7H,KAAA,IAGH,IAAAknB,EAAA,CACAv9C,KAAAk+B,EAAAl+B,KACAm6C,QAAA6B,EAAA4C,UAAA1gB,EAAAic,QAAA4D,EAAA/wC,GACAuzC,IAAA,OACAC,QAAA,SAAAtiB,EAAAl+B,MACAygD,WAAA,GACA1C,WACA/wC,UAGA,GAAAkxB,EAAA+d,MAAA,CACA,IAAAyE,EAAAxjD,MAAAkG,QAAA86B,EAAA+d,OAAA/d,EAAA+d,MAAA,CAAA/d,EAAA+d,OACA/+C,MAAAkJ,UAAApF,KAAA9F,MAAAqiD,EAAAiD,QAAAE,GAGA/E,EAAA8B,MAAAC,IAAA,OAAAH,GAEA,IAAAkD,EAAA1nD,OAAA0H,KAAA88C,EAAAkD,YAAA/qC,IAAA,SAAAyQ,GACA,OAAAA,EAAA,MAAAo3B,EAAAkD,WAAAt6B,IAAA,IAAAgS,QAAA,eAAyE,MACvE9B,KAAA,KAEF,UAAAknB,EAAAgD,IAAA,WAAAhD,EAAAiD,QAAAnqB,KAAA,UAAAoqB,EAAA,IAAAA,EAAA,QAAAlD,EAAApD,QAAA,KAAAoD,EAAAgD,IAAA,MAIA/E,EAAAhvC,SACA,OAAAgvC,EAAA36C,kBAKA86C,EAAAE,6BAEAL,EAAA36C,iBAAA,mBAAAC,GACA,IAAA+wB,EAAA0J,KAAAolB,MAAA7/C,EAAAoC,MACAu4C,EAAA5pB,EAAAksB,SACA14C,EAAAwsB,EAAAxsB,KACAw5C,EAAAhtB,EAAAgtB,eAEArD,EAAAmD,YAAAhD,EAAAmD,UAAAz5C,EAAAs2C,EAAAW,UAAAb,OACAoD,GACArD,EAAAoF,UAEG,GAGHjF,GAlBAA,EAsBA,IAAAkF,EAAAr0C,SAAAs0C,eAAA,GAAAtqD,MAAAgC,KAAAgU,SAAA6sC,qBAAA,WAAAvgC,MAmBA,OAjBA+nC,IACAlF,EAAA8C,SAAAoC,EAAAntB,IAEAioB,EAAAC,QAAAiF,EAAAE,aAAA,iBACA,YAAAv0C,SAAAw0C,WACA7J,OAAA8J,sBACA9J,OAAA8J,sBAAAtF,EAAAwB,cAEAhG,OAAA/J,WAAAuO,EAAAwB,aAAA,IAIA3wC,SAAA3L,iBAAA,mBAAA86C,EAAAwB,gBAKAxB,EA/gBA,CAdA,oBAAAxE,OACAA,OAEA,oBAAA+J,mBAAAC,gBAAAD,kBACAC,KACA,IA4hBiC/gB,EAAA5b,UACjC4b,EAAA5b,QAAA+2B,QAIA,IAAA11C,IACAA,EAAA01C,SAQAA,EAAAe,UAAA8E,OAAA,CACAC,QAAA,kBACAC,OAAA,iBACAC,QAAA,sBACAC,MAAA,0BACAjB,IAAA,CACAlB,QAAA,yHACAE,QAAA,EACA9C,OAAA,CACA8D,IAAA,CACAlB,QAAA,kBACA5C,OAAA,CACAgF,YAAA,QACAC,UAAA,iBAGAC,aAAA,CACAtC,QAAA,sCACA5C,OAAA,CACAgF,YAAA,CACA,KACA,CACApC,QAAA,mBACAC,YAAA,MAKAmC,YAAA,OACAG,YAAA,CACAvC,QAAA,YACA5C,OAAA,CACAiF,UAAA,mBAMAG,OAAA,qBAGAtG,EAAAe,UAAA8E,OAAA,IAAA3E,OAAA,cAAAA,OAAA,OACAlB,EAAAe,UAAA8E,OAAA,OAGA7F,EAAAkC,MAAApzC,IAAA,gBAAAkzC,GAEA,WAAAA,EAAAv9C,OACAu9C,EAAAkD,WAAA,MAAAlD,EAAApD,QAAAhiB,QAAA,QAAsD,QAItDp/B,OAAAwrB,eAAAg3B,EAAAe,UAAA8E,OAAAb,IAAA,cAYAjqD,MAAA,SAAAwrD,EAAArG,GACA,IAAAsG,EAAA,GACAA,EAAA,YAAAtG,GAAA,CACA4D,QAAA,oCACAC,YAAA,EACA7C,OAAAlB,EAAAe,UAAAb,IAEAsG,EAAA,6BAEA,IAAAtF,EAAA,CACAuF,iBAAA,CACA3C,QAAA,4BACA5C,OAAAsF,IAGAtF,EAAA,YAAAhB,GAAA,CACA4D,QAAA,UACA5C,OAAAlB,EAAAe,UAAAb,IAGA,IAAAwG,EAAA,GACAA,EAAAH,GAAA,CACAzC,QAAAK,OAAA,mEAAA99C,OAAAu2B,QAAA,MAAA2pB,GAAA,KACAxC,YAAA,EACAC,QAAA,EACA9C,UAGAlB,EAAAe,UAAAE,aAAA,iBAAAyF,MAIA1G,EAAAe,UAAA92B,IAAA+1B,EAAAe,UAAA7nD,OAAA,aACA8mD,EAAAe,UAAA4F,KAAA3G,EAAAe,UAAA8E,OACA7F,EAAAe,UAAA6F,OAAA5G,EAAAe,UAAA8E,OACA7F,EAAAe,UAAA8F,IAAA7G,EAAAe,UAAA8E,OAOA,SAAA7F,GAEA,IAAA8G,EAAA,gDAEA9G,EAAAe,UAAAgG,IAAA,CACAjB,QAAA,mBACAkB,OAAA,CACAlD,QAAA,mCACA5C,OAAA,CACA+F,KAAA,YAIA99B,IAAAg7B,OAAA,YAAA2C,EAAAzgD,OAAA,gBACA47C,SAAAkC,OAAA,wBAAsC2C,EAAAzgD,OAAA,kBACtCygD,OAAA,CACAhD,QAAAgD,EACA9C,QAAA,GAEAx9C,SAAA,+CACA0gD,UAAA,gBACAC,SAAA,oBACAjB,YAAA,aAGAlG,EAAAe,UAAAgG,IAAA,OAAA7F,OAAA2D,KAAA7E,EAAAe,UAAAgG,IAEA,IAAAlB,EAAA7F,EAAAe,UAAA8E,OACAA,IACAA,EAAAb,IAAAoC,WAAA,eAEApH,EAAAe,UAAAE,aAAA,uBACAoG,aAAA,CACAvD,QAAA,6CACA5C,OAAA,CACAmF,YAAA,CACAvC,QAAA,aACA5C,OAAA2E,EAAAb,IAAA9D,QAEAgF,YAAA,wBACAE,aAAA,CACAtC,QAAA,MACA5C,OAAAlB,EAAAe,UAAAgG,MAGArG,MAAA,iBAEGmF,EAAAb,MA/CH,CAkDChF,GAODA,EAAAe,UAAAuG,MAAA,CACAxB,QAAA,CACA,CACAhC,QAAA,kCACAC,YAAA,GAEA,CACAD,QAAA,mBACAC,YAAA,EACAC,QAAA,IAGA8C,OAAA,CACAhD,QAAA,iDACAE,QAAA,GAEAuD,aAAA,CACAzD,QAAA,iGACAC,YAAA,EACA7C,OAAA,CACAgF,YAAA,UAGAsB,QAAA,6GACAC,QAAA,qBACAN,SAAA,YACA1sB,OAAA,wDACAitB,SAAA,0DACAxB,YAAA,iBAQAlG,EAAAe,UAAA4G,WAAA3H,EAAAe,UAAA7nD,OAAA,SACAquD,aAAA,CACAvH,EAAAe,UAAAuG,MAAA,cACA,CACAxD,QAAA,0FACAC,YAAA,IAGAyD,QAAA,CACA,CACA1D,QAAA,kCACAC,YAAA,GAEA,CACAD,QAAA,6WACAC,YAAA,IAGAtpB,OAAA,mHAEA0sB,SAAA,kFACAO,SAAA,mGAGA1H,EAAAe,UAAA4G,WAAA,iBAAA7D,QAAA,uEAEA9D,EAAAe,UAAAE,aAAA,wBACA2G,MAAA,CACA9D,QAAA,2HACAC,YAAA,EACAC,QAAA,GAGA6D,oBAAA,CACA/D,QAAA,8JACApD,MAAA,YAEAoH,UAAA,CACA,CACAhE,QAAA,wGACAC,YAAA,EACA7C,OAAAlB,EAAAe,UAAA4G,YAEA,CACA7D,QAAA,gDACA5C,OAAAlB,EAAAe,UAAA4G,YAEA,CACA7D,QAAA,oDACAC,YAAA,EACA7C,OAAAlB,EAAAe,UAAA4G,YAEA,CACA7D,QAAA,qcACAC,YAAA,EACA7C,OAAAlB,EAAAe,UAAA4G,aAGAI,SAAA,8BAGA/H,EAAAe,UAAAE,aAAA,uBACA+G,kBAAA,CACAlE,QAAA,mCACAE,QAAA,EACA9C,OAAA,CACA+G,cAAA,CACAnE,QAAA,YACA5C,OAAA,CACAgH,4BAAA,CACApE,QAAA,UACApD,MAAA,eAEAmE,KAAA7E,EAAAe,UAAA4G,aAGAb,OAAA,cAKA9G,EAAAe,UAAA8E,QACA7F,EAAAe,UAAA8E,OAAAb,IAAAoC,WAAA,uBAGApH,EAAAe,UAAAoH,GAAAnI,EAAAe,UAAA4G,WAQA,oBAAA/B,WAAA5F,OAAA4F,KAAA30C,mBAAAmZ,gBAOAw7B,KAAA5F,MAAAoI,cAAA,SAAArG,GACAA,KAAA9wC,SAEA,IAAAo3C,EAAA,CACAF,GAAA,aACAG,GAAA,SACAC,GAAA,OACAC,IAAA,aACAC,KAAA,aACAC,GAAA,OACAC,IAAA,QACAnW,EAAA,IACAoW,IAAA,SAGAjnD,MAAAkJ,UAAA5P,MAAAgC,KAAA8kD,EAAAO,iBAAA,kBAAA5yC,QAAA,SAAAm5C,GAEA,IAAAA,EAAArD,aAAA,oBASA,IAJA,IAEAhD,EAFArqB,EAAA0wB,EAAA9N,aAAA,YAEAtpC,EAAAo3C,EACA3I,EAAA,8BACAzuC,IAAAyuC,EAAAuC,KAAAhxC,EAAAixC,YACAjxC,IAAAC,WAOA,GAJAD,IACA+wC,GAAAqG,EAAAnG,UAAA73B,MAAAq1B,IAAA,YAGAsC,EAAA,CACA,IAAA56C,GAAAuwB,EAAAtN,MAAA,uBACA23B,EAAA6F,EAAAzgD,MAGA,IAAAkC,EAAAmH,SAAAC,cAAA,QACApH,EAAA44C,UAAA,YAAAF,EAEAqG,EAAAx+B,YAAA,GAEAvgB,EAAAugB,YAAA,WAEAw+B,EAAAC,YAAAh/C,GAEA,IAAAi/C,EAAA,IAAAC,eAEAD,EAAAlN,KAAA,MAAA1jB,GAAA,GAEA4wB,EAAAE,mBAAA,WACA,GAAAF,EAAAtD,aAEAsD,EAAAG,OAAA,KAAAH,EAAAI,cACAr/C,EAAAugB,YAAA0+B,EAAAI,aAEAnJ,EAAAuC,iBAAAz4C,GAEA++C,EAAAO,aAAA,uBAEAL,EAAAG,QAAA,IACAp/C,EAAAugB,YAAA,WAAA0+B,EAAAG,OAAA,yBAAAH,EAAAM,WAGAv/C,EAAAugB,YAAA,6CAKA0+B,EAAAO,KAAA,SAGAtJ,EAAA2B,QAAA4H,SACAvJ,EAAA2B,QAAA4H,QAAAC,eAAA,yBAAAxH,GACA,IAAA6G,EAAA7G,EAAAI,QAAA1wC,WACA,GAAAm3C,GAAA,OAAApG,KAAAoG,EAAAjG,WAAAiG,EAAArD,aAAA,aAAAqD,EAAArD,aAAA,uBAGA,IAAArtB,EAAA0wB,EAAA9N,aAAA,YACA94C,EAAAgP,SAAAC,cAAA,KAIA,OAHAjP,EAAAooB,YAAAw+B,EAAA9N,aAAA,wCACA94C,EAAAmnD,aAAA,eACAnnD,EAAAwnD,KAAAtxB,EACAl2B,MAMAgP,SAAA3L,iBAAA,8BAEAsgD,KAAA5F,MAAAoI,uDC37B6DvjB,EAAA5b,QAG5D,WAAqB,aA8CtB,SAAAygC,EAAApiD,EAAA1M,EAAA4G,GACA,IAAAD,EAAA+F,EAAA1M,GACA0M,EAAA1M,GAAA0M,EAAA9F,GACA8F,EAAA9F,GAAAD,EAGA,SAAAooD,EAAA1nD,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,IAGA,OAtDA,SAAAoF,EAAA5F,EAAA6kC,EAAAC,EAAA/9B,IAIA,SAAAmhD,EAAAtiD,EAAA5F,EAAA6kC,EAAAC,EAAA/9B,GAEA,KAAA+9B,EAAAD,GAAA,CACA,GAAAC,EAAAD,EAAA,KACA,IAAAtlC,EAAAulC,EAAAD,EAAA,EACA1kC,EAAAH,EAAA6kC,EAAA,EACA3sB,EAAAjd,KAAA2Q,IAAArM,GACA4oD,EAAA,GAAAltD,KAAAmE,IAAA,EAAA8Y,EAAA,GACAkwC,EAAA,GAAAntD,KAAAyjB,KAAAxG,EAAAiwC,GAAA5oD,EAAA4oD,GAAA5oD,IAAAY,EAAAZ,EAAA,UACA8oD,EAAAptD,KAAAE,IAAA0pC,EAAA5pC,KAAAqxB,MAAAtsB,EAAAG,EAAAgoD,EAAA5oD,EAAA6oD,IACAE,EAAArtD,KAAAC,IAAA4pC,EAAA7pC,KAAAqxB,MAAAtsB,GAAAT,EAAAY,GAAAgoD,EAAA5oD,EAAA6oD,IACAF,EAAAtiD,EAAA5F,EAAAqoD,EAAAC,EAAAvhD,GAGA,IAAA1H,EAAAuG,EAAA5F,GACA9G,EAAA2rC,EACA/kC,EAAAglC,EAKA,IAHAkjB,EAAApiD,EAAAi/B,EAAA7kC,GACA+G,EAAAnB,EAAAk/B,GAAAzlC,GAAA,GAAA2oD,EAAApiD,EAAAi/B,EAAAC,GAEA5rC,EAAA4G,GAAA,CAIA,IAHAkoD,EAAApiD,EAAA1M,EAAA4G,GACA5G,IACA4G,IACAiH,EAAAnB,EAAA1M,GAAAmG,GAAA,GAAAnG,IACA,KAAA6N,EAAAnB,EAAA9F,GAAAT,GAAA,GAAAS,IAGA,IAAAiH,EAAAnB,EAAAi/B,GAAAxlC,GAAA2oD,EAAApiD,EAAAi/B,EAAA/kC,GAGAkoD,EAAApiD,IADA9F,EACAglC,GAGAhlC,GAAAE,IAAA6kC,EAAA/kC,EAAA,GACAE,GAAAF,IAAAglC,EAAAhlC,EAAA,IAvCAooD,CAAAtiD,EAAA5F,EAAA6kC,GAAA,EAAAC,GAAAl/B,EAAAxM,OAAA,EAAA2N,GAAAkhD,IAN6DM,iCCD7D,IAAAC,EAAAlyD,EAAA,KAAAmyD,EAAAnyD,EAAA,KAAAoyD,EAAApyD,EAAA,GAAAqyD,EAAAryD,EAAAiJ,EAAAmpD,GAAAE,EAAAtyD,EAAA,GAAAuyD,EAAAvyD,EAAAiJ,EAAAqpD,GAAAE,EAAAxyD,EAAA,KAAAyyD,EAAAzyD,EAAAiJ,EAAAupD,GAAAE,EAAA1yD,EAAA,KAMA2yD,EAAA,CACA3F,IAAO0F,EAAA,EACPE,MAASL,EAAAtoD,EAAS4oD,KAClBnI,UAAa6H,EAAAtoD,EAAS6kD,OACtBgE,UAAaP,EAAAtoD,EAASsE,QAMtBwkD,EAAA,SAAA3L,GACA,IAAAsD,EAAAtD,EAAAsD,UACAoI,EAAA1L,EAAA0L,UACAF,EAAAxL,EAAAwL,MACAI,EAAA5L,EAAA4F,IACAE,EAAmB1nD,OAAA2sD,EAAA,EAAA3sD,CAA6B4hD,EAAA,yCAEhD6F,EAAgBznD,OAAAktD,EAAA,EAAAltD,CAAgBitD,IAAU/H,EAAAkI,EAAA,+BAAAE,GAC1C,OAAST,EAAApoD,EAAKiP,cAAA85C,EAAoBxtD,OAAA0sD,EAAA,EAAA1sD,CAAQ,GAAG0nD,EAAA,CAC7CxC,UAAAuC,MAIA8F,EAAAJ,YACAI,EAAAE,aAlBA,CACAjG,IAAA,OAkBe9sD,EAAA,kCC/Bf,IAAAgyD,EAAAlyD,EAAA,KAAAmyD,EAAAnyD,EAAA,KAAAoyD,EAAApyD,EAAA,GAAAqyD,EAAAryD,EAAAiJ,EAAAmpD,GAAAE,EAAAtyD,EAAA,GAAAuyD,EAAAvyD,EAAAiJ,EAAAqpD,GAAAE,EAAAxyD,EAAA,KAAAyyD,EAAAzyD,EAAAiJ,EAAAupD,GAAAE,EAAA1yD,EAAA,KAMA2yD,EAAA,CACA3F,IAAO0F,EAAA,EACPQ,UAAaX,EAAAtoD,EAAS4oD,KACtBnI,UAAa6H,EAAAtoD,EAAS6kD,OACtBgE,UAAaP,EAAAtoD,EAASsE,OACtB4kD,KAAQZ,EAAAtoD,EAAS4oD,MAMjBO,EAAA,SAAAhM,GACA,IAAAsD,EAAAtD,EAAAsD,UACAoI,EAAA1L,EAAA0L,UACAI,EAAA9L,EAAA8L,UACAF,EAAA5L,EAAA4F,IACAmG,EAAA/L,EAAA+L,KACAjG,EAAmB1nD,OAAA2sD,EAAA,EAAA3sD,CAA6B4hD,EAAA,oDAEhD6F,EAAgBznD,OAAAktD,EAAA,EAAAltD,CAAgBitD,IAAU/H,EAAAwI,EAAA,kBAAAC,EAAA,kBAAAL,GAC1C,OAAST,EAAApoD,EAAKiP,cAAA85C,EAAoBxtD,OAAA0sD,EAAA,EAAA1sD,CAAQ,GAAG0nD,EAAA,CAC7CxC,UAAAuC,MAIAmG,EAAAT,YACAS,EAAAH,aAnBA,CACAjG,IAAA,OAmBe9sD,EAAA,iFCMR,SAAA01B,EAAAnwB,GACP,OAAAA,8CCjCe4tD,EACf,SADeA,EAEf,aAFeA,EAGf,4FCgKAC,EAAA,EAyDIC,EAAI,SAAAx2C,GACR,SAAAy2C,EAAAxlC,GACAjR,EAAA9X,KAAA2M,MAEA,IAAAD,EAAkBnM,OAAA0C,EAAA,EAAA1C,CAAM,GAAGwoB,GAM3Bpc,KAAA6hD,OAAA,MAMA7hD,KAAA8hD,YAAA,GAMA9hD,KAAA+hD,oBAEA/hD,KAAAgiD,kBAAAhiD,KAAAgiD,kBAAArd,KAAA3kC,MAOAA,KAAAmpC,YAAuBv1C,OAAA21B,EAAA,EAAA31B,CAAgBmM,EAAAkF,WAAA,aAEvCjF,KAAAiiD,cAAAliD,GA25BA,OAx5BAoL,IAAAy2C,EAAA5+C,UAAAmI,GACAy2C,EAAA3gD,UAAArN,OAAAqP,OAAAkI,KAAAlK,WACA2gD,EAAA3gD,UAAAiC,YAAA0+C,EAMAA,EAAA3gD,UAAAghD,cAAA,SAAAliD,GAKA,IAAAghB,EAAA,GACAA,EAAe0gC,QAAYzmD,IAAA+E,EAAAlM,OAC3BkM,EAAAlM,OAAA,KAEA,IAAAquD,EAw6BO,SAAAniD,GACP,IAAAoiD,EACAxmC,EACAD,EAOA0J,OAAApqB,IAAA+E,EAAAqlB,QACArlB,EAAAqlB,QAAAs8B,EAEAh8B,OAAA1qB,IAAA+E,EAAA2lB,QACA3lB,EAAA2lB,QAPA,GASAP,OAAAnqB,IAAA+E,EAAAolB,WACAplB,EAAAolB,WATA,EAWA,QAAAnqB,IAAA+E,EAAAulB,YAAA,CACA,IAAAA,EAAAvlB,EAAAulB,YACA3J,EAAA2J,EAAAF,GACA1J,OAAA1gB,IAAAsqB,EAAAI,GACAJ,EAAAI,GAAAJ,IAAAp0B,OAAA,GACAixD,ECxsCO,SAAA78B,GACP,gBAOAxxB,EAAA2qB,EAAA7gB,GACA,QAAA5C,IAAAlH,EAAA,CACA,IAAAkc,EAAgBpc,OAAAskB,EAAA,EAAAtkB,CAAiB0xB,EAAAxxB,EAAA8J,GACjCoS,EAAYpc,OAAAmP,EAAA,EAAAnP,CAAKoc,EAAAyO,EAAA,EAAA6G,EAAAp0B,OAAA,GACjB,IAAAsN,EAAAzL,KAAAqxB,MAAApU,GACA,GAAAA,GAAAxR,KAAA8mB,EAAAp0B,OAAA,GACA,IAAAsrB,EAAA8I,EAAA9mB,GAAA8mB,EAAA9mB,EAAA,GACA,OAAA8mB,EAAA9mB,GAAAzL,KAAAka,IAAAuP,EAAAxM,EAAAxR,GAEA,OAAA8mB,EAAA9mB,KDurC2B4jD,CAC3B98B,OACG,CAEH,IAAArgB,EAAqBrR,OAAA21B,EAAA,EAAA31B,CAAgBmM,EAAAkF,WAAA,aACrClU,EAAAkU,EAAA7D,YACApN,EAAAjD,EAIAgC,KAAAE,IAAeW,OAAAoT,EAAA,EAAApT,CAAQ7C,GAAU6C,OAAAoT,EAAA,EAAApT,CAAS7C,IAF1C,IAAYw4B,EAAA,EAAgBhoB,EAAA,EAAK4C,SACjCc,EAAA3D,mBAGA+gD,EAAAruD,EAAsCkyB,EAAA,EAAiBnzB,KAAAka,IA5BvD,EA6BAy0C,GAEAY,EAAAD,EAAAtvD,KAAAka,IA/BA,EADA,GAiCAy0C,QAIA1mD,KADA2gB,EAAA5b,EAAA4b,eAEAyJ,EAAA,EAEAzJ,EAAA0mC,EAAAtvD,KAAAka,IAAAkY,EAAAC,QAKApqB,KADA0gB,EAAA3b,EAAA2b,iBAIAA,OAFA1gB,IAAA+E,EAAA2lB,aACA1qB,IAAA+E,EAAA4b,cACAA,EAAA5oB,KAAAka,IAAAkY,EAAAO,GAEA28B,EAAAtvD,KAAAka,IAAAkY,EAAAO,GAGA48B,GAKA58B,EAAAN,EAAAryB,KAAAqxB,MACArxB,KAAA2Q,IAAAiY,EAAAD,GAAA3oB,KAAA2Q,IAAAyhB,IACAzJ,EAAAC,EAAA5oB,KAAAka,IAAAkY,EAAAO,EAAAN,GAEA+8B,ECptCO,SAAA3lC,EAAAb,EAAA4mC,GACP,gBAOAzuD,EAAA2qB,EAAA7gB,GACA,QAAA5C,IAAAlH,EAAA,CACA,IAAAnB,GAAAiL,EAAA,KACA4kD,EAAAzvD,KAAAqxB,MACArxB,KAAA2Q,IAAAiY,EAAA7nB,GAAAf,KAAA2Q,IAAA8Y,GAAA7pB,GACA8vD,EAAA1vD,KAAAE,IAAAuvD,EAAA/jC,EAAA,GAIA,YAHAzjB,IAAAunD,IACAE,EAAA1vD,KAAAC,IAAAyvD,EAAAF,IAEA5mC,EAAA5oB,KAAAka,IAAAuP,EAAAimC,KDmsC2BC,CAC3Bv9B,EAAAxJ,EAAA+J,EAAAN,GAEA,OAAUu9B,WAAAR,EAAAxmC,gBACVD,gBAAA0J,UAAAD,cAj/BAy9B,CAAA7iD,GAMAC,KAAA6iD,eAAAX,EAAAvmC,cAMA3b,KAAA8iD,eAAAZ,EAAAxmC,cAMA1b,KAAAylB,YAAAy8B,EAAA/8B,WAMAnlB,KAAAqlB,aAAAtlB,EAAAulB,YAMAtlB,KAAA+iD,SAAAb,EAAA98B,QAEA,IAAA49B,EA03BO,SAAAjjD,GACP,YAAA/E,IAAA+E,EAAAhP,QFpqCOA,EEqqCgBgP,EAAAhP,OFpqCvB,SAKA8C,GACA,OAAAA,EACA,CACUD,OAAAmP,EAAA,EAAAnP,CAAKC,EAAA,GAAA9C,EAAA,GAAAA,EAAA,IACL6C,OAAAmP,EAAA,EAAAnP,CAAKC,EAAA,GAAA9C,EAAA,GAAAA,EAAA,UAGf,IE0pCWizB,EFvqCJ,IAAAjzB,EEySPkyD,CAAAljD,GACAoiD,EAAAD,EAAAS,WACAO,EAu9BO,SAAAnjD,GAGP,QAFA/E,IAAA+E,EAAAojD,gBACApjD,EAAAojD,eACA,CACA,IAAAC,EAAArjD,EAAAqjD,kBACA,YAAApoD,IAAAooD,IAAA,IAAAA,EACaxvD,OAAAyvD,EAAA,EAAAzvD,IACR,IAAAwvD,EACQC,EAAA,EACR,iBAAAD,EACQxvD,OAAAyvD,EAAA,EAAAzvD,CAAawvD,GAEbC,EAAA,EAGb,OAAWA,EAAA,EAt+BXC,CAAAvjD,GAMAC,KAAAujD,aAAA,CACA1vD,OAAAmvD,EACAlvD,WAAAquD,EACApuD,SAAAmvD,QAGAloD,IAAA+E,EAAAjM,WACAitB,EAAiB0gC,GAAY1hD,EAAAjM,gBACxBkH,IAAA+E,EAAA0mB,OACL1F,EAAiB0gC,GAAYzhD,KAAAwjD,oBAC7BxjD,KAAA6iD,eAAA9iD,EAAA0mB,KAAAzmB,KAAA+iD,UAEA/iD,KAAAqlB,eACAtE,EAAmB0gC,GAA2B7tD,OAAAmP,EAAA,EAAAnP,CAC9C4c,OAAAxQ,KAAA+mB,iBAAAhG,EAAoD0gC,IACpDzhD,KAAA8iD,eAAA9iD,KAAA6iD,kBAGA9hC,EAAe0gC,QAAYzmD,IAAA+E,EAAAhM,SAAAgM,EAAAhM,SAAA,EAC3BiM,KAAAuL,cAAAwV,GAMA/gB,KAAAyjD,SAAA1jD,GAYA6hD,EAAA3gD,UAAAyiD,mBAAA,SAAAC,GACA,IAAA5jD,EAAkBnM,OAAA0C,EAAA,EAAA1C,CAAM,GAAGoM,KAAAyjD,UAe3B,YAZAzoD,IAAA+E,EAAAjM,WACAiM,EAAAjM,WAAAkM,KAAA+mB,gBAEAhnB,EAAA0mB,KAAAzmB,KAAA4jD,UAIA7jD,EAAAlM,OAAAmM,KAAAnQ,YAGAkQ,EAAAhM,SAAAiM,KAAA6jD,cAEWjwD,OAAA0C,EAAA,EAAA1C,CAAM,GAAGmM,EAAA4jD,IAoCpB/B,EAAA3gD,UAAA6iD,QAAA,SAAAC,GACA,IAGA7wD,EAHAmJ,EAAAC,UAEA0nD,EAAA1nD,UAAApL,OAMA,GAJA8yD,EAAA,sBAAA1nD,UAAA0nD,EAAA,KACA9wD,EAAAoJ,UAAA0nD,EAAA,KACAA,IAEAhkD,KAAAikD,QAAA,CAEA,IAAA/vB,EAAA53B,UAAA0nD,EAAA,GAaA,OAZA9vB,EAAArgC,QACAmM,KAAAkkD,UAAAhwB,EAAArgC,aAEAmH,IAAAk5B,EAAAzN,MACAzmB,KAAAmkD,QAAAjwB,EAAAzN,WAEAzrB,IAAAk5B,EAAAngC,UACAiM,KAAAokD,YAAAlwB,EAAAngC,eAEAb,GACAmxD,EAAAnxD,GAAA,IASA,IALA,IAAAkC,EAAAkvD,KAAAC,MACA1wD,EAAAmM,KAAAnQ,YAAAwB,QACAyC,EAAAkM,KAAA+mB,gBACAhzB,EAAAiM,KAAA6jD,cACAW,EAAA,GACAxzD,EAAA,EAAmBA,EAAAgzD,IAAoBhzD,EAAA,CACvC,IAAA+O,EAAgD1D,EAAArL,GAEhDyzD,EAA2C,CAC3CrvD,QACAsvD,UAAA,EACAh1C,OAAA3P,EAAA2P,OACAi1C,cAAA3pD,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IACA1jB,OAAAlhC,EAAAkhC,QAAkCA,EAAA,GAoBlC,GAjBAlhC,EAAAlM,SACA4wD,EAAAt3B,aAAAt5B,EACA4wD,EAAAx3B,aAAAltB,EAAAlM,OACAA,EAAA4wD,EAAAx3B,mBAGAjyB,IAAA+E,EAAA0mB,MACAg+B,EAAAr3B,iBAAAt5B,EACA2wD,EAAAv3B,iBAAAltB,KAAAwjD,oBACAxjD,KAAA6iD,eAAA9iD,EAAA0mB,KAAAzmB,KAAA+iD,SAAA,GACAjvD,EAAA2wD,EAAAv3B,kBACOntB,EAAAjM,aACP2wD,EAAAr3B,iBAAAt5B,EACA2wD,EAAAv3B,iBAAAntB,EAAAjM,WACAA,EAAA2wD,EAAAv3B,uBAGAlyB,IAAA+E,EAAAhM,SAAA,CACA0wD,EAAAG,eAAA7wD,EACA,IAAA0qB,EAAoB7qB,OAAAmP,EAAA,EAAAnP,CAAMmM,EAAAhM,WAAAhB,KAAAoF,GAAA,EAAApF,KAAAoF,IAAApF,KAAAoF,GAC1BssD,EAAAI,eAAA9wD,EAAA0qB,EACA1qB,EAAA0wD,EAAAI,eAGAJ,EAAAvxD,WAGA4xD,EAAAL,GACAA,EAAAC,UAAA,EAGAtvD,GAAAqvD,EAAAE,SAEAH,EAAA3oD,KAAA4oD,GAEAzkD,KAAA8hD,YAAAjmD,KAAA2oD,GACAxkD,KAAA+kD,QAAiBC,EAAA,EAAQ94C,UAAA,GACzBlM,KAAAgiD,qBAQAJ,EAAA3gD,UAAAgkD,aAAA,WACA,OAAAjlD,KAAA6hD,OAAuBmD,EAAA,EAAQ94C,WAAA,GAQ/B01C,EAAA3gD,UAAAikD,eAAA,WACA,OAAAllD,KAAA6hD,OAAuBmD,EAAA,EAAQ74C,aAAA,GAO/By1C,EAAA3gD,UAAAkkD,iBAAA,WACAnlD,KAAA+kD,QAAiBC,EAAA,EAAQ94C,WAAAlM,KAAA6hD,OAAyBmD,EAAA,EAAQ94C,YAC1D,QAAAlb,EAAA,EAAAC,EAAA+O,KAAA8hD,YAAA5wD,OAAiDF,EAAAC,IAAQD,EAAA,CACzD,IAAAwzD,EAAAxkD,KAAA8hD,YAAA9wD,GACAwzD,EAAA,GAAAtxD,UACAmxD,EAAAG,EAAA,GAAAtxD,UAAA,GAGA8M,KAAA8hD,YAAA5wD,OAAA,GAMA0wD,EAAA3gD,UAAA+gD,kBAAA,WAKA,QAJAhnD,IAAAgF,KAAA+hD,sBACAqD,qBAAAplD,KAAA+hD,qBACA/hD,KAAA+hD,yBAAA/mD,GAEAgF,KAAAilD,eAAA,CAKA,IAFA,IAAAV,EAAAD,KAAAC,MACAc,GAAA,EACAr0D,EAAAgP,KAAA8hD,YAAA5wD,OAAA,EAA6CF,GAAA,IAAQA,EAAA,CAGrD,IAFA,IAAAwzD,EAAAxkD,KAAA8hD,YAAA9wD,GACAs0D,GAAA,EACA1tD,EAAA,EAAA0Z,EAAAkzC,EAAAtzD,OAAyC0G,EAAA0Z,IAAQ1Z,EAAA,CACjD,IAAA6sD,EAAAD,EAAA5sD,GACA,IAAA6sD,EAAAC,SAAA,CAGA,IAAAa,EAAAhB,EAAAE,EAAArvD,MACA4tB,EAAAyhC,EAAAE,SAAA,EAAAY,EAAAd,EAAAE,SAAA,EACA3hC,GAAA,GACAyhC,EAAAC,UAAA,EACA1hC,EAAA,GAEAsiC,GAAA,EAEA,IAAAE,EAAAf,EAAAxjB,OAAAje,GACA,GAAAyhC,EAAAt3B,aAAA,CACA,IAAA14B,EAAAgwD,EAAAt3B,aAAA,GACAt4B,EAAA4vD,EAAAt3B,aAAA,GAGA77B,EAAAmD,EAAA+wD,GAFAf,EAAAx3B,aAAA,GAEAx4B,GACAlD,EAAAsD,EAAA2wD,GAFAf,EAAAx3B,aAAA,GAEAp4B,GACAmL,KAAA4I,IAAmB64C,EAAY,CAAAnwD,EAAAC,IAE/B,GAAAkzD,EAAAr3B,kBAAAq3B,EAAAv3B,iBAAA,CACA,IAAAp5B,EAAA,IAAA0xD,EACAf,EAAAv3B,iBACAu3B,EAAAr3B,iBAAAo4B,GAAAf,EAAAv3B,iBAAAu3B,EAAAr3B,kBACAq3B,EAAA/0C,QACA1P,KAAA4I,IAAqB64C,EACrBzhD,KAAAylD,oBAAA3xD,EAAA2wD,EAAA/0C,SAEA1P,KAAA4I,IAAmB64C,EAAY3tD,GAE/B,QAAAkH,IAAAypD,EAAAG,qBAAA5pD,IAAAypD,EAAAI,eAAA,CACA,IAAA9wD,EAAA,IAAAyxD,EACY5xD,OAAAmP,EAAA,EAAAnP,CAAM6wD,EAAAI,eAAA9xD,KAAAoF,GAAA,EAAApF,KAAAoF,IAAApF,KAAAoF,GAClBssD,EAAAG,eAAAY,GAAAf,EAAAI,eAAAJ,EAAAG,gBACAH,EAAA/0C,QACA1P,KAAA4I,IAAqB64C,EACrBzhD,KAAA0lD,sBAAA3xD,EAAA0wD,EAAA/0C,SAEA1P,KAAA4I,IAAmB64C,EAAY1tD,GAG/B,GADAsxD,GAAA,GACAZ,EAAAC,SACA,OAGA,GAAAY,EAAA,CACAtlD,KAAA8hD,YAAA9wD,GAAA,KACAgP,KAAA+kD,QAAqBC,EAAA,EAAQ94C,WAAA,GAC7B,IAAAhZ,EAAAsxD,EAAA,GAAAtxD,SACAA,GACAmxD,EAAAnxD,GAAA,IAKA8M,KAAA8hD,YAAA9hD,KAAA8hD,YAAAl3B,OAAA+6B,SACAN,QAAArqD,IAAAgF,KAAA+hD,sBACA/hD,KAAA+hD,oBAAAjG,sBAAA97C,KAAAgiD,sBASAJ,EAAA3gD,UAAAykD,sBAAA,SAAA3xD,EAAA2b,GACA,IAAA7b,EACA+xD,EAAA5lD,KAAAnQ,YAMA,YALAmL,IAAA4qD,IACA/xD,EAAA,CAAA+xD,EAAA,GAAAl2C,EAAA,GAAAk2C,EAAA,GAAAl2C,EAAA,IACM9b,OAAAlC,EAAA,EAAAkC,CAAgBC,EAAAE,EAAAiM,KAAA6jD,eAChBjwD,OAAAlC,EAAA,EAAAkC,CAAaC,EAAA6b,IAEnB7b,GAQA+tD,EAAA3gD,UAAAwkD,oBAAA,SAAA3xD,EAAA4b,GACA,IAAA7b,EACA+xD,EAAA5lD,KAAAnQ,YACAg2D,EAAA7lD,KAAA+mB,qBACA/rB,IAAA4qD,QAAA5qD,IAAA6qD,IAGAhyD,EAAA,CAFA6b,EAAA,GAAA5b,GAAA4b,EAAA,GAAAk2C,EAAA,IAAAC,EACAn2C,EAAA,GAAA5b,GAAA4b,EAAA,GAAAk2C,EAAA,IAAAC,IAGA,OAAAhyD,GAOA+tD,EAAA3gD,UAAA6kD,qBAAA,WACA,IAAA9xD,EAAA,UACAqkD,EAAA,2BAAgDzkD,OAAAk2C,EAAA,EAAAl2C,CAAMoM,MAAA,KACtDw4C,EAAAnxC,SAAAmZ,cAAA63B,GACA,GAAAG,EAAA,CACA,IAAAuN,EAAAC,iBAAAxN,GACAxkD,EAAA,GAAAu9B,SAAAw0B,EAAAx+C,MAAA,IACAvT,EAAA,GAAAu9B,SAAAw0B,EAAAv+C,OAAA,IAEA,OAAAxT,GASA4tD,EAAA3gD,UAAAglD,gBAAA,SAAApyD,GACA,OAAAmM,KAAAujD,aAAA1vD,WAWA+tD,EAAA3gD,UAAAuiD,oBAAA,SAAA1vD,EAAAoyD,EAAA79B,GACA,IAAA5J,EAAAynC,GAAA,EACAtoD,EAAAyqB,GAAA,EACA,OAAAroB,KAAAujD,aAAAzvD,aAAA2qB,EAAA7gB,IAUAgkD,EAAA3gD,UAAAmiD,kBAAA,SAAArvD,EAAAmyD,GACA,IAAAznC,EAAAynC,GAAA,EACA,OAAAlmD,KAAAujD,aAAAxvD,WAAA0qB,IASAmjC,EAAA3gD,UAAApR,UAAA,WACA,OACgEmQ,KAAAwL,IAAci2C,IAO9EG,EAAA3gD,UAAAklD,eAAA,WACA,OAAAnmD,KAAAujD,cAOA3B,EAAA3gD,UAAAmlD,SAAA,SAAAC,GACA,YAAArrD,IAAAqrD,GACAA,EAAA,GAAArmD,KAAA6hD,OAAA,GACAwE,EAAA,GAAArmD,KAAA6hD,OAAA,GACAwE,GAEArmD,KAAA6hD,OAAAxwD,SAcAuwD,EAAA3gD,UAAAqlD,gBAAA,SAAAjyC,GACA,IAAArgB,EAAAqgB,GAAArU,KAAA8lD,uBACAjyD,EAAkEmM,KAAAnQ,YAC9D+D,OAAA2xB,EAAA,EAAA3xB,CAAMC,EAAA,GACV,IAAAC,EAAwCkM,KAAA+mB,gBACpCnzB,OAAA2xB,EAAA,EAAA3xB,MAAMoH,IAAAlH,EAAA,GACV,IAAAC,EAAsCiM,KAAA6jD,cAGtC,OAFIjwD,OAAA2xB,EAAA,EAAA3xB,MAAMoH,IAAAjH,EAAA,GAECH,OAAAoT,EAAA,EAAApT,CAAiBC,EAAAC,EAAAC,EAAAC,IAQ5B4tD,EAAA3gD,UAAAszB,iBAAA,WACA,OAAAv0B,KAAA6iD,gBAQAjB,EAAA3gD,UAAAuzB,iBAAA,WACA,OAAAx0B,KAAA8iD,gBAQAlB,EAAA3gD,UAAA2P,WAAA,WACA,OAA6B5Q,KAAAumD,qBAAAvmD,KAAA8iD,iBAQ7BlB,EAAA3gD,UAAAulD,WAAA,SAAA//B,GACAzmB,KAAAiiD,cAAAjiD,KAAA0jD,mBAAA,CAAgDh+B,QAAAe,MAQhDm7B,EAAA3gD,UAAA0P,WAAA,WACA,OAA6B3Q,KAAAumD,qBAAAvmD,KAAA6iD,iBAQ7BjB,EAAA3gD,UAAAwlD,WAAA,SAAAhgC,GACAzmB,KAAAiiD,cAAAjiD,KAAA0jD,mBAAA,CAAgDt+B,QAAAqB,MAQhDm7B,EAAA3gD,UAAA4oC,cAAA,WACA,OAAA7pC,KAAAmpC,aASAyY,EAAA3gD,UAAA8lB,cAAA,WACA,OAAuC/mB,KAAAwL,IAAci2C,IASrDG,EAAA3gD,UAAA+lB,eAAA,WACA,OAAAhnB,KAAAqlB,cAWAu8B,EAAA3gD,UAAAylD,uBAAA,SAAA31D,EAAAsjB,GACA,IAAArgB,EAAAqgB,GAAArU,KAAA8lD,uBACAa,EAAsB/yD,OAAAoT,EAAA,EAAApT,CAAQ7C,GAAAiD,EAAA,GAC9B4yD,EAAsBhzD,OAAAoT,EAAA,EAAApT,CAAS7C,GAAAiD,EAAA,GAC/B,OAAAjB,KAAAE,IAAA0zD,EAAAC,IASAhF,EAAA3gD,UAAA4lD,8BAAA,SAAAC,GACA,IAAAtqC,EAAAsqC,GAAA,EACAnrC,EAAA3b,KAAA6iD,eACAnnC,EAAA1b,KAAA8iD,eACA7vD,EAAAF,KAAA2Q,IAAAiY,EAAAD,GAAA3oB,KAAA2Q,IAAA8Y,GACA,gBAKArrB,GAEA,OADAwqB,EAAA5oB,KAAAka,IAAAuP,EAAArrB,EAAA8B,KAWA2uD,EAAA3gD,UAAA4iD,YAAA,WACA,OAA6B7jD,KAAAwL,IAAci2C,IAS3CG,EAAA3gD,UAAA8lD,8BAAA,SAAAD,GACA,IAAAtqC,EAAAsqC,GAAA,EACAnrC,EAAA3b,KAAA6iD,eACAnnC,EAAA1b,KAAA8iD,eACA7vD,EAAAF,KAAA2Q,IAAAiY,EAAAD,GAAA3oB,KAAA2Q,IAAA8Y,GACA,gBAKA1oB,GAEA,OADAf,KAAA2Q,IAAAiY,EAAA7nB,GAAAf,KAAA2Q,IAAA8Y,GAAAvpB,IASA2uD,EAAA3gD,UAAA6Z,SAAA,SAAAiT,GACA,IAAAl6B,EAAiEmM,KAAAnQ,YACjEoV,EAAAjF,KAAA6pC,gBACA/1C,EAAuCkM,KAAA+mB,gBACvCigC,EAAAlzD,EAAAi6B,EACAh6B,EAAAiM,KAAA6jD,cACA,OAEAhwD,OAAA,CACAd,KAAAkhB,MAAApgB,EAAA,GAAAmzD,KACAj0D,KAAAkhB,MAAApgB,EAAA,GAAAmzD,MAEA/hD,gBAAAjK,IAAAiK,IAAA,KACAnR,aACAC,WACA0yB,KAAAzmB,KAAA4jD,YAYAhC,EAAA3gD,UAAA2iD,QAAA,WACA,IAAAn9B,EACA3yB,EAAAkM,KAAA+mB,gBAIA,YAHA/rB,IAAAlH,IACA2yB,EAAAzmB,KAAAumD,qBAAAzyD,IAEA2yB,GASAm7B,EAAA3gD,UAAAslD,qBAAA,SAAAzyD,GACA,IACAb,EAAAkyB,EADAxyB,EAAAqN,KAAA+iD,UAAA,EAEA,GAAA/iD,KAAAqlB,aAAA,CACA,IAAA4hC,EAAoBrzD,OAAAskB,EAAA,EAAAtkB,CAAiBoM,KAAAqlB,aAAAvxB,EAAA,GACrCnB,EAAAs0D,EACAh0D,EAAA+M,KAAAqlB,aAAA4hC,GAEA9hC,EADA8hC,GAAAjnD,KAAAqlB,aAAAn0B,OAAA,EACA,EAEA+B,EAAA+M,KAAAqlB,aAAA4hC,EAAA,QAGAh0D,EAAA+M,KAAA6iD,eACA19B,EAAAnlB,KAAAylB,YAEA,OAAA9yB,EAAAI,KAAA2Q,IAAAzQ,EAAAa,GAAAf,KAAA2Q,IAAAyhB,IASAy8B,EAAA3gD,UAAAimD,qBAAA,SAAAzgC,GACA,OAA6BzmB,KAAAwjD,oBAC7BxjD,KAAA6iD,eAAAp8B,EAAAzmB,KAAA+iD,SAAA,IAaAnB,EAAA3gD,UAAAkmD,IAAA,SAAAC,EAAAhrC,GACA,IAMAF,EANAnc,EAAAqc,GAAA,GACApoB,EAAA+L,EAAA/L,KACAA,IACAA,EAAAgM,KAAA8lD,wBAIIlyD,OAAA2xB,EAAA,EAAA3xB,CAAMmE,MAAAkG,QAAAmpD,IAAwD,qBAAA/4C,sBAClE,IACAtW,MAAAkG,QAAAmpD,IACMxzD,OAAA2xB,EAAA,EAAA3xB,EAAQA,OAAAoT,EAAA,EAAApT,CAAOwzD,GACrB,IACAlrC,EAAiBtoB,OAAA8jB,EAAA,EAAA9jB,CAAiBwzD,IAC7BA,EAAAjwC,YAAyCC,EAAA,EAAY3X,QAC1D2nD,IAAAhmD,aACA8a,EAAiBtoB,OAAA8jB,EAAA,EAAA9jB,CAAiBwzD,IAClC33C,OAAAzP,KAAA6jD,cAA0CjwD,OAAAoT,EAAA,EAAApT,CAASwzD,KAEnDlrC,EAAAkrC,EAGA,IAIA1rC,EAJA2rC,OAAArsD,IAAA+E,EAAAsnD,QAAAtnD,EAAAsnD,QAAA,UACA7D,OAAAxoD,IAAA+E,EAAAyjD,qBACAzjD,EAAAyjD,oBACAyD,OAAAjsD,IAAA+E,EAAAknD,SAAAlnD,EAAAknD,QAGAvrC,OADA1gB,IAAA+E,EAAA2b,cACA3b,EAAA2b,mBACK1gB,IAAA+E,EAAA2lB,QACL1lB,KAAAwjD,oBACAxjD,KAAA6iD,eAAA9iD,EAAA2lB,QAAA1lB,KAAA+iD,SAAA,GAEA,EAaA,IAXA,IAAAuE,EAAAprC,EAAAhO,qBAGAna,EAAAiM,KAAA6jD,cACAjlC,EAAA7rB,KAAAmB,KAAAH,GACA8qB,EAAA9rB,KAAAqB,KAAAL,GACAwzD,EAAA/0D,IACAg1D,EAAAh1D,IACAi1D,GAAAj1D,IACAk1D,GAAAl1D,IACAK,EAAAqpB,EAAApN,YACA9d,EAAA,EAAAC,EAAAq2D,EAAAp2D,OAAuCF,EAAAC,EAAQD,GAAA6B,EAAA,CAC/C,IAAA80D,EAAAL,EAAAt2D,GAAA4tB,EAAA0oC,EAAAt2D,EAAA,GAAA6tB,EACA+oC,EAAAN,EAAAt2D,GAAA6tB,EAAAyoC,EAAAt2D,EAAA,GAAA4tB,EACA2oC,EAAAx0D,KAAAC,IAAAu0D,EAAAI,GACAH,EAAAz0D,KAAAC,IAAAw0D,EAAAI,GACAH,EAAA10D,KAAAE,IAAAw0D,EAAAE,GACAD,EAAA30D,KAAAE,IAAAy0D,EAAAE,GAIA,IAAA9zD,EAAAkM,KAAA0mD,uBACA,CAAAa,EAAAC,EAAAC,EAAAC,GACA,CAAA1zD,EAAA,GAAAqzD,EAAA,GAAAA,EAAA,GAAArzD,EAAA,GAAAqzD,EAAA,GAAAA,EAAA,KAGA,GAFAvzD,EAAAinC,MAAAjnC,GAAA4nB,EACA3oB,KAAAE,IAAAa,EAAA4nB,GACA8nC,EAAA,CACA,IAAAqE,EAAA7nD,KAAAwjD,oBAAA1vD,EAAA,MACAmzD,GAAAY,EAAA/zD,IACA+zD,EAAA7nD,KAAAwjD,oBACAqE,GAAA,MAEA/zD,EAAA+zD,EAIAhpC,KACA,IAAAipC,GAAAP,EAAAE,GAAA,EACAM,GAAAP,EAAAE,GAAA,EAKA7zD,EAAA,EAJAi0D,IAAAT,EAAA,GAAAA,EAAA,MAAAvzD,GAEA8qB,GADAmpC,IAAAV,EAAA,GAAAA,EAAA,MAAAvzD,GACA+qB,EACAkpC,EAAAnpC,EAAAkpC,EAAAjpC,GAEA3rB,EAAA6M,EAAA7M,SAAA6M,EAAA7M,SAAyD80D,EAAA,OAEzDhtD,IAAA+E,EAAA4kD,SACA3kD,KAAA8jD,QAAA,CACAhwD,aACAD,SACA8wD,SAAA5kD,EAAA4kD,SACA1jB,OAAAlhC,EAAAkhC,QACO/tC,IAEP8M,KAAAioD,cAAAn0D,GACAkM,KAAAkkD,UAAArwD,GACAwwD,EAAAnxD,GAAA,KAWA0uD,EAAA3gD,UAAAinD,SAAA,SAAAx2D,EAAAsC,EAAAm0D,GAEA,IAAAp0D,EAAAiM,KAAA6jD,cACAjlC,EAAA7rB,KAAAmB,KAAAH,GACA8qB,EAAA9rB,KAAAqB,KAAAL,GACA4zD,EAAAj2D,EAAA,GAAAktB,EAAAltB,EAAA,GAAAmtB,EACA+oC,EAAAl2D,EAAA,GAAAktB,EAAAltB,EAAA,GAAAmtB,EACA/qB,EAAAkM,KAAA+mB,gBAMAqhC,GALAT,IAAA3zD,EAAA,KAAAm0D,EAAA,IAAAr0D,GAKA8qB,GAJAgpC,IAAAO,EAAA,GAAAn0D,EAAA,MAAAF,IAGA+qB,MAEAwpC,EAAAT,EAAAhpC,EAAA+oC,EAAA9oC,EAEA7e,KAAAkkD,UAAA,CAAAkE,EAAAC,KAMAzG,EAAA3gD,UAAAgjD,MAAA,WACA,QAAAjkD,KAAAnQ,kBAAAmL,IAAAgF,KAAA+mB,iBASA66B,EAAA3gD,UAAAwO,OAAA,SAAA1b,EAAA6b,GACA,QAAA5U,IAAA4U,EAAA,CACA,IAAA/b,EAAAmM,KAAA0lD,sBAAA3xD,EAAA6b,GACA5P,KAAAkkD,UAAArwD,GAEAmM,KAAAokD,YAAArwD,IASA6tD,EAAA3gD,UAAAijD,UAAA,SAAArwD,GACAmM,KAAA4I,IAAa64C,EAAY5tD,GACzBmM,KAAAilD,gBACAjlD,KAAAmlD,oBASAvD,EAAA3gD,UAAA8jD,QAAA,SAAAuD,EAAA7pC,GAGA,OAFAze,KAAA6hD,OAAAyG,IAAA7pC,EACAze,KAAAwP,UACAxP,KAAA6hD,OAAAyG,IASA1G,EAAA3gD,UAAAgnD,cAAA,SAAAn0D,GACAkM,KAAA4I,IAAa64C,EAAY3tD,GACzBkM,KAAAilD,gBACAjlD,KAAAmlD,oBAUAvD,EAAA3gD,UAAAmjD,YAAA,SAAArwD,GACAiM,KAAA4I,IAAa64C,EAAY1tD,GACzBiM,KAAAilD,gBACAjlD,KAAAmlD,oBASAvD,EAAA3gD,UAAAkjD,QAAA,SAAA19B,GACAzmB,KAAAioD,cAAAjoD,KAAAknD,qBAAAzgC,KAGAm7B,EA57BQ,CA67BN3X,EAAA,GAOF,SAAAoa,EAAAnxD,EAAAq1D,GACAtgB,WAAA,WACA/0C,EAAAq1D,IACG,GAgII,SAAAzD,EAAAL,GACP,QAAAA,EAAAt3B,cAAAs3B,EAAAx3B,eACSr5B,OAAAlC,EAAA,EAAAkC,CAAgB6wD,EAAAt3B,aAAAs3B,EAAAx3B,iBAIzBw3B,EAAAr3B,mBAAAq3B,EAAAv3B,kBAGAu3B,EAAAG,iBAAAH,EAAAI,gBAMev2D,EAAA,yCEjzCR,IAAAk6D,EAAA,gFCEQC,EACf,iBADeA,EAEf,YAFeA,EAGf,YAHeA,EAIf,yBCgEA,IAAIC,EAAO,SAAAzc,GACX,SAAA0c,EAAAvsC,GAEA,IAAArc,EAAAqc,GAAoD,GAEpDoO,EAAAzqB,EAAAyqB,QAAA,GAEAo+B,IAAA,gBAAAp+B,MAAA,YAEAyhB,EAAA54C,KAAA2M,KAAA,CACAqpC,aAAAtpC,EAAAspC,aACAoB,UAAA1qC,EAAA0qC,UACAvgB,YAAAnqB,EAAAmqB,YACAmgB,QAAAue,EACA3jD,WAAAlF,EAAAkF,WACAwnC,2BAAA1sC,EAAA0sC,2BACAJ,UAAAtsC,EAAAssC,UACAvqC,SAAA/B,EAAA+B,SACA6/B,iBAAA5hC,EAAA4hC,iBACAwK,kBACA5sB,IAAAxf,EAAAwf,IACA6sB,KAAArsC,EAAAqsC,KACAnjB,WAAAjuB,IAAA+E,EAAAkpB,OAAAlpB,EAAAkpB,MACAoX,WAAAtgC,EAAAsgC,aAOArgC,KAAA4mC,aAAA5rC,IAAA+E,EAAAouB,OAAApuB,EAAAouB,OAAA,EAMAnuB,KAAA6oD,QAAAr+B,EAMAxqB,KAAA8oD,MAAA,EAMA9oD,KAAA+oD,YAAiFhpD,EAAA,WAMjFC,KAAAgpD,YAAAhuD,IAAA+E,EAAAkpD,OAAAlpD,EAAAkpD,MAMAjpD,KAAAkpD,WAAsBt1D,OAAA7C,EAAA,EAAA6C,GAEtBoM,KAAAmpD,aACAnpD,KAAAkrC,OAAAlrC,KAAAopD,oBA2MA,OAvMAnd,IAAA0c,EAAA3lD,UAAAipC,GACA0c,EAAA1nD,UAAArN,OAAAqP,OAAAgpC,KAAAhrC,WACA0nD,EAAA1nD,UAAAiC,YAAAylD,EAgBAA,EAAA1nD,UAAAg1C,qBAAA,SAAAvkD,EAAAoC,EAAAmR,EAAAulB,GACA,IAAA6+B,EAAwBz1D,OAAA21B,EAAA,EAAA31B,CAAaqR,GACrCqkD,EAAAtpD,KAAA6pC,gBAEA/nC,EAAA9B,KAAAqrC,cACAvpC,IACAA,EAAA9B,KAAAsrC,yBAAA+d,IAGA,IAAAj5C,EAAAtO,EAAAylB,kCAAA71B,EAAAoC,GAEA,KAAAgO,EAAAklB,iBAAA91B,QAAAkf,EAAA,KAIA,IAAAm5C,EAAAznD,EAAAilB,cAAA3W,EAAA,IACAo5C,EAAA1nD,EAAA+kB,mBAAAzW,EAAApQ,KAAAkpD,YACAjjC,EAAmBryB,OAAAI,EAAA,EAAAJ,CAAMkO,EAAAslB,YAAAhX,EAAA,IAAApQ,KAAA0qC,SAGzBvc,EAAAnuB,KAAA4mC,QACA,IAAAzY,IACAlI,EAAiBryB,OAAAI,EAAA,EAAAJ,CAAUqyB,EAAAkI,EAAAnuB,KAAA0qC,SAC3B8e,EAAmB51D,OAAA7C,EAAA,EAAA6C,CAAM41D,EAAAD,EAAAp7B,EAAAq7B,IAGzBF,OAAAD,IACAE,EAAuB31D,OAAA2zC,EAAA,EAAA3zC,CAAyB01D,EAAAD,EAAA33D,EAAA63D,GAChDC,EAAmB51D,OAAA21B,EAAA,EAAA31B,CAAe41D,EAAAH,EAAAC,GAClC53D,EAAmBkC,OAAA21B,EAAA,EAAA31B,CAASlC,EAAA23D,EAAAC,IAG5B,IAAAG,EAAA,CACAC,QAAA,MACAtzD,QAAiBoyD,EACjBmB,QAAA,iBACAC,OAAA,YACAC,aAAA,EACAC,aAAA9pD,KAAA6oD,QAAA,QAEIj1D,OAAA0C,EAAA,EAAA1C,CAAM61D,EAAAzpD,KAAA6oD,QAAAr+B,GAEV,IAAAl5B,EAAAyB,KAAAqxB,OAAA1yB,EAAA,GAAA83D,EAAA,IAAAD,GACAh4D,EAAAwB,KAAAqxB,OAAAolC,EAAA,GAAA93D,EAAA,IAAA63D,GAKA,OAHAE,EAAAzpD,KAAA8oD,KAAA,SAAAx3D,EACAm4D,EAAAzpD,KAAA8oD,KAAA,SAAAv3D,EAEAyO,KAAA+pD,eAAA35C,EAAA6V,EAAAujC,EACA,EAAAF,GAAAD,EAAAI,KAMAd,EAAA1nD,UAAA2rC,UAAA,WACA,OAAA5sC,KAAA4mC,SASA+hB,EAAA1nD,UAAAyvC,UAAA,WACA,OAAA1wC,KAAA6oD,SAaAF,EAAA1nD,UAAA8oD,eAAA,SAAA35C,EAAA6V,EAAAujC,EAAAz7B,EAAA9oB,EAAAulB,GAEA,IAAA4hB,EAAApsC,KAAAosC,KACA,GAAAA,EAAA,CAaA,GATA5hB,EAAA,MAAAvE,EAAA,GACAuE,EAAA,OAAAvE,EAAA,GAEAuE,EAAAxqB,KAAA8oD,KAAA,aAAA7jD,EAAA9D,UAEA,WAAAnB,KAAA6oD,UACAr+B,EAAA,WAGA,GAAAuD,EACA,OAAA/tB,KAAA+oD,aACA,KAAaN,EACb,IAAAuB,EAAA,GAAAj8B,EAAA,KACA,mBAAAvD,EACAA,EAAA,wBAA0Cw/B,EAE1Cx/B,EAAA,sBAAAw/B,EAEA,MACA,KAAavB,EACbj+B,EAAA,kBAAAuD,EACA,MACA,KAAa06B,EACb,KAAaA,EACbj+B,EAAA,OAAAuD,EACA,MACA,QACUn6B,OAAA2xB,EAAA,EAAA3xB,EAAM,MAKhB,IAGA+D,EAUA4nB,EAbA/e,EAAAyE,EAAAxD,qBACAu7B,EAAAwsB,EACA,GAAAxpD,KAAA8oD,MAAA,MAAAtoD,EAAAypD,OAAA,KAEAtyD,EAAA6xD,EAAA,GACAxsB,EAAA,GAAAwsB,EAAA,GACAxsB,EAAA,GAAArlC,EACAA,EAAA6xD,EAAA,GACAxsB,EAAA,GAAAwsB,EAAA,GACAxsB,EAAA,GAAArlC,EAKA,GAHA6yB,EAAA,KAAAwS,EAAA9L,KAAA,KAGA,GAAAkb,EAAAl7C,OACAquB,EAAA6sB,EAAA,QAGA7sB,EAAA6sB,EADkBx4C,OAAAmP,EAAA,EAAAnP,CAAOA,OAAAs0B,EAAA,EAAAt0B,CAAawc,GAAAg8B,EAAAl7C,SAGtC,OChSO,SAAAg5D,EAAA1/B,GACP,IAAA2/B,EAAA,GAEAv2D,OAAA0H,KAAAkvB,GAAA1kB,QAAA,SAAAhO,GACA,OAAA0yB,EAAA1yB,SAAAkD,IAAAwvB,EAAA1yB,IACAqyD,EAAAtuD,KAAA/D,EAAA,IAAAsyD,mBAAA5/B,EAAA1yB,OAGA,IAAAuyD,EAAAF,EAAAj5B,KAAA,KAKA,OADAg5B,GAAA,KAFAA,IAAAl3B,QAAA,aAEAj3B,QAAA,KAAAmuD,EAAA,IAAAA,EAAA,KACAG,EDmRWC,CAAY/qC,EAAAiL,KAMvBm+B,EAAA1nD,UAAAwqC,kBAAA,SAAA1d,GACA,OAAA/tB,KAAAgpD,aAAAhuD,IAAAgF,KAAA+oD,YACsB,EADtB,GAQAJ,EAAA1nD,UAAAmoD,iBAAA,WACA,IAAAp4D,EAAA,EACAgO,EAAA,GACA,QAAAlD,KAAAkE,KAAA6oD,QACA7pD,EAAAhO,KAAA8K,EAAA,IAAAkE,KAAA6oD,QAAA/sD,GAEA,OAAAkD,EAAAkyB,KAAA,MAQAy3B,EAAA1nD,UAAA00C,aAAA,SAAAnrB,GACI52B,OAAA0C,EAAA,EAAA1C,CAAMoM,KAAA6oD,QAAAr+B,GACVxqB,KAAAmpD,aACAnpD,KAAAkrC,OAAAlrC,KAAAopD,qBAMAT,EAAA1nD,UAAAkoD,WAAA,WACA,IAAApY,EAAA/wC,KAAA6oD,QAAA,SAA6CL,EAC7CxoD,KAAA8oD,KAAgBl1D,OAAAspD,EAAA,EAAAtpD,CAAem9C,EAAA,WAG/B4X,EA1QW,CA2QT/Z,EAAA,GASF,SAAAzC,EAAA/7B,EAAA2d,EAAA9oB,GAEA,IAAAnD,EAAA9B,KAAAqrC,cAKA,GAJAvpC,IACAA,EAAA9B,KAAAsrC,yBAAArmC,MAGAnD,EAAAklB,iBAAA91B,QAAAkf,EAAA,KAIA,GAAA2d,GAAA/tB,KAAAgpD,aAAAhuD,IAAAgF,KAAA+oD,cACAh7B,EAAA,GAGA,IAAAw7B,EAAAznD,EAAAilB,cAAA3W,EAAA,IACAo5C,EAAA1nD,EAAA+kB,mBAAAzW,EAAApQ,KAAAkpD,YACAjjC,EAAiBryB,OAAAI,EAAA,EAAAJ,CACjBkO,EAAAslB,YAAAhX,EAAA,IAAApQ,KAAA0qC,SAEAvc,EAAAnuB,KAAA4mC,QACA,IAAAzY,IACAlI,EAAeryB,OAAAI,EAAA,EAAAJ,CAAUqyB,EAAAkI,EAAAnuB,KAAA0qC,SACzB8e,EAAiB51D,OAAA7C,EAAA,EAAA6C,CAAM41D,EAAAD,EAAAp7B,EAAAq7B,IAGvB,GAAAz7B,IACA9H,EAAeryB,OAAAI,EAAA,EAAAJ,CAASqyB,EAAA8H,EAAA/tB,KAAA0qC,UAGxB,IAAA+e,EAAA,CACAC,QAAA,MACAtzD,QAAeoyD,EACfmB,QAAA,SACAC,OAAA,YACAC,aAAA,GAIA,OAFEj2D,OAAA0C,EAAA,EAAA1C,CAAM61D,EAAAzpD,KAAA6oD,SAER7oD,KAAA+pD,eAAA35C,EAAA6V,EAAAujC,EACAz7B,EAAA9oB,EAAAwkD,IAIen7D,EAAA,iGEtMf,SAAAi8D,EAAA9tD,GACA,oBAAAA,EAAA,CACA,IAAAE,EAAAy5B,KAAAolB,MAAA/+C,GACA,OAAAE,GAAsC,KACnC,cAAAF,EACHA,EAEA,KAKe,IAAA+tD,EArMA,SAAAzuC,GACf,SAAA0uC,IACA1uC,EAAA1oB,KAAA2M,MA+KA,OA5KA+b,IAAA0uC,EAAAznD,UAAA+Y,GACA0uC,EAAAxpD,UAAArN,OAAAqP,OAAA8Y,KAAA9a,WACAwpD,EAAAxpD,UAAAiC,YAAAunD,EAKAA,EAAAxpD,UAAAkW,QAAA,WACA,OAAWuzC,EAAA,EAAUt0B,MAYrBq0B,EAAAxpD,UAAA4b,YAAA,SAAApgB,EAAA2f,GACA,OAAApc,KAAA2qD,sBACAJ,EAAA9tD,GAAAuD,KAAAyc,eAAAhgB,EAAA2f,KAYAquC,EAAAxpD,UAAA6b,aAAA,SAAArgB,EAAA2f,GACA,OAAApc,KAAA4qD,uBACAL,EAAA9tD,GAAAuD,KAAAyc,eAAAhgB,EAAA2f,KAUAquC,EAAAxpD,UAAA0pD,sBAAA,SAAAhuD,EAAAyf,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAUX62D,EAAAxpD,UAAA2pD,uBAAA,SAAAjuD,EAAAyf,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAWX62D,EAAAxpD,UAAA8b,aAAA,SAAAtgB,EAAA2f,GACA,OAAApc,KAAA6qD,uBACAN,EAAA9tD,GAAAuD,KAAAyc,eAAAhgB,EAAA2f,KAUAquC,EAAAxpD,UAAA4pD,uBAAA,SAAAluD,EAAAyf,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAUX62D,EAAAxpD,UAAAyb,eAAA,SAAAjgB,GACA,OAAAuD,KAAA8qD,yBAAAP,EAAA9tD,KASAguD,EAAAxpD,UAAA6pD,yBAAA,SAAAnuD,GACA,OAAW/I,OAAAk2C,EAAA,EAAAl2C,IAWX62D,EAAAxpD,UAAA+b,aAAA,SAAAC,EAAAb,GACA,OAAAga,KAAAqjB,UAAAz5C,KAAA+qD,mBAAA9tC,EAAAb,KASAquC,EAAAxpD,UAAA8pD,mBAAA,SAAA9tC,EAAAb,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAWX62D,EAAAxpD,UAAAic,cAAA,SAAAC,EAAAf,GACA,OAAAga,KAAAqjB,UAAAz5C,KAAAgrD,oBAAA7tC,EAAAf,KASAquC,EAAAxpD,UAAA+pD,oBAAA,SAAA7tC,EAAAf,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAWX62D,EAAAxpD,UAAAmc,cAAA,SAAAlB,EAAAE,GACA,OAAAga,KAAAqjB,UAAAz5C,KAAAirD,oBAAA/uC,EAAAE,KASAquC,EAAAxpD,UAAAgqD,oBAAA,SAAA/uC,EAAAE,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAGX62D,EAjLe,CAkLbS,EAAA,6FC5IEC,EAAO,SAAAV,GACX,SAAAW,EAAAhvC,GAEA,IAAArc,EAAAqc,GAAA,GAEAquC,EAAAp3D,KAAA2M,MAKAA,KAAAgc,eAA0BpoB,OAAA21B,EAAA,EAAA31B,CAC1BmM,EAAAic,eACAjc,EAAAic,eAAA,aAEAjc,EAAAuc,oBACAtc,KAAAic,yBAAsCroB,OAAA21B,EAAA,EAAA31B,CAAamM,EAAAuc,oBAQnDtc,KAAAk1B,cAAAn1B,EAAAsrD,aAOArrD,KAAAsrD,qBAAAvrD,EAAAwrD,oBAmKA,OA/JAd,IAAAW,EAAApoD,UAAAynD,GACAW,EAAAnqD,UAAArN,OAAAqP,OAAAwnD,KAAAxpD,WACAmqD,EAAAnqD,UAAAiC,YAAAkoD,EAKAA,EAAAnqD,UAAA0pD,sBAAA,SAAAhuD,EAAAyf,GAIA,IAAAovC,EAAA,KAWAtvC,EAAAa,GATAyuC,EADA,YAAA7uD,EAAA,KACiD,EAEjD,CACA9B,KAAA,UACAqhB,SAA+C,EAC/C6E,WAAA,OAIA,SAAA3E,GACAa,EAAA,IAAsB8X,EAAA,EAetB,OAdA/0B,KAAAk1B,cACAjY,EAAAuY,gBAAAx1B,KAAAk1B,eACKl1B,KAAAsrD,sBAAA,kBAAAE,SAAAxwD,GACLiiB,EAAAuY,gBAAAg2B,EAAA,eAEAvuC,EAAAsY,YAAArZ,GAEA,OAAAsvC,GACAvuC,EAAAgZ,MAAAu1B,EAAA,IAGAA,EAAA,YACAvuC,EAAA1R,cAAAigD,EAAA,YAEAvuC,GAMAmuC,EAAAnqD,UAAA2pD,uBAAA,SAAAjuD,EAAAyf,GACA,IAEAe,EAAA,KACA,yBAHiD,EAGjD,MAEAA,EAAA,GAEA,IADA,IAAAsuC,EAFyE,EAEzE,SACAz6D,EAAA,EAAAC,EAAAw6D,EAAAv6D,OAAkDF,EAAAC,IAAQD,EAC1DmsB,EAAAthB,KAAAmE,KAAA2qD,sBAAAc,EAAAz6D,GAAAorB,SAGAe,EAAA,CAAAnd,KAAA2qD,sBAAAhuD,EAAAyf,IAEA,OAAAe,GAMAiuC,EAAAnqD,UAAA4pD,uBAAA,SAAAluD,EAAAyf,GACA,OAAAW,EAAmD,EAAAX,IAMnDgvC,EAAAnqD,UAAA6pD,yBAAA,SAAAnuD,GACA,IACAsI,EADA6b,EAAAnkB,EAAA,IAWA,OATAmkB,EACA,QAAAA,EAAA,KACA7b,EAAqBrR,OAAA21B,EAAA,EAAA31B,CAAaktB,EAAA,iBAE1BltB,OAAA2xB,EAAA,EAAA3xB,EAAM,MAGdqR,EAAAjF,KAAAgc,eAEA,GAcAovC,EAAAnqD,UAAA8pD,mBAAA,SAAA9tC,EAAAb,GACAA,EAAApc,KAAA2c,aAAAP,GAGA,IAAAzf,EAAA,CACA9B,KAAA,UACAqhB,SAAA,KACA6E,WAAA,MAGAmV,EAAAjZ,EAAA2Y,aACA56B,IAAAk7B,IACAv5B,EAAAu5B,MAGA,IAAAha,EAAAe,EAAAyY,cACAxZ,IACAvf,EAAAuf,SAAAkB,EAAAlB,EAAAE,IAGA,IAAA2E,EAAA9D,EAAAvR,gBAKA,cAJAqV,EAAA9D,EAAAwY,mBACS7hC,OAAA0C,EAAA,EAAA1C,CAAOmtB,KAChBpkB,EAAAokB,cAEApkB,GAYAyuD,EAAAnqD,UAAA+pD,oBAAA,SAAA7tC,EAAAf,GACAA,EAAApc,KAAA2c,aAAAP,GAEA,IADA,IAAAsvC,EAAA,GACA16D,EAAA,EAAAC,EAAAksB,EAAAjsB,OAAyCF,EAAAC,IAAQD,EACjD06D,EAAA7vD,KAAAmE,KAAA+qD,mBAAA5tC,EAAAnsB,GAAAorB,IAEA,OACAvhB,KAAA,oBACAsiB,SAAAuuC,IAaAN,EAAAnqD,UAAAgqD,oBAAA,SAAA/uC,EAAAE,GACA,OAAAgB,EAAAlB,EAAAlc,KAAA2c,aAAAP,KAGAgvC,EAjMW,CAkMTZ,GAQF,SAAAztC,EAAApgB,EAAAyf,GACA,IAAAzf,EACA,YAMA,IAAAuf,EACA,OAAAvf,EAAA,MACA,KAASya,EAAA,EAAYnY,MACrBid,EAyDA,SAAAvf,GACA,WAAaic,EAAA,EAAKjc,EAAA,aA1DlBgvD,CAA2D,GAC3D,MAEA,KAASv0C,EAAA,EAAYlY,YACrBgd,EA8DA,SAAAvf,GACA,WAAa4lB,EAAA,EAAU5lB,EAAA,aA/DvBivD,CAAqE,GACrE,MAEA,KAASx0C,EAAA,EAAYhY,QACrB8c,EA8FA,SAAAvf,GACA,WAAa+a,EAAA,EAAO/a,EAAA,aA/FpBkvD,CAA+D,GAC/D,MAEA,KAASz0C,EAAA,EAAY/X,YACrB6c,EAwEA,SAAAvf,GACA,WAAa6mB,EAAA,EAAU7mB,EAAA,aAzEvBmvD,CAAqE,GACrE,MAEA,KAAS10C,EAAA,EAAY9X,kBACrB4c,EA2DA,SAAAvf,GACA,WAAak9B,EAAA,EAAel9B,EAAA,aA5D5BovD,CAA+E,GAC/E,MAEA,KAAS30C,EAAA,EAAY7X,cACrB2c,EAyEA,SAAAvf,GACA,WAAa4yC,EAAA,EAAY5yC,EAAA,aA1EzBqvD,CAAyE,GACzE,MAEA,KAAS50C,EAAA,EAAY5X,oBACrB0c,EAgBA,SAAAvf,EAAAyf,GACA,IAAA6a,EAAAt6B,EAAA,WAAA4T,IAKA,SAAA2L,GACA,OAAAa,EAAAb,EAAAE,KAEA,WAAasa,EAAA,EAAkBO,GAzB/Bg1B,CAAqF,GACrF,MAEA,QACA,UAAA/1D,MAAA,6BAAAyG,EAAA9B,MAGA,OAA+DjH,OAAAs3D,EAAA,EAAL,CAAyBhvC,GAAA,EAAAE,GAiFnF,SAAAgB,EAAAlB,EAAAE,GAEA,IAGA8vC,EAHArxD,GADAqhB,EAAmEtoB,OAAAs3D,EAAA,EAAL,CAAyBhvC,GAAA,EAAAE,IACvFjF,UAIA,OAAAtc,GACA,KAASuc,EAAA,EAAYnY,MACrBitD,EAyHA,SAAAhwC,EAAAE,GACA,OACAvhB,KAAA,QACA/J,YAAAorB,EAAAlO,kBA5HAm+C,CAAoD,GACpD,MAEA,KAAS/0C,EAAA,EAAYlY,YACrBgtD,EA6DA,SAAAhwC,EAAAE,GACA,OACAvhB,KAAA,aACA/J,YAAAorB,EAAAlO,kBAhEAo+C,CAA8D,GAC9D,MAEA,KAASh1C,EAAA,EAAYhY,QACrB8sD,EA8HA,SAAAhwC,EAAAE,GACA,IAAAwgB,EACAxgB,IACAwgB,EAAAxgB,EAAAiwC,aAEA,OACAxxD,KAAA,UACA/J,YAAAorB,EAAAlO,eAAA4uB,IArIA0vB,CAAwD,EAAAlwC,GACxD,MAEA,KAAShF,EAAA,EAAY/X,YACrB6sD,EA+EA,SAAAhwC,EAAAE,GACA,OACAvhB,KAAA,aACA/J,YAAAorB,EAAAlO,kBAlFAu+C,CAA8D,GAC9D,MAEA,KAASn1C,EAAA,EAAY9X,kBACrB4sD,EA8DA,SAAAhwC,EAAAE,GACA,OACAvhB,KAAA,kBACA/J,YAAAorB,EAAAlO,kBAjEAw+C,CAAwE,GACxE,MAEA,KAASp1C,EAAA,EAAY7X,cACrB2sD,EAoFA,SAAAhwC,EAAAE,GACA,IAAAwgB,EACAxgB,IACAwgB,EAAAxgB,EAAAiwC,aAEA,OACAxxD,KAAA,eACA/J,YAAAorB,EAAAlO,eAAA4uB,IA3FA6vB,CAAkE,EAAArwC,GAClE,MAEA,KAAShF,EAAA,EAAY5X,oBACrB0sD,EAuBA,SAAAhwC,EAAAE,GAMA,OACAvhB,KAAA,qBACAo8B,WAPA/a,EAAAkb,qBAAA7mB,IAAA,SAAA2L,GACA,IAAAnc,EAAkBnM,OAAA0C,EAAA,EAAA1C,CAAM,GAAGwoB,GAE3B,cADArc,EAAAuc,kBACAc,EAAAlB,EAAAnc,MA3BA2sD,CAA8E,EAAAtwC,GAC9E,MAEA,KAAShF,EAAA,EAAY3X,OACrBysD,EAAA,CACArxD,KAAA,qBACAo8B,WAAA,IAEA,MAEA,QACA,UAAA/gC,MAAA,8BAAA2E,GAGA,OAAAqxD,EA4Ge59D,EAAA,uFC/Uf,SAAAq+D,EAAAlwD,GACA,uBAAAA,EACAA,EAEA,GAKe,IAAAmwD,EA/LA,SAAA7wC,GACf,SAAA8wC,IACA9wC,EAAA1oB,KAAA2M,MA4KA,OAzKA+b,IAAA8wC,EAAA7pD,UAAA+Y,GACA8wC,EAAA5rD,UAAArN,OAAAqP,OAAA8Y,KAAA9a,WACA4rD,EAAA5rD,UAAAiC,YAAA2pD,EAKAA,EAAA5rD,UAAAkW,QAAA,WACA,OAAWuzC,EAAA,EAAUr0B,MAWrBw2B,EAAA5rD,UAAA4b,YAAA,SAAApgB,EAAA2f,GACA,OAAApc,KAAA8sD,oBAAAH,EAAAlwD,GAAAuD,KAAA2c,aAAAP,KAUAywC,EAAA5rD,UAAA6rD,oBAAA,SAAA1sC,EAAAhE,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAWXi5D,EAAA5rD,UAAA6b,aAAA,SAAArgB,EAAA2f,GACA,OAAApc,KAAA+sD,qBAAAJ,EAAAlwD,GAAAuD,KAAA2c,aAAAP,KAUAywC,EAAA5rD,UAAA8rD,qBAAA,SAAA3sC,EAAAhE,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAWXi5D,EAAA5rD,UAAA8b,aAAA,SAAAtgB,EAAA2f,GACA,OAAApc,KAAAgtD,qBAAAL,EAAAlwD,GAAAuD,KAAA2c,aAAAP,KAUAywC,EAAA5rD,UAAA+rD,qBAAA,SAAA5sC,EAAAhE,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAUXi5D,EAAA5rD,UAAAyb,eAAA,SAAAjgB,GACA,OAAAuD,KAAAitD,uBAAAN,EAAAlwD,KAQAowD,EAAA5rD,UAAAgsD,uBAAA,SAAA7sC,GACA,OAAApgB,KAAAgc,gBAWA6wC,EAAA5rD,UAAA+b,aAAA,SAAAC,EAAAb,GACA,OAAApc,KAAAktD,iBAAAjwC,EAAAjd,KAAA2c,aAAAP,KAUAywC,EAAA5rD,UAAAisD,iBAAA,SAAAjwC,EAAAb,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAWXi5D,EAAA5rD,UAAAic,cAAA,SAAAC,EAAAf,GACA,OAAApc,KAAAmtD,kBAAAhwC,EAAAnd,KAAA2c,aAAAP,KAUAywC,EAAA5rD,UAAAksD,kBAAA,SAAAhwC,EAAAf,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAWXi5D,EAAA5rD,UAAAmc,cAAA,SAAAlB,EAAAE,GACA,OAAApc,KAAAotD,kBAAAlxC,EAAAlc,KAAA2c,aAAAP,KAUAywC,EAAA5rD,UAAAmsD,kBAAA,SAAAlxC,EAAAE,GACA,OAAWxoB,OAAAk2C,EAAA,EAAAl2C,IAGXi5D,EA9Ke,CA+Kb3B,EAAA,oFCzKFmC,EAAA,CACApuD,MAAW2Z,EAAA,EACX00C,WAAgB/qC,EAAA,EAChBnjB,QAAasY,EAAA,EACb61C,WAAgB/pC,EAAA,EAChBgqC,gBAAqB3zB,EAAA,EACrB4zB,aAAkBle,EAAA,GAqBlBhjC,EAAA,QAOAmhD,EAAA,IAOAtvB,EAAA,IAcAuvB,EACA,EADAA,EAEA,EAFAA,EAGA,EAHAA,EAIA,EAJAA,EAKA,EALAA,EAMA,EAOAC,EAAA,GACA,QAAA/yD,KAAiBuc,EAAA,EACjBw2C,EAAA/yD,GAA0Buc,EAAA,EAAYvc,GAAAgzD,cAOtC,IAAAC,EAAA,SAAAC,GAKA/tD,KAAA+tD,MAMA/tD,KAAAguD,QAAA,GAQAF,EAAA7sD,UAAAgtD,SAAA,SAAArkD,GACA,OAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAUAkkD,EAAA7sD,UAAAitD,WAAA,SAAAtkD,EAAAukD,GAEA,OAAAvkD,GAAA,KAAAA,GAAA,UAAAA,UADA5O,IAAAmzD,OASAL,EAAA7sD,UAAAmtD,cAAA,SAAAxkD,GACA,WAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAOAkkD,EAAA7sD,UAAAotD,UAAA,WACA,OAAAruD,KAAA+tD,IAAAO,SAAAtuD,KAAAguD,SAOAF,EAAA7sD,UAAAstD,UAAA,WACA,IAIA1zD,EAJA+O,EAAA5J,KAAAquD,YACAlG,EAAAnoD,KAAAguD,OAEA78D,EAAAyY,EAGA,QAAAA,EACA/O,EAAA8yD,OACG,QAAA/jD,EACH/O,EAAA8yD,OACG,QAAA/jD,EACH/O,EAAA8yD,OACG,GAAA3tD,KAAAkuD,WAAAtkD,IAAA,KAAAA,EACH/O,EAAA8yD,EACAx8D,EAAA6O,KAAAwuD,mBACG,GAAAxuD,KAAAiuD,SAAArkD,GACH/O,EAAA8yD,EACAx8D,EAAA6O,KAAAyuD,gBACG,IAAAzuD,KAAAouD,cAAAxkD,GACH,OAAA5J,KAAAuuD,YACG,QAAA3kD,EAGH,UAAA1T,MAAA,yBAAA0T,GAFA/O,EAAA8yD,EAKA,OAAUxF,WAAAh3D,QAAA0J,SAOVizD,EAAA7sD,UAAAutD,YAAA,WACA,IAAA5kD,EACApL,EAAAwB,KAAAguD,OACA/8B,GAAA,EACAy9B,GAAA,EACA,GACA,KAAA9kD,EACAqnB,GAAA,EACK,KAAArnB,GAAA,KAAAA,IACL8kD,GAAA,GAEA9kD,EAAA5J,KAAAquD,kBAEAruD,KAAAkuD,WAAAtkD,EAAAqnB,KAGAy9B,IAAA,KAAA9kD,GAAA,KAAAA,IAGA8kD,IAAA,KAAA9kD,GAAA,KAAAA,IAEA,OAAAyqC,WAAAr0C,KAAA+tD,IAAAY,UAAAnwD,EAAAwB,KAAAguD,YAOAF,EAAA7sD,UAAAwtD,UAAA,WACA,IAAA7kD,EACApL,EAAAwB,KAAAguD,OACA,GACApkD,EAAA5J,KAAAquD,kBACGruD,KAAAiuD,SAAArkD,IACH,OAAA5J,KAAA+tD,IAAAY,UAAAnwD,EAAAwB,KAAAguD,UAAAH,eAMA,IAAIe,EAAM,SAAAC,GAMV7uD,KAAA8uD,OAAAD,EAMA7uD,KAAA+uD,OAMA/uD,KAAAgvD,QAAiB93C,EAAA,EAAcpJ,IAO/B8gD,EAAM3tD,UAAAguD,SAAA,WACNjvD,KAAA+uD,OAAA/uD,KAAA8uD,OAAAP,aAQAK,EAAM3tD,UAAAiuD,YAAA,SAAAr0D,GAEN,OADAmF,KAAA+uD,OAAAl0D,SASA+zD,EAAM3tD,UAAAggB,MAAA,SAAApmB,GACN,IAAAs0D,EAAAnvD,KAAAkvD,YAAAr0D,GAIA,OAHAs0D,GACAnvD,KAAAivD,WAEAE,GAOAP,EAAM3tD,UAAAu6C,MAAA,WAGN,OAFAx7C,KAAAivD,WACAjvD,KAAAovD,kBASAR,EAAM3tD,UAAAouD,qBAAA,WACN,IAAAxhD,EAAeqJ,EAAA,EAAcpJ,GAC7BwhD,EAAAtvD,KAAA+uD,OACA,GAAA/uD,KAAAkvD,YAAAvB,GAAA,CACA,IAAA4B,EAAAD,EAAAn+D,MACAo+D,IAAA7B,EACA7/C,EAAeqJ,EAAA,EAAc7H,IACxBkgD,IAAAnxB,EACLvwB,EAAeqJ,EAAA,EAAcrH,IA1O7B,OA2OK0/C,IACL1hD,EAAeqJ,EAAA,EAAc5H,MAE7BzB,IAAmBqJ,EAAA,EAAcpJ,IACjC9N,KAAAivD,WAGA,OAAAphD,GAOA+gD,EAAM3tD,UAAAuuD,6BAAA,WACN,GAAAxvD,KAAAihB,MAAA0sC,GAAA,CACA,IAAA12B,EAAA,GACA,GACAA,EAAAp7B,KAAAmE,KAAAovD,wBACKpvD,KAAAihB,MAAA0sC,IACL,GAAA3tD,KAAAihB,MAAA0sC,GACA,OAAA12B,OAEG,GAAAj3B,KAAAyvD,mBACH,SAEA,UAAAv5D,MAAA8J,KAAA0vD,wBAOAd,EAAM3tD,UAAA0uD,gBAAA,WACN,GAAA3vD,KAAAihB,MAAA0sC,GAAA,CACA,IAAA78D,EAAAkP,KAAA4vD,cACA,GAAA5vD,KAAAihB,MAAA0sC,GACA,OAAA78D,OAEG,GAAAkP,KAAAyvD,mBACH,YAEA,UAAAv5D,MAAA8J,KAAA0vD,wBAOAd,EAAM3tD,UAAA4uD,qBAAA,WACN,GAAA7vD,KAAAihB,MAAA0sC,GAAA,CACA,IAAA78D,EAAAkP,KAAA8vD,kBACA,GAAA9vD,KAAAihB,MAAA0sC,GACA,OAAA78D,OAEG,GAAAkP,KAAAyvD,mBACH,SAEA,UAAAv5D,MAAA8J,KAAA0vD,wBAOAd,EAAM3tD,UAAA8uD,kBAAA,WACN,GAAA/vD,KAAAihB,MAAA0sC,GAAA,CACA,IAAA78D,EAAAkP,KAAAgwD,2BACA,GAAAhwD,KAAAihB,MAAA0sC,GACA,OAAA78D,OAEG,GAAAkP,KAAAyvD,mBACH,SAEA,UAAAv5D,MAAA8J,KAAA0vD,wBAOAd,EAAM3tD,UAAAgvD,qBAAA,WAEN,IAAAn/D,EADA,GAAAkP,KAAAihB,MAAA0sC,IAOA,GAJA78D,EADAkP,KAAA+uD,OAAAl0D,MAAA8yD,EACA3tD,KAAAkwD,sBAEAlwD,KAAA8vD,kBAEA9vD,KAAAihB,MAAA0sC,GACA,OAAA78D,OAEG,GAAAkP,KAAAyvD,mBACH,SAEA,UAAAv5D,MAAA8J,KAAA0vD,wBAQAd,EAAM3tD,UAAAkvD,0BAAA,WACN,GAAAnwD,KAAAihB,MAAA0sC,GAAA,CACA,IAAA78D,EAAAkP,KAAAgwD,2BACA,GAAAhwD,KAAAihB,MAAA0sC,GACA,OAAA78D,OAEG,GAAAkP,KAAAyvD,mBACH,SAEA,UAAAv5D,MAAA8J,KAAA0vD,wBAOAd,EAAM3tD,UAAAmvD,uBAAA,WACN,GAAApwD,KAAAihB,MAAA0sC,GAAA,CACA,IAAA78D,EAAAkP,KAAAqwD,wBACA,GAAArwD,KAAAihB,MAAA0sC,GACA,OAAA78D,OAEG,GAAAkP,KAAAyvD,mBACH,SAEA,UAAAv5D,MAAA8J,KAAA0vD,wBAOAd,EAAM3tD,UAAA2uD,YAAA,WAGN,IAFA,IAAA9+D,EAAA,GACAw/D,EAAAtwD,KAAAgvD,QAAA99D,OACAF,EAAA,EAAiBA,EAAAs/D,IAAgBt/D,EAAA,CACjC,IAAA0mD,EAAA13C,KAAA+uD,OACA,IAAA/uD,KAAAihB,MAAA0sC,GAGA,MAFA78D,EAAA+K,KAAyC67C,EAAA,OAKzC,GAAA5mD,EAAAI,QAAAo/D,EACA,OAAAx/D,EAEA,UAAAoF,MAAA8J,KAAA0vD,wBAOAd,EAAM3tD,UAAA6uD,gBAAA,WAEN,IADA,IAAAh/D,EAAA,CAAAkP,KAAA4vD,eACA5vD,KAAAihB,MAAA0sC,IACA78D,EAAA+K,KAAAmE,KAAA4vD,eAEA,OAAA9+D,GAOA89D,EAAM3tD,UAAAivD,oBAAA,WAEN,IADA,IAAAp/D,EAAA,CAAAkP,KAAA2vD,mBACA3vD,KAAAihB,MAAA0sC,IACA78D,EAAA+K,KAAAmE,KAAA2vD,mBAEA,OAAA7+D,GAOA89D,EAAM3tD,UAAA+uD,yBAAA,WAEN,IADA,IAAAl/D,EAAA,CAAAkP,KAAA6vD,wBACA7vD,KAAAihB,MAAA0sC,IACA78D,EAAA+K,KAAAmE,KAAA6vD,wBAEA,OAAA/+D,GAOA89D,EAAM3tD,UAAAovD,sBAAA,WAEN,IADA,IAAAv/D,EAAA,CAAAkP,KAAA+vD,qBACA/vD,KAAAihB,MAAA0sC,IACA78D,EAAA+K,KAAAmE,KAAA+vD,qBAEA,OAAAj/D,GAOA89D,EAAM3tD,UAAAwuD,iBAAA,WACN,IAAAn/D,EAAA0P,KAAAkvD,YAAAvB,IACA3tD,KAAA+uD,OAAA59D,OAAAob,EAIA,OAHAjc,GACA0P,KAAAivD,WAEA3+D,GAQAs+D,EAAM3tD,UAAAyuD,oBAAA,WACN,qBAAA1vD,KAAA+uD,OAAA59D,MAAA,iBACA6O,KAAA+uD,OAAA5G,SAAA,QAAAnoD,KAAA8uD,OAAAf,IAAA,KAOAa,EAAM3tD,UAAAmuD,eAAA,WACN,IAAA1X,EAAA13C,KAAA+uD,OACA,GAAA/uD,KAAAihB,MAAA0sC,GAAA,CACA,IAAA4C,EAAA7Y,EAAAvmD,MAEA,GADA6O,KAAAgvD,QAAAhvD,KAAAqvD,uBACA,sBAAAkB,EAAA,CACA,IAAAt5B,EAAAj3B,KAAAwvD,+BACA,WAAiB94B,EAAA,EAAkBO,GAEnC,IAKAnmC,EALA0/D,EAAAnD,EAAAkD,GACA,IAAAC,EACA,UAAAt6D,MAAA,0BAAAq6D,GAIA,OAAAA,GACA,YACAz/D,EAAAkP,KAAA2vD,kBACA,MAEA,iBACA7+D,EAAAkP,KAAA6vD,uBACA,MAEA,cACA/+D,EAAAkP,KAAA+vD,oBACA,MAEA,iBACAj/D,EAAAkP,KAAAiwD,uBACA,MAEA,sBACAn/D,EAAAkP,KAAAmwD,4BACA,MAEA,mBACAr/D,EAAAkP,KAAAowD,yBACA,MAEA,QACA,UAAAl6D,MAAA,0BAAAq6D,GAWA,OAPAz/D,IAEAA,EADA0/D,IAAAnD,EAAA,MACA,CAAA92C,SAEA,IAGA,IAAAi6C,EAAA1/D,EAAAkP,KAAAgvD,SAGA,UAAA94D,MAAA8J,KAAA0vD,wBAWA,IAAIe,EAAG,SAAA5D,GACP,SAAA6D,EAAAt0C,GACAywC,EAAAx5D,KAAA2M,MAEA,IAAAD,EAAAqc,GAAA,GAQApc,KAAA2wD,sBAAA31D,IAAA+E,EAAA6wD,iBACA7wD,EAAA6wD,gBAwGA,OApGA/D,IAAA6D,EAAA1tD,UAAA6pD,GACA6D,EAAAzvD,UAAArN,OAAAqP,OAAA4pD,KAAA5rD,WACAyvD,EAAAzvD,UAAAiC,YAAAwtD,EASAA,EAAAzvD,UAAA4vD,OAAA,SAAA9C,GACA,IAAAc,EAAA,IAAAf,EAAAC,GAEA,OADA,IAAqBa,EAAMC,GAC3BrT,SAMAkV,EAAAzvD,UAAA6rD,oBAAA,SAAA1sC,EAAAhE,GACA,IAAAiF,EAAArhB,KAAAgtD,qBAAA5sC,EAAAhE,GACA,GAAAiF,EAAA,CACA,IAAApE,EAAA,IAAwB8X,EAAA,EAExB,OADA9X,EAAAsY,YAAAlU,GACApE,EAEA,aAMAyzC,EAAAzvD,UAAA8rD,qBAAA,SAAA3sC,EAAAhE,GAWA,IAVA,IAAA6a,EAAA,GACA/a,EAAAlc,KAAAgtD,qBAAA5sC,EAAAhE,GAQAe,EAAA,GACAnsB,EAAA,EAAAC,GANAgmC,EAFAj3B,KAAA2wD,kBACAz0C,EAAA/E,WAA8BC,EAAA,EAAY5X,oBAC1C,EACA43B,qBAEA,CAAAlb,IAGAhrB,OAA2CF,EAAAC,IAAQD,EAAA,CACnD,IAAAisB,EAAA,IAAwB8X,EAAA,EACxB9X,EAAAsY,YAAA0B,EAAAjmC,IACAmsB,EAAAthB,KAAAohB,GAEA,OAAAE,GAMAuzC,EAAAzvD,UAAA+rD,qBAAA,SAAA5sC,EAAAhE,GACA,IAAAF,EAAAlc,KAAA6wD,OAAAzwC,GACA,OAAAlE,EAE8DtoB,OAAAs3D,EAAA,EAD9D,CACkFhvC,GAAA,EAAAE,GAGlF,MAOAs0C,EAAAzvD,UAAAisD,iBAAA,SAAAjwC,EAAAb,GACA,IAAAF,EAAAe,EAAAyY,cACA,OAAAxZ,EACAlc,KAAAotD,kBAAAlxC,EAAAE,GAEA,IAMAs0C,EAAAzvD,UAAAksD,kBAAA,SAAAhwC,EAAAf,GACA,MAAAe,EAAAjsB,OACA,OAAA8O,KAAAktD,iBAAA/vC,EAAA,GAAAf,GAGA,IADA,IAAA6a,EAAA,GACAjmC,EAAA,EAAAC,EAAAksB,EAAAjsB,OAAyCF,EAAAC,IAAQD,EACjDimC,EAAAp7B,KAAAshB,EAAAnsB,GAAA0kC,eAEA,IAAAo7B,EAAA,IAAyBp6B,EAAA,EAAkBO,GAC3C,OAAAj3B,KAAAotD,kBAAA0D,EAAA10C,IAMAs0C,EAAAzvD,UAAAmsD,kBAAA,SAAAlxC,EAAAE,GACA,OAAAu6B,EACM/iD,OAAAs3D,EAAA,EAD6D,CACzChvC,GAAA,EAAAE,KAG1Bs0C,EArHO,CAsHL9D,GAOF,SAAAmE,EAAA1vC,GACA,IAAAvwB,EAAAuwB,EAAArT,iBACA,WAAAld,EAAAI,OACA,GAEAJ,EAAAogC,KAAA,KAoCA,SAAA8/B,EAAA3vC,GAGA,IAFA,IAAAvwB,EAAAuwB,EAAArT,iBACAkK,EAAA,GACAlnB,EAAA,EAAAC,EAAAH,EAAAI,OAA0CF,EAAAC,IAAQD,EAClDknB,EAAArc,KAAA/K,EAAAE,GAAAkgC,KAAA,MAEA,OAAAhZ,EAAAgZ,KAAA,KAsBA,SAAA+/B,EAAA5vC,GAGA,IAFA,IAAAnJ,EAAA,GACAg5C,EAAA7vC,EAAAtI,iBACA/nB,EAAA,EAAAC,EAAAigE,EAAAhgE,OAAoCF,EAAAC,IAAQD,EAC5CknB,EAAArc,KAAA,IAAAm1D,EAAAE,EAAAlgE,IAAA,KAEA,OAAAknB,EAAAgZ,KAAA,KAsCA,IAAAigC,EAAA,CACAv4C,MAAAm4C,EACAxuC,WAAAyuC,EACAt5C,QAAAu5C,EACAztC,WAxGA,SAAAnC,GAGA,IAFA,IAAAnJ,EAAA,GACAk5C,EAAA/vC,EAAAsC,YACA3yB,EAAA,EAAAC,EAAAmgE,EAAAlgE,OAAyCF,EAAAC,IAAQD,EACjDknB,EAAArc,KAAA,IAAAk1D,EAAAK,EAAApgE,IAAA,KAEA,OAAAknB,EAAAgZ,KAAA,MAmGA2I,gBA/DA,SAAAxY,GAGA,IAFA,IAAAnJ,EAAA,GACAk5C,EAAA/vC,EAAA8Y,iBACAnpC,EAAA,EAAAC,EAAAmgE,EAAAlgE,OAAyCF,EAAAC,IAAQD,EACjDknB,EAAArc,KAAA,IAAAm1D,EAAAI,EAAApgE,IAAA,KAEA,OAAAknB,EAAAgZ,KAAA,MA0DAqe,aApCA,SAAAluB,GAGA,IAFA,IAAAnJ,EAAA,GACAk5C,EAAA/vC,EAAA+uB,cACAp/C,EAAA,EAAAC,EAAAmgE,EAAAlgE,OAAyCF,EAAAC,IAAQD,EACjDknB,EAAArc,KAAA,IAAAo1D,EAAAG,EAAApgE,IAAA,KAEA,OAAAknB,EAAAgZ,KAAA,MA+BAwF,mBA7FA,SAAArV,GAGA,IAFA,IAAAnJ,EAAA,GACAm5C,EAAAhwC,EAAA6V,gBACAlmC,EAAA,EAAAC,EAAAogE,EAAAngE,OAAoCF,EAAAC,IAAQD,EAC5CknB,EAAArc,KAAA86C,EAAA0a,EAAArgE,KAEA,OAAAknB,EAAAgZ,KAAA,OAgGA,SAAAylB,EAAAt1B,GACA,IAAAxmB,EAAAwmB,EAAAlK,UAEAm6C,GAAAC,EADAJ,EAAAt2D,IACAwmB,GAEA,GADAxmB,IAAAgzD,cAC0B,qBAAA3/C,mBAAA,CAC1B,IAAAqhD,EAvCA,SAAAluC,GACA,IAAAxT,EAAAwT,EAAAjT,YACAmhD,EAAA,GAOA,OANA1hD,IAAiBqJ,EAAA,EAAc7H,KAAAxB,IAAmBqJ,EAAA,EAAc5H,OAChEigD,GAAA7B,GAEA7/C,IAAiBqJ,EAAA,EAAcrH,KAAAhC,IAAmBqJ,EAAA,EAAc5H,OAChEigD,GAAAnxB,GAEAmxB,EA8BAiC,CAA8F,GAC9FjC,EAAAr+D,OAAA,IACA2J,GAAA,IAAA00D,GAGA,WAAA+B,EAAApgE,OACA2J,EAAA,IAAA0R,EAEA1R,EAAA,IAAAy2D,EAAA,IAIehjE,EAAA,mEC91BAmjE,EAAA,CAMfC,IAAA,MAMAC,OAAA,4BCNAC,EACA,SASOC,EAAA,SAAA5mD,GACP,SAAA4mD,EAAAh3D,EAAAi3D,GACA7mD,EAAA5X,KAAA2M,KAAAnF,GAOAmF,KAAAw4C,QAAAsZ,EAQA,OAJA7mD,IAAA4mD,EAAA7uD,UAAAiI,GACA4mD,EAAA5wD,UAAArN,OAAAqP,OAAAgI,KAAAhK,WACA4wD,EAAA5wD,UAAAiC,YAAA2uD,EAEAA,EAjBO,CAkBL5mD,EAAA,GAuPa8mD,EAjOD,SAAA5mD,GACd,SAAA6mD,EAAAz3C,EAAA6B,GAEAjR,EAAA9X,KAAA2M,MAEA,IAAAD,EAAAqc,GAAA,GAcA,GARApc,KAAAiyD,UAAAlyD,EAAAmyD,OAMAlyD,KAAAmyD,OAAA53C,GAAA,GAEAva,KAAAiyD,QACA,QAAAjhE,EAAA,EAAAC,EAAA+O,KAAAmyD,OAAAjhE,OAA8CF,EAAAC,IAAQD,EACtDgP,KAAAoyD,cAAApyD,KAAAmyD,OAAAnhE,MAIAgP,KAAAqyD,gBAoMA,OAhMAlnD,IAAA6mD,EAAAhvD,UAAAmI,GACA6mD,EAAA/wD,UAAArN,OAAAqP,OAAAkI,KAAAlK,WACA+wD,EAAA/wD,UAAAiC,YAAA8uD,EAMAA,EAAA/wD,UAAA/E,MAAA,WACA,KAAA8D,KAAAijB,YAAA,GACAjjB,KAAA2T,OAWAq+C,EAAA/wD,UAAA3R,OAAA,SAAAoO,GACA,QAAA1M,EAAA,EAAAC,EAAAyM,EAAAxM,OAAoCF,EAAAC,IAAQD,EAC5CgP,KAAAnE,KAAA6B,EAAA1M,IAEA,OAAAgP,MAUAgyD,EAAA/wD,UAAA6E,QAAA,SAAAgE,GAEA,IADA,IAAAoO,EAAAlY,KAAAmyD,OACAnhE,EAAA,EAAAC,EAAAinB,EAAAhnB,OAAsCF,EAAAC,IAAQD,EAC9C8Y,EAAAoO,EAAAlnB,KAAAknB,IAYA85C,EAAA/wD,UAAAqxD,SAAA,WACA,OAAAtyD,KAAAmyD,QASAH,EAAA/wD,UAAAy6B,KAAA,SAAAl9B,GACA,OAAAwB,KAAAmyD,OAAA3zD,IASAwzD,EAAA/wD,UAAAgiB,UAAA,WACA,OAAAjjB,KAAAwL,IAAAomD,IASAI,EAAA/wD,UAAAsxD,SAAA,SAAA/zD,EAAAg0D,GACAxyD,KAAAiyD,SACAjyD,KAAAoyD,cAAAI,GAEAxyD,KAAAmyD,OAAAn2D,OAAAwC,EAAA,EAAAg0D,GACAxyD,KAAAqyD,gBACAryD,KAAA6L,cACA,IAAAgmD,EAA0BJ,EAAmBC,IAAAc,KAS7CR,EAAA/wD,UAAA0S,IAAA,WACA,OAAA3T,KAAAyyD,SAAAzyD,KAAAijB,YAAA,IASA+uC,EAAA/wD,UAAApF,KAAA,SAAA22D,GACAxyD,KAAAiyD,SACAjyD,KAAAoyD,cAAAI,GAEA,IAAAn7D,EAAA2I,KAAAijB,YAEA,OADAjjB,KAAAuyD,SAAAl7D,EAAAm7D,GACAxyD,KAAAijB,aASA+uC,EAAA/wD,UAAA/C,OAAA,SAAAs0D,GAEA,IADA,IAAA90D,EAAAsC,KAAAmyD,OACAnhE,EAAA,EAAAC,EAAAyM,EAAAxM,OAAoCF,EAAAC,IAAQD,EAC5C,GAAA0M,EAAA1M,KAAAwhE,EACA,OAAAxyD,KAAAyyD,SAAAzhE,IAaAghE,EAAA/wD,UAAAwxD,SAAA,SAAAj0D,GACA,IAAAoiC,EAAA5gC,KAAAmyD,OAAA3zD,GAIA,OAHAwB,KAAAmyD,OAAAn2D,OAAAwC,EAAA,GACAwB,KAAAqyD,gBACAryD,KAAA6L,cAAA,IAAAgmD,EAA2CJ,EAAmBE,OAAA/wB,IAC9DA,GASAoxB,EAAA/wD,UAAAyxD,MAAA,SAAAl0D,EAAAg0D,GACA,IAAAn7D,EAAA2I,KAAAijB,YACA,GAAAzkB,EAAAnH,EAAA,CACA2I,KAAAiyD,SACAjyD,KAAAoyD,cAAAI,EAAAh0D,GAEA,IAAAoiC,EAAA5gC,KAAAmyD,OAAA3zD,GACAwB,KAAAmyD,OAAA3zD,GAAAg0D,EACAxyD,KAAA6L,cACA,IAAAgmD,EAA4BJ,EAAmBE,OAAA/wB,IAC/C5gC,KAAA6L,cACA,IAAAgmD,EAA4BJ,EAAmBC,IAAAc,QAC1C,CACL,QAAA56D,EAAAP,EAAqBO,EAAA4G,IAAW5G,EAChCoI,KAAAuyD,SAAA36D,OAAAoD,GAEAgF,KAAAuyD,SAAA/zD,EAAAg0D,KAOAR,EAAA/wD,UAAAoxD,cAAA,WACAryD,KAAA4I,IAAAgpD,EAAA5xD,KAAAmyD,OAAAjhE,SAQA8gE,EAAA/wD,UAAAmxD,cAAA,SAAAI,EAAAG,GACA,QAAA3hE,EAAA,EAAAC,EAAA+O,KAAAmyD,OAAAjhE,OAA4CF,EAAAC,IAAQD,EACpD,GAAAgP,KAAAmyD,OAAAnhE,KAAAwhE,GAAAxhE,IAAA2hE,EACA,UAAkBlmC,EAAA,EAAc,KAKhCulC,EA7Nc,CA8NZ/nB,EAAA,GCvPa2oB,EA5Bf,SAAA3nD,GACA,SAAA4nD,EAAAh4D,EAAA0V,EAAAuiD,GAEA7nD,EAAA5X,KAAA2M,KAAAnF,GAOAmF,KAAAuQ,MAOAvQ,KAAAqb,gBAAArgB,IAAA83D,IAAA,KAQA,OAJA7nD,IAAA4nD,EAAA7vD,UAAAiI,GACA4nD,EAAA5xD,UAAArN,OAAAqP,OAAAgI,KAAAhK,WACA4xD,EAAA5xD,UAAAiC,YAAA2vD,EAEAA,EAzBA,CA0BE5nD,EAAA,GC0Ca8nD,EApEf,SAAAF,GACA,SAAAG,EAAAn4D,EAAA0V,EAAA0iD,EAAAC,EAAAJ,GAEAD,EAAAx/D,KAAA2M,KAAAnF,EAAA0V,EAAAuiD,GAQA9yD,KAAAmzD,cAAAF,EAOAjzD,KAAAozD,MAAA7iD,EAAA8iD,cAAAJ,GAOAjzD,KAAAtO,WAAA6e,EAAA+iD,uBAAAtzD,KAAAozD,OASApzD,KAAAuzD,cAAAv4D,IAAAk4D,KA8BA,OA1BAL,IAAAG,EAAAhwD,UAAA6vD,GACAG,EAAA/xD,UAAArN,OAAAqP,OAAA4vD,KAAA5xD,WACA+xD,EAAA/xD,UAAAiC,YAAA8vD,EAQAA,EAAA/xD,UAAA8L,eAAA,WACA8lD,EAAA5xD,UAAA8L,eAAA1Z,KAAA2M,MACAA,KAAAmzD,cAAApmD,kBASAimD,EAAA/xD,UAAA4L,gBAAA,WACAgmD,EAAA5xD,UAAA4L,gBAAAxZ,KAAA2M,MACAA,KAAAmzD,cAAAtmD,mBAGAmmD,EAhEA,CAiEEJ,GCvEFY,EAAA,oBAAAC,UACAA,UAAAC,UAAA3a,cAAA,GAMO4a,GAAA,IAAAH,EAAAz3D,QAAA,WAMA63D,GAAA,IAAAJ,EAAAz3D,QAAA,eAAAy3D,EAAAz3D,QAAA,SAMA83D,GAAA,IAAAL,EAAAz3D,QAAA,eAAAy3D,EAAAz3D,QAAA,QAMA+3D,GAAA,IAAAN,EAAAz3D,QAAA,aAUAg4D,EAAA/hB,OAAAgiB,kBAAA,EAOAC,EAAA,WACP,IAAAC,GAAA,EACA,IACAA,IAAA7sD,SAAAC,cAAA,UAAAG,WAAA,MAAA0sD,YACG,MAAAtqD,IAGH,OAAAqqD,EAPO,GA0BAE,GATAX,UASA,iBAAAzhB,QAQAqiB,EAAA,iBAAAriB,OAQAsiB,IAAAb,UAAA,0BC/EQc,EAAA,CAQfC,YAAA,cAOA97D,MAAS6nC,EAAA,EAAS7nC,MAOlBC,SAAY4nC,EAAA,EAAS5nC,SAOrB87D,YAAA,cAQAC,YAAA,cAEAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBC7BeC,EApBf,SAAAlC,GACA,SAAAmC,EAAAt6D,EAAA0V,EAAA6kD,EAAAlC,EAAAJ,GAEAE,EAAA3/D,KAAA2M,KAAAnF,EAAA0V,EAAA6kD,EAAAjC,cAAAD,EAAAJ,GAMA9yD,KAAAo1D,eAQA,OAJApC,IAAAmC,EAAAnyD,UAAAgwD,GACAmC,EAAAl0D,UAAArN,OAAAqP,OAAA+vD,KAAA/xD,WACAk0D,EAAAl0D,UAAAiC,YAAAiyD,EAEAA,EAjBA,CAkBEpC,qBCfasC,EAAA,CACfX,YAAA,cACAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBCZIK,EAAW,SAAAC,EAAAC,GAKfx1D,KAAAu1D,aAOAv1D,KAAAy1D,SAAAD,GAOAF,EAAWr0D,UAAAy0D,UAAA,WACX,OAAA9hE,OAAA0H,KAAA0E,KAAAy1D,WAQAH,EAAWr0D,UAAA00D,mBAAA,SAAA/pD,GACX,OAAA5L,KAAAy1D,SAAA7pD,IAGe,IAAAgqD,EAAA,ECIRC,EAAA,EAMAC,EAAA,QAgBP,SAAAC,EAAAC,GACA,IAAAh2D,KAAAi2D,2BAAAD,GAAA,CAGAH,EAAAlnD,aAAA3O,KAAAk2D,YACAl2D,KAAAm2D,OAAAH,GAEA,IAAAnsD,EAAAusD,EAAAJ,EAAAh2D,KAAAu1D,YACAv1D,KAAAk2D,WAAAL,EAAAlnD,YAAAqnD,EACAh2D,KAAAu1D,WAAAc,KAAAxsD,EAAAmsD,IAUA,SAAAM,EAAAN,GACA,IAAAh2D,KAAAi2D,2BAAAD,GAAA,CACA,IAAAnsD,EAAAusD,EAAAJ,EAAAh2D,KAAAu1D,YACAv1D,KAAAu1D,WAAAgB,KAAA1sD,EAAAmsD,IAUA,SAAAQ,EAAAR,GACA,IAAAh2D,KAAAi2D,2BAAAD,GAAA,CACA,IAAA/5B,EAAAj8B,KAAAk2D,WAAAL,EAAAlnD,YAEA,GAAAstB,KAAAw6B,SAAAT,EAAAS,OAAA,CACA,IAAA5sD,EAAAusD,EAAAJ,EAAAh2D,KAAAu1D,YACAv1D,KAAAu1D,WAAAmB,GAAA7sD,EAAAmsD,GACAh2D,KAAA22D,iBAWA,SAAAC,EAAAZ,GACA,IAAAh2D,KAAAi2D,2BAAAD,GAAA,CACA,IAAAnsD,EAAAusD,EAAAJ,EAAAh2D,KAAAu1D,YACAv1D,KAAAu1D,WAAAsB,UAAAhtD,EAAAmsD,IAUA,SAAAc,EAAAd,GACA,IAAAh2D,KAAAi2D,2BAAAD,GAAA,CACA,IAAAnsD,EAAAusD,EAAAJ,EAAAh2D,KAAAu1D,YACAv1D,KAAAu1D,WAAAwB,SAAAltD,EAAAmsD,IAsGO,SAAAI,EAAAJ,EAAAT,GACP,IAAA1rD,EAAA0rD,EAAAyB,WAAAhB,KAGAiB,EAAAptD,EAAAkD,eAUA,OATAlD,EAAAkD,eAAA,WACAipD,EAAAjpD,iBACAkqD,KAGAptD,EAAAqtD,UAAArB,EACAhsD,EAAAstD,WAAA,EACAttD,EAAAutD,YAAAtB,EAEAjsD,EAIe,IAAAwtD,EAnHf,SAAAC,GACA,SAAAC,EAAAhC,GACA,IAAAC,EAAA,CACAO,YACAO,YACAE,UACAI,YACAE,YAEAQ,EAAAjkE,KAAA2M,KAAAu1D,EAAAC,GAMAx1D,KAAAk2D,WAAAX,EAAAW,WAMAl2D,KAAAw3D,YAAA,GAgEA,OA7DAF,IAAAC,EAAAv0D,UAAAs0D,GACAC,EAAAt2D,UAAArN,OAAAqP,OAAAq0D,KAAAr2D,WACAs2D,EAAAt2D,UAAAiC,YAAAq0D,EA0BAA,EAAAt2D,UAAAg1D,2BAAA,SAAAD,GAIA,IAHA,IAAAyB,EAAAz3D,KAAAw3D,YACAlmE,EAAA0kE,EAAA0B,QACAnmE,EAAAykE,EAAA2B,QACA3mE,EAAA,EAAAgH,EAAAy/D,EAAAvmE,OAAAiG,OAAA,EAAiDnG,EAAAgH,IAAAb,EAAAsgE,EAAAzmE,IAAuBA,IAAA,CAExE,IAAAQ,EAAAuB,KAAAyE,IAAAlG,EAAA6F,EAAA,IACA1F,EAAAsB,KAAAyE,IAAAjG,EAAA4F,EAAA,IACA,GAAA3F,GA3IA,IA2IAC,GA3IA,GA4IA,SAGA,UAQA8lE,EAAAt2D,UAAAk1D,OAAA,SAAAH,GACA,IAAAnsD,EAAAusD,EAAAJ,EAAAh2D,KAAAu1D,YACAv1D,KAAAu1D,WAAAY,OAAAtsD,EAAAmsD,GACAh2D,KAAA22D,gBAMAY,EAAAt2D,UAAA01D,aAAA,kBACA32D,KAAAk2D,WAAAL,EAAAlnD,aAGA4oD,EArFA,CAsFE3B,GCnLFgC,EAAA,CACA,GACA,cACA,QACA,MACA,SASA,SAAAC,EAAA7B,GACAh2D,KAAAk2D,WAAAF,EAAAkB,UAAAvoD,YAAAqnD,EACA,IAAAnsD,EAAA7J,KAAA83D,cAAA9B,GACAh2D,KAAAu1D,WAAAc,KAAAxsD,EAAAmsD,GASA,SAAA+B,EAAA/B,GACA,IAAAnsD,EAAA7J,KAAA83D,cAAA9B,GACAh2D,KAAAu1D,WAAAgB,KAAA1sD,EAAAmsD,GASA,SAAAgC,EAAAhC,GACA,IAAAnsD,EAAA7J,KAAA83D,cAAA9B,GACAh2D,KAAAu1D,WAAAmB,GAAA7sD,EAAAmsD,GACAh2D,KAAAi4D,QAAAjC,EAAAkB,WASA,SAAAgB,EAAAlC,GACA,IAAAnsD,EAAA7J,KAAA83D,cAAA9B,GACAh2D,KAAAu1D,WAAAwB,SAAAltD,EAAAmsD,GASA,SAAAmC,EAAAnC,GACA,IAAAnsD,EAAA7J,KAAA83D,cAAA9B,GACAh2D,KAAAu1D,WAAAsB,UAAAhtD,EAAAmsD,GASA,SAAAoC,EAAApC,GACA,IAAAnsD,EAAA7J,KAAA83D,cAAA9B,GACAh2D,KAAAu1D,WAAAY,OAAAtsD,EAAAmsD,GACAh2D,KAAAi4D,QAAAjC,EAAAkB,WASA,SAAAmB,EAAArC,GACA,IAAAnsD,EAAA7J,KAAAu1D,WAAA+C,UAAA,qBAAAtC,KACAh2D,KAAAu1D,WAAA1pD,cAAAhC,GASA,SAAA0uD,EAAAvC,GACA,IAAAnsD,EAAA7J,KAAAu1D,WAAA+C,UAAA,oBAAAtC,KACAh2D,KAAAu1D,WAAA1pD,cAAAhC,GAGA,IAuDe2uD,EAvDf,SAAAlB,GACA,SAAAmB,EAAAlD,GACA,IAAAC,EAAA,CACAkD,cAAAb,EACAc,cAAAZ,EACAa,YAAAZ,EACAa,aAAAX,EACAY,cAAAX,EACAY,gBAAAX,EACAY,oBAAAT,EACAU,qBAAAZ,GAEAf,EAAAjkE,KAAA2M,KAAAu1D,EAAAC,GAMAx1D,KAAAk2D,WAAAX,EAAAW,WAkCA,OA/BAoB,IAAAmB,EAAAz1D,UAAAs0D,GACAmB,EAAAx3D,UAAArN,OAAAqP,OAAAq0D,KAAAr2D,WACAw3D,EAAAx3D,UAAAiC,YAAAu1D,EAUAA,EAAAx3D,UAAA62D,cAAA,SAAA9B,GAEA,IAAAnsD,EAAAmsD,EAMA,MALA,iBAAAA,EAAAoB,eACAvtD,EAAA7J,KAAAu1D,WAAAyB,WAAAhB,MACAoB,YAAAQ,EAAA5B,EAAAoB,cAGAvtD,GAOA4uD,EAAAx3D,UAAAg3D,QAAA,SAAAf,UACAl3D,KAAAk2D,WAAAgB,EAAAvoD,aAGA8pD,EApDA,CAqDE7C,GCtJF,SAAAsD,EAAAlD,GACAh2D,KAAAu1D,WAAA4D,gBAAAnD,GASA,SAAAoD,EAAApD,GACAh2D,KAAAu1D,WAAA4D,gBAAAnD,GASA,SAAAqD,EAAArD,GACAh2D,KAAAu1D,WAAA4D,gBAAAnD,GASA,SAAAsD,EAAAtD,GACAh2D,KAAAu1D,WAAA4D,gBAAAnD,GASA,SAAAuD,GAAAvD,GACAh2D,KAAAu1D,WAAA4D,gBAAAnD,GASA,SAAAwD,GAAAxD,GACAh2D,KAAAu1D,WAAA4D,gBAAAnD,GASA,SAAAyD,GAAAzD,GACAh2D,KAAAu1D,WAAA4D,gBAAAnD,GASA,SAAA0D,GAAA1D,GACAh2D,KAAAu1D,WAAA4D,gBAAAnD,GAGA,IAsBe2D,GAtBf,SAAArC,GACA,SAAAsC,EAAArE,GACA,IAAAC,EAAA,CACAqE,YAAAX,EACAY,YAAAV,EACAW,UAAAV,EACAW,WAAAV,EACAW,YAAAV,GACAW,cAAAV,GACAW,kBAAAT,GACAU,mBAAAX,IAEAnC,EAAAjkE,KAAA2M,KAAAu1D,EAAAC,GAOA,OAJA8B,IAAAsC,EAAA52D,UAAAs0D,GACAsC,EAAA34D,UAAArN,OAAAqP,OAAAq0D,KAAAr2D,WACA24D,EAAA34D,UAAAiC,YAAA02D,EAEAA,EAnBA,CAoBEhE,GC/FFyE,IAAA,EAGAC,GAAA,SAAAC,GACA,SAAAD,EAAAz/D,EAAAs4D,EAAAqH,GACAD,EAAAlnE,KAAA2M,KAAAnF,GAMAmF,KAAAmzD,gBAEA,IAAAsH,EAAAD,GAAA,GAKAx6D,KAAA06D,QA+IA,SAAAD,GAsBA,IAAAC,EACA,GAAAD,EAAAC,SAAAL,GACAK,EAAAD,EAAAC,aAEA,OAAAD,EAAAE,OACA,OAAAD,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,QAAAA,EAAA,EAGA,OAAAA,EAhLAE,CAAAH,GAKAz6D,KAAA66D,SAoLA,SAAAJ,EAAAC,GAGA,IAAAG,EAAA,EAEAA,EADAJ,EAAAI,SACAJ,EAAAI,SAEAH,EAAA,KAEA,OAAAG,EA7LAC,CAAAL,EAAAz6D,KAAA06D,SAOA16D,KAAA+6D,QAAA,YAAAN,KAAA,QAKAz6D,KAAAg7D,WAAA,eAAAP,KAAA,WAKAz6D,KAAAi7D,KAAA,SAAAR,IAAA,UAKAz6D,KAAAk7D,OAAA,WAAAT,IAAA,YAKAz6D,KAAAm7D,QAAA,YAAAV,IAAA,UAKAz6D,KAAAo7D,QAAA,YAAAX,IAAA,UAKAz6D,KAAA03D,QAAA,YAAA+C,IAAA,UAKAz6D,KAAA23D,QAAA,YAAA8C,IAAA,UAKAz6D,KAAAq7D,QAAA,YAAAZ,KAAA,QAKAz6D,KAAAs7D,OAAA,WAAAb,KAAA,OAKAz6D,KAAAu7D,SAAA,aAAAd,KAAA,SAKAz6D,KAAAw7D,QAAA,YAAAf,KAAA,QAKAz6D,KAAAy2D,OAAA,WAAAgE,IAAA,SAKAz6D,KAAAy7D,cAAA,kBAAAhB,EACAA,EAAA,mBAQAz6D,KAAAk3D,UAAA,cAAAuD,IAAA,YAKAz6D,KAAAuH,MAAA,UAAAkzD,IAAA,QAKAz6D,KAAAwH,OAAA,WAAAizD,IAAA,SAKAz6D,KAAA07D,MAAA,UAAAjB,IAAA,QAKAz6D,KAAA27D,MAAA,UAAAlB,IAAA,QAKAz6D,KAAAo3D,YAAA,gBAAAqD,IAAA,eAKAz6D,KAAA47D,YAAA,gBAAAnB,IAAA,cAKAz6D,KAAAm3D,UAAA,cAAAsD,KAAA,UAGAtH,EAAApmD,iBACA/M,KAAA+M,eAAA,WACAomD,EAAApmD,mBASA,OAJAwtD,IAAAD,EAAAt3D,UAAAu3D,GACAD,EAAAr5D,UAAArN,OAAAqP,OAAAs3D,KAAAt5D,WACAq5D,EAAAr5D,UAAAiC,YAAAo3D,EAEAA,EAtJA,CAuJErvD,EAAA,IAiEF,WACA,IACA,IAAA4wD,EAAA,IAAAC,WAAA,SAAsCpB,QAAA,IACtCL,GAAA,IAAAwB,EAAAnB,QACG,MAAA7wD,KAJH,GASe,IAAAkyD,GAAA,aCrNf,SAAAC,GAAAhG,GACAh2D,KAAAi8D,eAAAjG,GACAh2D,KAAAk8D,iBAAAlG,EAAAmG,eAAA,IACAn8D,KAAAo8D,iBAAApG,GACAh2D,KAAAq8D,cACAr8D,KAAAs8D,gBAAAtG,EAAAh2D,KAAAu8D,WASA,SAAAC,GAAAxG,GACAh2D,KAAAs8D,gBAAAtG,EAAAh2D,KAAAy8D,cAUA,SAAAC,GAAA1G,GACAh2D,KAAAo8D,iBAAApG,GACAh2D,KAAAs8D,gBAAAtG,EAAAh2D,KAAA28D,QAUA,SAAAC,GAAA5G,GACAh2D,KAAAs8D,gBAAAtG,EAAAh2D,KAAA68D,YAIA,IAsUeC,GAtUA,SAAAxF,GACf,SAAAyF,EAAAxH,EAAAyH,GACA,IAAAxH,EAAA,CACAwG,cACAQ,aACAE,YACAE,gBAEAtF,EAAAjkE,KAAA2M,KAAAu1D,EAAAC,GAMAx1D,KAAAk2D,WAAAX,EAAAW,WAMAl2D,KAAAg9D,cAMAh9D,KAAAi9D,mBAAAjiE,EAMAgF,KAAAq8D,YAAA,EAMAr8D,KAAAk9D,SAQAl9D,KAAAm9D,cAAA,KAqRA,OAlRA7F,IAAAyF,EAAA/5D,UAAAs0D,GACAyF,EAAA97D,UAAArN,OAAAqP,OAAAq0D,KAAAr2D,WACA87D,EAAA97D,UAAAiC,YAAA65D,EAOAA,EAAA97D,UAAAm8D,gBAAA,SAAAC,GACA,OAAAr9D,KAAAi9D,gBAAAI,EAAAnoB,YAQA6nB,EAAA97D,UAAAi7D,iBAAA,SAAAmB,GACA,IAAAC,EAAA1pE,OAAA0H,KAAA0E,KAAAk2D,YAAAhlE,QACA,IAAAosE,GAAA,IAAAA,GAAuCzH,EAAUlnD,aAAA3O,KAAAk2D,cACjDl2D,KAAAi9D,cAAAI,EAAAnoB,WACAl1C,KAAAu9D,2BAQAR,EAAA97D,UAAAu8D,sBAAA,SAAAC,GACAA,EAAAtG,YACAn3D,KAAAi9D,mBAAAjiE,EACAgF,KAAA09D,qBAOAX,EAAA97D,UAAAy8D,iBAAA,WACA19D,KAAAk9D,SAAAj1B,WACAjoC,KAAA29D,wBAAAh5B,KAAA3kC,MAnJA,MA0JA+8D,EAAA97D,UAAA08D,wBAAA,WACA39D,KAAAq8D,YAAA,EACAr8D,KAAAk9D,cAAAliE,GAMA+hE,EAAA97D,UAAAs8D,uBAAA,gBACAviE,IAAAgF,KAAAk9D,UACAU,aAAA59D,KAAAk9D,WAUAH,EAAA97D,UAAA48D,gBAAA,SAAA5K,EAAAoK,GACA,IAAAxzD,EAAA7J,KAAAu1D,WAAAyB,WAAA/D,EAAAoK,GAyBA,OArBAxzD,EAAAqtD,UAAAmG,EAAAnoB,WAAA,EAGArrC,EAAAkxD,SAAA,EACAlxD,EAAAmxD,YAAA,EACAnxD,EAAAqxD,OAAAl7D,KAAAq8D,YACAxyD,EAAA4sD,OAAA,EACA5sD,EAAA6wD,QAAA,EACA7wD,EAAAtC,MAAA81D,EAAAS,SAAA,EACAj0D,EAAArC,OAAA61D,EAAAU,SAAA,EACAl0D,EAAAgxD,SAAAwC,EAAAW,OAAA,GACAn0D,EAAAstD,UAAAn3D,KAAAo9D,gBAAAC,GACAxzD,EAAAutD,YA1LgB,QA8LhBvtD,EAAA6tD,QAAA2F,EAAA3F,QACA7tD,EAAA8tD,QAAA0F,EAAA1F,QACA9tD,EAAAsxD,QAAAkC,EAAAlC,QACAtxD,EAAAuxD,QAAAiC,EAAAjC,QAEAvxD,GAQAkzD,EAAA97D,UAAAq7D,gBAAA,SAAAtG,EAAAiI,GACA,IAAAC,EAAAnmE,MAAAkJ,UAAA5P,MAAAgC,KAAA2iE,EAAAmG,gBACAmB,EAAAY,EAAAhtE,OACA,SAAA6b,IACAipD,EAAAjpD,iBAEA,QAAA/b,EAAA,EAAmBA,EAAAssE,IAAWtsE,EAAA,CAC9B,IAAAmtE,EAAAn+D,KAAA69D,gBAAA7H,EAAAkI,EAAAltE,IAEAmtE,EAAApxD,iBACAkxD,EAAA5qE,KAAA2M,KAAAg2D,EAAAmI,KAUApB,EAAA97D,UAAAm9D,WAAA,SAAAC,EAAAC,GAEA,IADA,IAAAtmE,EAAAqmE,EAAAntE,OACAF,EAAA,EAAmBA,EAAAgH,EAAOhH,IAAA,CAE1B,GADAqtE,EAAArtE,GACAkkD,aAAAopB,EACA,SAGA,UAcAvB,EAAA97D,UAAAg7D,eAAA,SAAAjG,GACA,IAAAqI,EAAArI,EAAAkI,QAGA5iE,EAAA1H,OAAA0H,KAAA0E,KAAAk2D,YACAoH,EAAAhiE,EAAApK,OACA,GAAAosE,GAAAe,EAAAntE,OAAA,CAEA,IADA,IAAA7C,EAAA,GACA2C,EAAA,EAAqBA,EAAAssE,IAAWtsE,EAAA,CAChC,IAAA8K,EAAA0U,OAAAlV,EAAAtK,IACAG,EAAA6O,KAAAk2D,WAAAp6D,GAIAA,GAAmB+5D,GAAU71D,KAAAo+D,WAAAC,EAAAviE,EAAA,IAC7BzN,EAAAwN,KAAA1K,EAAAotE,KAGA,QAAAzqD,EAAA,EAAuBA,EAAAzlB,EAAA6C,SAAgB4iB,EACvC9T,KAAA68D,WAAA7G,EAAA3nE,EAAAylB,MAUAipD,EAAA97D,UAAAs7D,UAAA,SAAAtJ,EAAAwK,GACAz9D,KAAAk2D,WAAAuH,EAAAvG,WAAA,CACAt8D,OAAA6iE,EAAA7iE,OACA2jE,IAAAd,EACAe,UAAAf,EAAA7iE,QAEAoF,KAAAu1D,WAAAkJ,KAAAhB,EAAAxK,GACAjzD,KAAAu1D,WAAAmJ,MAAAjB,EAAAxK,GACAjzD,KAAAu1D,WAAAc,KAAAoH,EAAAxK,IAQA8J,EAAA97D,UAAAw7D,aAAA,SAAAxJ,EAAAwK,GACA,IAAA/qD,EAAA+qD,EACAU,EAAAn+D,KAAAk2D,WAAAxjD,EAAAwkD,WAEA,GAAAiH,EAAA,CAGA,IAAAQ,EAAAR,EAAAI,IACAC,EAAAL,EAAAK,UACAx+D,KAAAu1D,WAAAgB,KAAA7jD,EAAAugD,GACA0L,GAAAH,IAAA9rD,EAAA9X,SACA+jE,EAAAlD,cAAA/oD,EAAA9X,OACwB,EAAA6gE,cAAA+C,EAExBG,EAAA/jE,OAAA4jE,EACA9rD,EAAA9X,QACAoF,KAAAu1D,WAAAwB,SAAA4H,EAAA1L,GACAjzD,KAAAu1D,WAAAsB,UAAAnkD,EAAAugD,KAG0B,EAAAr4D,OAAA4jE,EACA,EAAA/C,cAAA,KAC1Bz7D,KAAA68D,WAAA5J,EAAAvgD,KAGAyrD,EAAAI,IAAA7rD,EACAyrD,EAAAK,UAAA9rD,EAAA9X,SAQAmiE,EAAA97D,UAAA07D,OAAA,SAAA1J,EAAAwK,GACAz9D,KAAAu1D,WAAAmB,GAAA+G,EAAAxK,GACAjzD,KAAAu1D,WAAAgJ,IAAAd,EAAAxK,GACAjzD,KAAAu1D,WAAAqJ,MAAAnB,EAAAxK,GACAjzD,KAAA6+D,gBAAApB,IAQAV,EAAA97D,UAAA47D,WAAA,SAAA5J,EAAAwK,GACAz9D,KAAAu1D,WAAAY,OAAAsH,EAAAxK,GACAjzD,KAAAu1D,WAAAgJ,IAAAd,EAAAxK,GACAjzD,KAAAu1D,WAAAqJ,MAAAnB,EAAAxK,GACAjzD,KAAA6+D,gBAAApB,IAOAV,EAAA97D,UAAA49D,gBAAA,SAAApB,UACAz9D,KAAAk2D,WAAAuH,EAAAvG,WACAl3D,KAAAw9D,sBAAAC,IASAV,EAAA97D,UAAAm7D,iBAAA,SAAApG,GACA,IAAAyB,EAAAz3D,KAAAg9D,YAAAxF,YACArgE,EAAA6+D,EAAAmG,eAAA,GAEA,GAAAn8D,KAAAo9D,gBAAAjmE,GAAA,CAEA,IAAA2nE,EAAA,CAAA3nE,EAAAugE,QAAAvgE,EAAAwgE,SACAF,EAAA57D,KAAAijE,GAEA72B,WAAA,WAEQr0C,OAAAskB,GAAA,EAAAtkB,CAAM6jE,EAAAqH,IACP9+D,KAAAm9D,iBAIPJ,EAnUe,CAoUbnH,GCrXFmJ,GAAA,CAEA,eACA,kBACA,cACA,gBACA,cACA,cACA,cACA,cACA,eACA,cACA,gBACA,eACA,aACA,uBAEA,cAEA,gBACA,YACA,aACA,eACA,YACA,YACA,mBACA,kBACA,iBAEA,YACA,gBACA,uBACA,aAkVeC,GA9UQ,SAAAltC,GACvB,SAAAmtC,EAAAzmB,GACA1mB,EAAAz+B,KAAA2M,MAOAA,KAAAk/D,SAAA1mB,EAMAx4C,KAAAk2D,WAAA,GAMAl2D,KAAAm/D,UAAA,GAMAn/D,KAAAo/D,iBAAA,GAEAp/D,KAAAq/D,kBA8SA,OA3SAvtC,IAAAmtC,EAAAj8D,UAAA8uB,GACAmtC,EAAAh+D,UAAArN,OAAAqP,OAAA6uB,KAAA7wB,WACAg+D,EAAAh+D,UAAAiC,YAAA+7D,EAMAA,EAAAh+D,UAAAo+D,gBAAA,WACA,GAAQhL,EACRr0D,KAAAs/D,eAAA,aAAwC3F,GAAY35D,YAC/C,GAAUs0D,EACft0D,KAAAs/D,eAAA,SAAoC9G,EAAQx4D,WACvC,CACL,IAAAg9D,EAAA,IAA4B3F,EAAWr3D,MACvCA,KAAAs/D,eAAA,QAAAtC,GAEU5I,GACVp0D,KAAAs/D,eAAA,YAAyCxC,GAAW98D,KAAAg9D,IAKpDh9D,KAAAu/D,aASAN,EAAAh+D,UAAAq+D,eAAA,SAAAt+C,EAAAvkB,GACA,IAAAwjD,EAAAxjD,EACA+iE,EAAAvf,EAAAyV,YAEA8J,IACAA,EAAA15D,QAAA,SAAA+D,GACA,IAAA41D,EAAAxf,EAAA0V,mBAAA9rD,GAEA41D,IACAz/D,KAAAm/D,UAAAt1D,GAAA41D,EAAA96B,KAAAsb,KAEOtb,KAAA3kC,OACPA,KAAAo/D,iBAAAvjE,KAAAokD,KAQAgf,EAAAh+D,UAAAs+D,UAAA,WAEA,IADA,IAAAvnE,EAAAgI,KAAAo/D,iBAAAluE,OACAF,EAAA,EAAmBA,EAAAgH,EAAOhH,IAAA,CAC1B,IAAA0uE,EAAA1/D,KAAAo/D,iBAAApuE,GACAgP,KAAA2/D,WAAAD,EAAAhK,eAQAuJ,EAAAh+D,UAAA2+D,YAAA,WAEA,IADA,IAAA5nE,EAAAgI,KAAAo/D,iBAAAluE,OACAF,EAAA,EAAmBA,EAAAgH,EAAOhH,IAAA,CAC1B,IAAA0uE,EAAA1/D,KAAAo/D,iBAAApuE,GACAgP,KAAA6/D,cAAAH,EAAAhK,eASAuJ,EAAAh+D,UAAA6+D,cAAA,SAAA9J,GACA,IAAAn7D,EAAAm7D,EAAAn7D,KACA4kE,EAAAz/D,KAAAm/D,UAAAtkE,GACA4kE,GACAA,EAAAzJ,IASAiJ,EAAAh+D,UAAA0+D,WAAA,SAAAn9B,GACAA,EAAA18B,QAAA,SAAAi6D,GACMnsE,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAk/D,SAAAa,EAAA//D,KAAA8/D,cAAA9/D,OACP2kC,KAAA3kC,QAQLi/D,EAAAh+D,UAAA4+D,cAAA,SAAAr9B,GACAA,EAAA18B,QAAA,SAAA+D,GACMjW,OAAAosE,EAAA,EAAApsE,CAAQoM,KAAAk/D,SAAAr1D,EAAA7J,KAAA8/D,cAAA9/D,OACT2kC,KAAA3kC,QAYLi/D,EAAAh+D,UAAA+1D,WAAA,SAAAtkD,EAAAsjD,GAEA,IADA,IAAAiK,EAAA,GACAjvE,EAAA,EAAAC,EAAA8tE,GAAA7tE,OAA4CF,EAAAC,EAAQD,IAAA,CACpD,IAAAirC,EAAA8iC,GAAA/tE,GAAA,GACAivE,EAAAhkC,GAAAvpB,EAAAupB,IAAA+5B,EAAA/5B,IAAA8iC,GAAA/tE,GAAA,GAGA,OAAAivE,GAWAhB,EAAAh+D,UAAAo1D,KAAA,SAAAt4D,EAAA2U,GACA1S,KAAAkgE,UAAmB7K,EAAgBV,YAAA52D,EAAA2U,IAQnCusD,EAAAh+D,UAAAs1D,KAAA,SAAAx4D,EAAA2U,GACA1S,KAAAkgE,UAAmB7K,EAAgBX,YAAA32D,EAAA2U,IAQnCusD,EAAAh+D,UAAAy1D,GAAA,SAAA34D,EAAA2U,GACA1S,KAAAkgE,UAAmB7K,EAAgBT,UAAA72D,EAAA2U,IAQnCusD,EAAAh+D,UAAAy9D,MAAA,SAAA3gE,EAAA2U,GACA3U,EAAAg9D,SAAA,EACA/6D,KAAAkgE,UAAmB7K,EAAgBN,aAAAh3D,EAAA2U,IAQnCusD,EAAAh+D,UAAA29D,MAAA,SAAA7gE,EAAA2U,GACA3U,EAAAg9D,SAAA,EACA/6D,KAAAkgE,UAAmB7K,EAAgBL,aAAAj3D,EAAA2U,IAQnCusD,EAAAh+D,UAAAw9D,KAAA,SAAA1gE,EAAA2U,GACA3U,EAAAg9D,SAAA,EACA/6D,KAAAkgE,UAAmB7K,EAAgBR,YAAA92D,EAAA2U,IAQnCusD,EAAAh+D,UAAAs9D,IAAA,SAAAxgE,EAAA2U,GACA3U,EAAAg9D,SAAA,EACA/6D,KAAAkgE,UAAmB7K,EAAgBP,WAAA/2D,EAAA2U,IAQnCusD,EAAAh+D,UAAAk1D,OAAA,SAAAp4D,EAAA2U,GACA1S,KAAAkgE,UAAmB7K,EAAgBJ,cAAAl3D,EAAA2U,IAQnCusD,EAAAh+D,UAAA81D,SAAA,SAAAh5D,EAAA2U,GACA1S,KAAAu+D,IAAAxgE,EAAA2U,GACA1S,KAAAmgE,UAAApiE,EAAAnD,OAAAmD,EAAA09D,gBACAz7D,KAAA4+D,MAAA7gE,EAAA2U,IASAusD,EAAAh+D,UAAA41D,UAAA,SAAA94D,EAAA2U,GACA1S,KAAAy+D,KAAA1gE,EAAA2U,GACA1S,KAAAmgE,UAAApiE,EAAAnD,OAAAmD,EAAA09D,gBACAz7D,KAAA0+D,MAAA3gE,EAAA2U,IAWAusD,EAAAh+D,UAAAk/D,UAAA,SAAAhoB,EAAAioB,GACA,SAAAjoB,IAAAioB,IAGAjoB,EAAAhgC,SAAAioD,IAaAnB,EAAAh+D,UAAAq3D,UAAA,SAAA+H,EAAAtiE,EAAA2U,GACA,WAAeqpD,GAAYsE,EAAA3tD,EAAA3U,IAS3BkhE,EAAAh+D,UAAAi/D,UAAA,SAAAG,EAAAtiE,EAAA2U,GACA,IAAA7I,EAAA7J,KAAAs4D,UAAA+H,EAAAtiE,EAAA2U,GACA1S,KAAA6L,cAAAhC,IAQAo1D,EAAAh+D,UAAAk4D,gBAAA,SAAAzmD,GACA,IAAA7I,EAAA7J,KAAAs4D,UAAA5lD,EAAA7X,KAAA6X,KACA1S,KAAA6L,cAAAhC,IAUAo1D,EAAAh+D,UAAAq/D,eAAA,SAAA10D,EAAA8G,GAGA,OAFA1S,KAAAs4D,UACA1sD,EAAiBwqD,EAAiB1jD,EAAA1S,MAAA0S,IAOlCusD,EAAAh+D,UAAA4R,gBAAA,WACA7S,KAAA4/D,cACA9tC,EAAA7wB,UAAA4R,gBAAAxf,KAAA2M,OAGAi/D,EA3UuB,CA4UrB5sD,EAAA,GC5FakuD,GA1TW,SAAAzuC,GAC1B,SAAA0uC,EAAAjwD,EAAAkwD,GAEA3uC,EAAAz+B,KAAA2M,MAOAA,KAAA0gE,KAAAnwD,EAMAvQ,KAAA2gE,gBAMA3gE,KAAA4gE,WAAA,EAMA5gE,KAAA6gE,kBAAA,GAMA7gE,KAAA8gE,eAAAL,EACAA,EAAsB1M,EAAqBA,EAQ3C/zD,KAAA+gE,MAAA,KAEA,IAAAvoB,EAAAx4C,KAAA0gE,KAAAM,cAMAhhE,KAAAihE,gBAAA,EAMAjhE,KAAAkhE,gBAAA,GASAlhE,KAAAmhE,qBAAA,IAAoCnC,GAAmBxmB,GASvDx4C,KAAAohE,6BAAA,KAMAphE,KAAAqhE,wBAAmCztE,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAmhE,qBACnC9L,EAAgBV,YACtB30D,KAAAshE,mBAAAthE,MAMAA,KAAAuhE,oBAA+B3tE,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAmhE,qBAC/B9L,EAAgBX,YACtB10D,KAAAwhE,YAAAxhE,MA2NA,OAvNA8xB,IAAA0uC,EAAAx9D,UAAA8uB,GACA0uC,EAAAv/D,UAAArN,OAAAqP,OAAA6uB,KAAA7wB,WACAu/D,EAAAv/D,UAAAiC,YAAAs9D,EAOAA,EAAAv/D,UAAAwgE,cAAA,SAAArM,GACA,IAAAsM,EAAA,IAAuBxM,EACjBX,EAAmB77D,MAAAsH,KAAA0gE,KAAAtL,GACzBp1D,KAAA6L,cAAA61D,QACA1mE,IAAAgF,KAAA2gE,iBAEA/C,aAAA59D,KAAA2gE,iBACA3gE,KAAA2gE,qBAAA3lE,EACA0mE,EAAA,IAAqBxM,EACbX,EAAmB57D,SAAAqH,KAAA0gE,KAAAtL,GAC3Bp1D,KAAA6L,cAAA61D,IAGA1hE,KAAA2gE,gBAAA14B,WAAA,WACAjoC,KAAA2gE,qBAAA3lE,EACA,IAAA0mE,EAAA,IAA2BxM,EACjBX,EAAmBC,YAAAx0D,KAAA0gE,KAAAtL,GAC7Bp1D,KAAA6L,cAAA61D,IACO/8B,KAAA3kC,MAAA,MAWPwgE,EAAAv/D,UAAA0gE,sBAAA,SAAAvM,GACA,IAAA1iD,EAAA0iD,EAEA1iD,EAAA7X,MAAsB05D,EAAmBK,WACzCliD,EAAA7X,MAAsB05D,EAAmBU,qBACzCj1D,KAAAkhE,gBAAAxuD,EAAAwkD,WACKxkD,EAAA7X,MAAwB05D,EAAmBI,cAChD30D,KAAAkhE,gBAAAxuD,EAAAwkD,YAAA,GAEAl3D,KAAAihE,gBAAArtE,OAAA0H,KAAA0E,KAAAkhE,iBAAAhwE,QAQAsvE,EAAAv/D,UAAA2gE,iBAAA,SAAAxM,GACAp1D,KAAA2hE,sBAAAvM,GACA,IAAAsM,EAAA,IAAuBxM,EACjBX,EAAmBK,UAAA50D,KAAA0gE,KAAAtL,GACzBp1D,KAAA6L,cAAA61D,GAQAA,EAAA50D,oBAAA9M,KAAA4gE,YAAA5gE,KAAA6hE,qBAAAzM,IACAp1D,KAAAyhE,cAAAzhE,KAAA+gE,OAGA,IAAA/gE,KAAAihE,kBACAjhE,KAAA6gE,kBAAA/6D,QAAqCk6D,EAAA,GACrChgE,KAAA6gE,kBAAA3vE,OAAA,EACA8O,KAAA4gE,WAAA,EACA5gE,KAAA+gE,MAAA,KACA/gE,KAAAohE,6BAAAriD,UACA/e,KAAAohE,6BAAA,OAUAZ,EAAAv/D,UAAA4gE,qBAAA,SAAAzM,GACA,WAAAA,EAAAqB,QAQA+J,EAAAv/D,UAAAqgE,mBAAA,SAAAlM,GACAp1D,KAAA2hE,sBAAAvM,GACA,IAAAsM,EAAA,IAAuBxM,EACjBX,EAAmBI,YAAA30D,KAAA0gE,KAAAtL,GACzBp1D,KAAA6L,cAAA61D,GAEA1hE,KAAA+gE,MAAA3L,EAEA,IAAAp1D,KAAA6gE,kBAAA3vE,SAKA8O,KAAAohE,6BACA,IAAcpC,GAAmB33D,UAEjCrH,KAAA6gE,kBAAAhlE,KACQjI,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAohE,6BACJ7M,EAAmBG,YAC7B10D,KAAA8hE,mBAAA9hE,MACQpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAohE,6BACJ7M,EAAmBK,UAC7B50D,KAAA4hE,iBAAA5hE,MAcQpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAmhE,qBACJ5M,EAAmBU,cAC7Bj1D,KAAA4hE,iBAAA5hE,SAUAwgE,EAAAv/D,UAAA6gE,mBAAA,SAAA1M,GAIA,GAAAp1D,KAAA+hE,UAAA3M,GAAA,CACAp1D,KAAA4gE,WAAA,EACA,IAAAc,EAAA,IAAyBxM,EACjBX,EAAmBE,YAAAz0D,KAAA0gE,KAAAtL,EAC3Bp1D,KAAA4gE,WACA5gE,KAAA6L,cAAA61D,GAOAtM,EAAAroD,kBAUAyzD,EAAAv/D,UAAAugE,YAAA,SAAApM,GACA,IAAA7B,KAAAvzD,KAAA+gE,QAAA/gE,KAAA+hE,UAAA3M,IACAp1D,KAAA6L,cAAA,IAA2BqpD,EAC3BE,EAAAv6D,KAAAmF,KAAA0gE,KAAAtL,EAAA7B,KASAiN,EAAAv/D,UAAA8gE,UAAA,SAAA3M,GACA,OAAAp1D,KAAA4gE,WACA7tE,KAAAyE,IAAA49D,EAAAsC,QAAA13D,KAAA+gE,MAAArJ,SAAA13D,KAAA8gE,gBACA/tE,KAAAyE,IAAA49D,EAAAuC,QAAA33D,KAAA+gE,MAAApJ,SAAA33D,KAAA8gE,gBAMAN,EAAAv/D,UAAA4R,gBAAA,WACA7S,KAAAuhE,sBACM3tE,OAAAosE,EAAA,EAAApsE,CAAaoM,KAAAuhE,qBACnBvhE,KAAAuhE,oBAAA,MAEAvhE,KAAAqhE,0BACMztE,OAAAosE,EAAA,EAAApsE,CAAaoM,KAAAqhE,yBACnBrhE,KAAAqhE,wBAAA,MAGArhE,KAAA6gE,kBAAA/6D,QAAmCk6D,EAAA,GACnChgE,KAAA6gE,kBAAA3vE,OAAA,EAEA8O,KAAAohE,+BACAphE,KAAAohE,6BAAAriD,UACA/e,KAAAohE,6BAAA,MAEAphE,KAAAmhE,uBACAnhE,KAAAmhE,qBAAApiD,UACA/e,KAAAmhE,qBAAA,MAEArvC,EAAA7wB,UAAA4R,gBAAAxf,KAAA2M,OAGAwgE,EAtT0B,CAuTxBnuD,EAAA,GC3Ta2vD,GAOf,aAPeA,GAcf,YAdeA,GAqBf,UCrBeC,GAAA,CACfC,WAAA,aACAC,KAAA,OACAC,OAAA,SACAC,KAAA,0DCcIC,GAAa,SAAAC,EAAAC,GAMjBxiE,KAAAyiE,kBAAAF,EAMAviE,KAAA0iE,aAAAF,EAMAxiE,KAAA2iE,UAAA,GAMA3iE,KAAA4iE,YAAA,GAMA5iE,KAAA6iE,gBAAA,IAOAP,GAAarhE,UAAA/E,MAAA,WACb8D,KAAA2iE,UAAAzxE,OAAA,EACA8O,KAAA4iE,YAAA1xE,OAAA,EACE0C,OAAA0C,GAAA,EAAA1C,CAAKoM,KAAA6iE,kBAQPP,GAAarhE,UAAA6hE,QAAA,WACb,IAAArqB,EAAAz4C,KAAA2iE,UACAI,EAAA/iE,KAAA4iE,YACApqB,EAAAC,EAAA,GACA,GAAAA,EAAAvnD,QACAunD,EAAAvnD,OAAA,EACA6xE,EAAA7xE,OAAA,IAEAunD,EAAA,GAAAA,EAAA9kC,MACAovD,EAAA,GAAAA,EAAApvD,MACA3T,KAAAgjE,QAAA,IAEA,IAAAC,EAAAjjE,KAAA0iE,aAAAlqB,GAEA,cADAx4C,KAAA6iE,gBAAAI,GACAzqB,GASA8pB,GAAarhE,UAAAiiE,QAAA,SAAA1qB,GACX5kD,OAAA2xB,GAAA,EAAA3xB,GAAMoM,KAAA0iE,aAAAlqB,KAAAx4C,KAAA6iE,iBACR,IACA,IAAAM,EAAAnjE,KAAAyiE,kBAAAjqB,GACA,OAAA2qB,GA1FO3wE,MA2FPwN,KAAA2iE,UAAA9mE,KAAA28C,GACAx4C,KAAA4iE,YAAA/mE,KAAAsnE,GACAnjE,KAAA6iE,gBAAA7iE,KAAA0iE,aAAAlqB,KAAA,EACAx4C,KAAAojE,UAAA,EAAApjE,KAAA2iE,UAAAzxE,OAAA,IACA,IASAoxE,GAAarhE,UAAAqxB,SAAA,WACb,OAAAtyB,KAAA2iE,UAAAzxE,QAUAoxE,GAAarhE,UAAAoiE,mBAAA,SAAA7kE,GACb,SAAAA,EAAA,GAUA8jE,GAAarhE,UAAAqiE,oBAAA,SAAA9kE,GACb,SAAAA,EAAA,GAUA8jE,GAAarhE,UAAAsiE,gBAAA,SAAA/kE,GACb,OAAAA,EAAA,MAQA8jE,GAAarhE,UAAAuiE,SAAA,WACb,IAAAxyE,EACA,IAAAA,GAAAgP,KAAA2iE,UAAAzxE,QAAA,KAA4CF,GAAA,EAAQA,IACpDgP,KAAAgjE,QAAAhyE,IAQAsxE,GAAarhE,UAAA3Q,QAAA,WACb,WAAA0P,KAAA2iE,UAAAzxE,QAQAoxE,GAAarhE,UAAAwiE,YAAA,SAAA3nE,GACb,OAAAA,KAAAkE,KAAA6iE,iBAQAP,GAAarhE,UAAAyiE,SAAA,SAAAlrB,GACb,OAAAx4C,KAAAyjE,YAAAzjE,KAAA0iE,aAAAlqB,KAQA8pB,GAAarhE,UAAA+hE,QAAA,SAAAxkE,GAQb,IAPA,IAAAi6C,EAAAz4C,KAAA2iE,UACAI,EAAA/iE,KAAA4iE,YACAtF,EAAA7kB,EAAAvnD,OACAsnD,EAAAC,EAAAj6C,GACA2kE,EAAAJ,EAAAvkE,GACAmlE,EAAAnlE,EAEAA,EAAA8+D,GAAA,IACA,IAAAsG,EAAA5jE,KAAAqjE,mBAAA7kE,GACAqlE,EAAA7jE,KAAAsjE,oBAAA9kE,GAEAslE,EAAAD,EAAAvG,GACAyF,EAAAc,GAAAd,EAAAa,GACAC,EAAAD,EAEAnrB,EAAAj6C,GAAAi6C,EAAAqrB,GACAf,EAAAvkE,GAAAukE,EAAAe,GACAtlE,EAAAslE,EAGArrB,EAAAj6C,GAAAg6C,EACAuqB,EAAAvkE,GAAA2kE,EACAnjE,KAAAojE,UAAAO,EAAAnlE,IASA8jE,GAAarhE,UAAAmiE,UAAA,SAAAO,EAAAnlE,GAMb,IALA,IAAAi6C,EAAAz4C,KAAA2iE,UACAI,EAAA/iE,KAAA4iE,YACApqB,EAAAC,EAAAj6C,GACA2kE,EAAAJ,EAAAvkE,GAEAA,EAAAmlE,GAAA,CACA,IAAAI,EAAA/jE,KAAAujE,gBAAA/kE,GACA,KAAAukE,EAAAgB,GAAAZ,GAKA,MAJA1qB,EAAAj6C,GAAAi6C,EAAAsrB,GACAhB,EAAAvkE,GAAAukE,EAAAgB,GACAvlE,EAAAulE,EAKAtrB,EAAAj6C,GAAAg6C,EACAuqB,EAAAvkE,GAAA2kE,GAOAb,GAAarhE,UAAA+iE,aAAA,WACb,IAKAxrB,EAAAxnD,EAAAmyE,EALAZ,EAAAviE,KAAAyiE,kBACAhqB,EAAAz4C,KAAA2iE,UACAI,EAAA/iE,KAAA4iE,YACApkE,EAAA,EACAnH,EAAAohD,EAAAvnD,OAEA,IAAAF,EAAA,EAAaA,EAAAqG,IAAOrG,GAEpBmyE,EAAAZ,EADA/pB,EAAAC,EAAAznD,MAxPOwB,WA2PPwN,KAAA6iE,gBAAA7iE,KAAA0iE,aAAAlqB,KAEAuqB,EAAAvkE,GAAA2kE,EACA1qB,EAAAj6C,KAAAg6C,GAGAC,EAAAvnD,OAAAsN,EACAukE,EAAA7xE,OAAAsN,EACAwB,KAAAwjE,YAIe,ICjJAS,GAlHF,SAAAC,GACb,SAAAC,EAAAC,EAAAC,GAEAH,EAAA7wE,KAKA2M,KAAA,SAAAw4C,GACA,OAAA4rB,EAAAruE,MAAA,KAAAyiD,IAMA,SAAAA,GACA,OAAuDA,EAAA,GAAAroC,WAOvDnQ,KAAAskE,oBAAAD,EAMArkE,KAAAukE,cAAA,EAMAvkE,KAAAwkE,kBAAA,GA2EA,OAvEAN,IAAAC,EAAAnhE,UAAAkhE,GACAC,EAAAljE,UAAArN,OAAAqP,OAAAihE,KAAAjjE,WACAkjE,EAAAljE,UAAAiC,YAAAihE,EAKAA,EAAAljE,UAAAiiE,QAAA,SAAA1qB,GACA,IAAAisB,EAAAP,EAAAjjE,UAAAiiE,QAAA7vE,KAAA2M,KAAAw4C,GACA,GAAAisB,EAAA,CACA,IAAAhkC,EAAA+X,EAAA,GACM5kD,OAAAosE,EAAA,EAAApsE,CAAM6sC,EAAOF,EAAA,EAAShoC,OAAAyH,KAAAitC,iBAAAjtC,MAE5B,OAAAykE,GAMAN,EAAAljE,UAAAyjE,gBAAA,WACA,OAAA1kE,KAAAukE,eAOAJ,EAAAljE,UAAAgsC,iBAAA,SAAAv6B,GACA,IAAA+tB,EAAsD/tB,EAAA,OACtDwhB,EAAAuM,EAAA3lB,WACA,GAAAoZ,IAAkBwM,GAAA,EAASp0B,QAAA4nB,IAAqBwM,GAAA,EAAS3nC,OACzDm7B,IAAkBwM,GAAA,EAASn0B,OAAA2nB,IAAoBwM,GAAA,EAASl0B,MAAA,CAClD5Y,OAAAosE,EAAA,EAAApsE,CAAQ6sC,EAAOF,EAAA,EAAShoC,OAAAyH,KAAAitC,iBAAAjtC,MAC9B,IAAA2kE,EAAAlkC,EAAAtwB,SACAw0D,KAAA3kE,KAAAwkE,2BACAxkE,KAAAwkE,kBAAAG,KACA3kE,KAAAukE,eAEAvkE,KAAAskE,wBAQAH,EAAAljE,UAAA2jE,cAAA,SAAAC,EAAAC,GAIA,IAHA,IAEA5wC,EAAAuM,EAAAkkC,EAFAI,EAAA,EACAC,GAAA,EAEAhlE,KAAAukE,cAAAM,GAAAE,EAAAD,GACA9kE,KAAAsyB,WAAA,GAEAqyC,GADAlkC,EAAoDzgC,KAAA8iE,UAAA,IACpD3yD,UACA+jB,EAAAuM,EAAA3lB,cACoB4lB,GAAA,EAASl0B,MAC7Bw4D,GAAA,EACO9wC,IAAoBwM,GAAA,EAASt0B,MAAAu4D,KAAA3kE,KAAAwkE,oBACpCxkE,KAAAwkE,kBAAAG,IAAA,IACA3kE,KAAAukE,gBACAQ,EACAtkC,EAAApD,QAGA,IAAA0nC,GAAAC,GAGAhlE,KAAAskE,uBAIAH,EA9Ga,CDmQE,0EE1OXc,GAAQ,CACZ36C,OAAA,UAyMe46C,GA7LD,SAAArrD,GACd,SAAAsrD,EAAA/oD,GAEA,IAAArc,EAAAqc,GAAA,GACAtC,EAA8ClmB,OAAA0C,GAAA,EAAL,CAAW,GAAGyJ,UACvD+Z,EAAA83B,OAEA,IAAAA,EAAA7xC,EAAA6xC,OAEA/3B,EAAAxmB,KAAA2M,KAAA8Z,GAMA9Z,KAAAolE,oBAAA,GAMAplE,KAAAqlE,cAAA,GAEIzxE,OAAAosE,EAAA,EAAApsE,CAAMoM,KACJpM,OAAAq2C,EAAA,EAAAr2C,CAAmBqxE,GAAQ36C,QACjCtqB,KAAAslE,qBAAAtlE,MAEA4xC,EACA75C,MAAAkG,QAAA2zC,GACAA,EAAA,IAAqBmgB,EAAUngB,EAAAvgD,QAAA,CAAkB6gE,QAAA,IAEzCt+D,OAAA2xB,GAAA,EAAA3xB,CAA2B,qBAAA0+D,SACnC,IAGA1gB,EAAA,IAAmBmgB,OAAU/2D,EAAA,CAAak3D,QAAA,IAG1ClyD,KAAAulE,UAAA3zB,GAmJA,OA/IA/3B,IAAAsrD,EAAAniE,UAAA6W,GACAsrD,EAAAlkE,UAAArN,OAAAqP,OAAA4W,KAAA5Y,WACAkkE,EAAAlkE,UAAAiC,YAAAiiE,EAKAA,EAAAlkE,UAAAukE,mBAAA,WACAxlE,KAAAwP,WAMA21D,EAAAlkE,UAAAqkE,qBAAA,WACAtlE,KAAAolE,oBAAAt/D,QAAqCk6D,EAAA,GACrChgE,KAAAolE,oBAAAl0E,OAAA,EAEA,IAAA0gD,EAAA5xC,KAAAylE,YAMA,QAAAvvC,KALAl2B,KAAAolE,oBAAAvpE,KACMjI,OAAAosE,EAAA,EAAApsE,CAAMg+C,EAAS6f,EAAmBC,IAAA1xD,KAAA0lE,iBAAA1lE,MAClCpM,OAAAosE,EAAA,EAAApsE,CAAMg+C,EAAS6f,EAAmBE,OAAA3xD,KAAA2lE,oBAAA3lE,OAGxCA,KAAAqlE,cACArlE,KAAAqlE,cAAAnvC,GAAApwB,QAAqCk6D,EAAA,GAEjCpsE,OAAA0C,GAAA,EAAA1C,CAAKoM,KAAAqlE,eAGT,IADA,IAAAO,EAAAh0B,EAAA0gB,WACAthE,EAAA,EAAAC,EAAA20E,EAAA10E,OAA4CF,EAAAC,EAAQD,IAAA,CACpD,IAAAmjC,EAAAyxC,EAAA50E,GACAgP,KAAAqlE,cAAyBzxE,OAAAk2C,EAAA,EAAAl2C,CAAMugC,IAAA,CACvBvgC,OAAAosE,EAAA,EAAApsE,CAAMugC,EAAQ0xC,GAAA,EAAe/5D,eAAA9L,KAAAwlE,mBAAAxlE,MAC7BpM,OAAAosE,EAAA,EAAApsE,CAAMugC,EAAQoM,EAAA,EAAShoC,OAAAyH,KAAAwlE,mBAAAxlE,OAI/BA,KAAAwP,WAOA21D,EAAAlkE,UAAAykE,iBAAA,SAAAI,GACA,IAAA3xC,EAAuD2xC,EAAA,QACvD9lE,KAAAqlE,cAAuBzxE,OAAAk2C,EAAA,EAAAl2C,CAAMugC,IAAA,CACvBvgC,OAAAosE,EAAA,EAAApsE,CAAMugC,EAAQ0xC,GAAA,EAAe/5D,eAAA9L,KAAAwlE,mBAAAxlE,MAC7BpM,OAAAosE,EAAA,EAAApsE,CAAMugC,EAAQoM,EAAA,EAAShoC,OAAAyH,KAAAwlE,mBAAAxlE,OAE7BA,KAAAwP,WAOA21D,EAAAlkE,UAAA0kE,oBAAA,SAAAG,GACA,IAAA3xC,EAAuD2xC,EAAA,QACvDhqE,EAAclI,OAAAk2C,EAAA,EAAAl2C,CAAMugC,GACpBn0B,KAAAqlE,cAAAvpE,GAAAgK,QAAoCk6D,EAAA,UACpChgE,KAAAqlE,cAAAvpE,GACAkE,KAAAwP,WAWA21D,EAAAlkE,UAAAwkE,UAAA,WACA,OACkFzlE,KAAAwL,IAAcy5D,GAAQ36C,SAYxG66C,EAAAlkE,UAAAskE,UAAA,SAAA3zB,GACA5xC,KAAA4I,IAAaq8D,GAAQ36C,OAAAsnB,IAMrBuzB,EAAAlkE,UAAAqZ,eAAA,SAAAC,GACA,IAAArC,OAAAld,IAAAuf,IAAA,GAIA,OAHAva,KAAAylE,YAAA3/D,QAAA,SAAAquB,GACAA,EAAA7Z,eAAApC,KAEAA,GAMAitD,EAAAlkE,UAAAuZ,oBAAA,SAAAC,GACA,IAAAC,OAAA1f,IAAAyf,IAAA,GAEA+/B,EAAA9/B,EAAAxpB,OAEA8O,KAAAylE,YAAA3/D,QAAA,SAAAquB,GACAA,EAAA3Z,oBAAAE,KAIA,IADA,IAAAqrD,EAAA/lE,KAAA2a,gBACA3pB,EAAAwpD,EAAAvpD,EAAAypB,EAAAxpB,OAAyCF,EAAAC,EAAQD,IAAA,CACjD,IAAAiqB,EAAAP,EAAA1pB,GACAiqB,EAAA+Y,SAAA+xC,EAAA/xC,QACA/Y,EAAAQ,QAAAR,EAAAQ,SAAAsqD,EAAAtqD,QACAR,EAAAU,cAAA5oB,KAAAC,IACAioB,EAAAU,cAAAoqD,EAAApqD,eACAV,EAAAS,cAAA3oB,KAAAE,IACAgoB,EAAAS,cAAAqqD,EAAArqD,oBACA1gB,IAAA+qE,EAAAh1E,cACAiK,IAAAigB,EAAAlqB,OACAkqB,EAAAlqB,OAA8B6C,OAAAoT,GAAA,EAAApT,CAAeqnB,EAAAlqB,OAAAg1E,EAAAh1E,QAE7CkqB,EAAAlqB,OAAAg1E,EAAAh1E,QAKA,OAAA2pB,GAMAyqD,EAAAlkE,UAAA4Z,eAAA,WACA,OAAW4uB,GAAA,EAAW/0B,OAGtBywD,EAzLc,CA0LZa,GAAA,uBCiqCa,IAAAC,GAlwCC,SAAA96D,GAChB,SAAA+6D,EAAAnmE,GAEAoL,EAAA9X,KAAA2M,MAEA,IAAAmmE,EAurCA,SAAApmE,GAKA,IAAAqmE,EAAA,UACAprE,IAAA+E,EAAAqmE,sBACAA,EAAA,iBAAArmE,EAAAqmE,oBACA/+D,SAAAg/D,eAAAtmE,EAAAqmE,qBACArmE,EAAAqmE,qBAMA,IAWAE,EAWAC,EAWAC,EAjCA3pE,EAAA,GAEA4pE,EAAA1mE,EAAA6xC,QAAyD,mBAAA7xC,EAAA,OAAA0lE,UAC/B1lE,EAAA,WAA2BmlE,GAAU,CAAEtzB,OAA8B7xC,EAAA,SAC/FlD,EAASolE,GAAWC,YAAAuE,EAEpB5pE,EAASolE,GAAWG,QAAAriE,EAAAnF,OAEpBiC,EAASolE,GAAWI,WAAArnE,IAAA+E,EAAAk7D,KACpBl7D,EAAAk7D,KAAA,IAAuBrZ,GAAA,OAGvB5mD,IAAA+E,EAAAumE,WACAvuE,MAAAkG,QAAA8B,EAAAumE,UACAA,EAAA,IAAqBvU,EAAUhyD,EAAAumE,SAAAj1E,UAEzBuC,OAAA2xB,GAAA,EAAA3xB,CAA2B,mBAAAmM,EAAA,SAAAuyD,SACjC,IACAgU,EAAuCvmE,EAAA,gBAKvC/E,IAAA+E,EAAAwmE,eACAxuE,MAAAkG,QAAA8B,EAAAwmE,cACAA,EAAA,IAAyBxU,EAAUhyD,EAAAwmE,aAAAl1E,UAE7BuC,OAAA2xB,GAAA,EAAA3xB,CAA2B,mBAAAmM,EAAA,aAAAuyD,SACjC,IACAiU,EAA2CxmE,EAAA,oBAK3C/E,IAAA+E,EAAAymE,SACAzuE,MAAAkG,QAAA8B,EAAAymE,UACAA,EAAA,IAAqBzU,EAAUhyD,EAAAymE,SAAAn1E,UAEzBuC,OAAA2xB,GAAA,EAAA3xB,CAA2B,mBAAAmM,EAAA,SAAAuyD,SACjC,IACAkU,EAAAzmE,EAAAymE,UAGAA,EAAA,IAAmBzU,EAGnB,OACAuU,WACAC,eACAH,sBACAI,WACA3pE,UAzvCA6pE,CAAA3mE,GAMAC,KAAA2mE,sBAAA3rE,IAAA+E,EAAA6mE,gBAAA7mE,EAAA6mE,gBAAA,GAMA5mE,KAAA6mE,8BACA7rE,IAAA+E,EAAA+mE,yBACA/mE,EAAA+mE,wBAMA9mE,KAAA+mE,gCACA/rE,IAAA+E,EAAAinE,2BACAjnE,EAAAinE,0BAMAhnE,KAAA2mC,iBAAA3rC,IAAA+E,EAAAguB,WACAhuB,EAAAguB,WAA2BgmC,EAM3B/zD,KAAAinE,mBAKAjnE,KAAAknE,gBAAA,WACAlnE,KAAAinE,wBAAAjsE,EACAgF,KAAAmnE,aAAA9zE,KAAA2M,KAAAskD,KAAAC,QACK5f,KAAA3kC,MAMLA,KAAAonE,4BAAuCxzE,OAAAyzE,GAAA,EAAAzzE,GAMvCoM,KAAAsnE,4BAAuC1zE,OAAAyzE,GAAA,EAAAzzE,GAMvCoM,KAAAunE,YAAA,EAMAvnE,KAAAwnE,YAAA,KAOAxnE,KAAAynE,gBAAA,KAMAznE,KAAA0nE,yBAAA,KAMA1nE,KAAA2nE,uBAAA,KAMA3nE,KAAA4nE,gCAAA,KAMA5nE,KAAA6nE,UAAAxgE,SAAAC,cAAA,OACAtH,KAAA6nE,UAAA/uB,UAAA,eAAgDsb,EAAK,gBACrDp0D,KAAA6nE,UAAAlyC,MAAAwyB,SAAA,WACAnoD,KAAA6nE,UAAAlyC,MAAAmyC,SAAA,SACA9nE,KAAA6nE,UAAAlyC,MAAApuB,MAAA,OACAvH,KAAA6nE,UAAAlyC,MAAAnuB,OAAA,OAEAxH,KAAA6nE,UAAAlyC,MAAAoyC,cAAA,OACA/nE,KAAA6nE,UAAAlyC,MAAAqyC,YAAA,OAMAhoE,KAAAioE,kBAAA5gE,SAAAC,cAAA,OACAtH,KAAAioE,kBAAAnvB,UAAA,sBACA94C,KAAA6nE,UAAA3oB,YAAAl/C,KAAAioE,mBAMAjoE,KAAAkoE,2BAAA7gE,SAAAC,cAAA,OACAtH,KAAAkoE,2BAAApvB,UAAA,gCAWA,IAVA,IAAAqvB,EAAA,CACM5nC,EAAA,EAAS7nC,MACT6nC,EAAA,EAAS5nC,SACT4nC,EAAA,EAASpnC,UACTonC,EAAA,EAAS7mC,WACT6mC,EAAA,EAAS/mC,cACT+6D,EAAmBI,YACnBp0B,EAAA,EAAShnC,WACTgnC,EAAA,EAAS1mC,OAEf7I,EAAA,EAAAC,EAAAk3E,EAAAj3E,OAA8CF,EAAAC,IAAQD,EAChD4C,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAkoE,2BAAAC,EAAAn3E,GAAoDia,EAAA,GAShE,QAAAnP,KAPAkE,KAAA6nE,UAAA3oB,YAAAl/C,KAAAkoE,4BAMAloE,KAAAooE,wBAAA,IAAuC7H,GAAsBvgE,KAAAD,EAAA0gE,eACzClM,EACd3gE,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAooE,wBAA+B7T,EAAmBz4D,GAC9DkE,KAAAqoE,sBAAAroE,MAOAA,KAAAsoE,qBAAAnC,EAAAC,oBAMApmE,KAAAuoE,gBAAA,KAEI30E,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAA6nE,UAAiBtnC,EAAA,EAAS9nC,YAAAuH,KAAAwoE,mBAAAxoE,MAChCpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAA6nE,UAAiBtnC,EAAA,EAAS1mC,MAAAmG,KAAAwoE,mBAAAxoE,MAChCpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAA6nE,UAAiBtnC,EAAA,EAAShnC,WAAAyG,KAAAwoE,mBAAAxoE,MAMpCA,KAAAsmE,SAAAH,EAAAG,UAAA,IAAoDvU,EAMpD/xD,KAAAumE,aAAAJ,EAAAI,cAAA,IAA4DxU,EAM5D/xD,KAAAyoE,UAAAtC,EAAAK,SAOAxmE,KAAA0oE,gBAAA,GAMA1oE,KAAA2oE,UAAA3oE,KAAA4oE,iBAMA5oE,KAAA6oE,cAMA7oE,KAAA8oE,OAAA,KAMA9oE,KAAA+oE,qBAAA,GAMA/oE,KAAAgpE,WAAA,IAA0B/E,GAC1BjkE,KAAAipE,gBAAAtkC,KAAA3kC,MACAA,KAAAkpE,kBAAAvkC,KAAA3kC,OAOAA,KAAAmpE,oBAAA,GAEIv1E,OAAAosE,EAAA,EAAApsE,CACJoM,KAAYpM,OAAAq2C,EAAA,EAAAr2C,CAAmBquE,GAAWC,YAC1CliE,KAAAopE,yBAAAppE,MACIpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAOpM,OAAAq2C,EAAA,EAAAr2C,CAAmBquE,GAAWI,MAC/CriE,KAAAqpE,mBAAArpE,MACIpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAOpM,OAAAq2C,EAAA,EAAAr2C,CAAmBquE,GAAWE,MAC/CniE,KAAAspE,mBAAAtpE,MACIpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAOpM,OAAAq2C,EAAA,EAAAr2C,CAAmBquE,GAAWG,QAC/CpiE,KAAAupE,qBAAAvpE,MAIAA,KAAAuL,cAAA46D,EAAAtpE,QAEAmD,KAAAsmE,SAAAxgE,QAKA,SAAA0jE,GACAA,EAAAtvD,OAAAla,OACO2kC,KAAA3kC,OAEHpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAsmE,SAAgB7U,EAAmBC,IAI7C,SAAAh/C,GACAA,EAAA8lC,QAAAt+B,OAAAla,OACOA,MAEHpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAsmE,SAAgB7U,EAAmBE,OAI7C,SAAAj/C,GACAA,EAAA8lC,QAAAt+B,OAAA,OACOla,MAEPA,KAAAumE,aAAAzgE,QAKA,SAAA2jE,GACAA,EAAAvvD,OAAAla,OACO2kC,KAAA3kC,OAEHpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAumE,aAAoB9U,EAAmBC,IAIjD,SAAAh/C,GACAA,EAAA8lC,QAAAt+B,OAAAla,OACOA,MAEHpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAumE,aAAoB9U,EAAmBE,OAIjD,SAAAj/C,GACAA,EAAA8lC,QAAAt+B,OAAA,OACOla,MAEPA,KAAAyoE,UAAA3iE,QAAA9F,KAAA0pE,oBAAA/kC,KAAA3kC,OAEIpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAyoE,UAAiBhX,EAAmBC,IAI9C,SAAAh/C,GACA1S,KAAA0pE,oBAA2Eh3D,EAAA,UACpE1S,MAEHpM,OAAAosE,EAAA,EAAApsE,CAAMoM,KAAAyoE,UAAiBhX,EAAmBE,OAI9C,SAAAj/C,GACA,IACAwjB,EADgExjB,EAAA,QAChEkjB,aACA56B,IAAAk7B,UACAl2B,KAAA0oE,gBAAAxyC,EAAAvnB,YAEA+D,EAAA8lC,QAAAt+B,OAAA,OACOla,MAu3BP,OAn3BAmL,IAAA+6D,EAAAljE,UAAAmI,GACA+6D,EAAAjlE,UAAArN,OAAAqP,OAAAkI,KAAAlK,WACAilE,EAAAjlE,UAAAiC,YAAAgjE,EAMAA,EAAAjlE,UAAA2nE,eAAA,WACA,UAAA1yE,MAAA,oDAQAgwE,EAAAjlE,UAAA0oE,WAAA,SAAAH,GACAxpE,KAAA4pE,cAAA/tE,KAAA2tE,IAQAtD,EAAAjlE,UAAA4oE,eAAA,SAAAJ,GACAzpE,KAAA8pE,kBAAAjuE,KAAA4tE,IAUAvD,EAAAjlE,UAAA8oE,SAAA,SAAA51C,GACAn0B,KAAAgqE,gBAAAvE,YACA5pE,KAAAs4B,IAQA+xC,EAAAjlE,UAAAgpE,WAAA,SAAAC,GACAlqE,KAAAmqE,cAAAtuE,KAAAquE,IAQAhE,EAAAjlE,UAAAyoE,oBAAA,SAAAQ,GACA,IAAAh0C,EAAAg0C,EAAAt0C,aACA56B,IAAAk7B,IACAl2B,KAAA0oE,gBAAAxyC,EAAAvnB,YAAAu7D,GAEAA,EAAAhwD,OAAAla,OAOAkmE,EAAAjlE,UAAA4R,gBAAA,WACA7S,KAAAooE,wBAAArpD,UACInrB,OAAAosE,EAAA,EAAApsE,CAAQoM,KAAA6nE,UAAiBtnC,EAAA,EAAS9nC,YAAAuH,KAAAwoE,mBAAAxoE,MAClCpM,OAAAosE,EAAA,EAAApsE,CAAQoM,KAAA6nE,UAAiBtnC,EAAA,EAAS1mC,MAAAmG,KAAAwoE,mBAAAxoE,MAClCpM,OAAAosE,EAAA,EAAApsE,CAAQoM,KAAA6nE,UAAiBtnC,EAAA,EAAShnC,WAAAyG,KAAAwoE,mBAAAxoE,WACtChF,IAAAgF,KAAA6oE,gBACAztE,oBAA0BmlC,EAAA,EAAS9mC,OAAAuG,KAAA6oE,eAAA,GACnC7oE,KAAA6oE,mBAAA7tE,GAEAgF,KAAAinE,qBACA7hB,qBAAAplD,KAAAinE,oBACAjnE,KAAAinE,wBAAAjsE,GAEAgF,KAAAoqE,UAAA,MACAj/D,EAAAlK,UAAA4R,gBAAAxf,KAAA2M,OAsBAkmE,EAAAjlE,UAAAopE,sBAAA,SAAAjX,EAAAlgE,EAAAkpB,GACA,GAAApc,KAAAwnE,YAAA,CAGA,IAAA91E,EAAAsO,KAAAszD,uBAAAF,GAGAkX,OAAAtvE,KAFAohB,OAAAphB,IAAAohB,IACgC,IAChCkuD,aACAluD,EAAAkuD,aAAAtqE,KAAAwnE,YAAAz5C,WAAA,EACAw8C,OAAAvvE,IAAAohB,EAAAmuD,YACAnuD,EAAAmuD,YAAgCviB,GAAA,EAChC,OAAAhoD,KAAA2oE,UAAA6B,2BACA94E,EAAAsO,KAAAwnE,YAAA8C,EAAAp3E,EAAA,KACAq3E,EAAA,QAWArE,EAAAjlE,UAAAwpE,mBAAA,SAAArX,EAAAh3C,GACA,IAAAe,EAAA,KAOA,OANAnd,KAAAqqE,sBAAAjX,EAAA,SAAAn2C,GACAE,IACAA,EAAA,IAEAA,EAAAthB,KAAAohB,IACKb,GACLe,GAoBA+oD,EAAAjlE,UAAAypE,oBAAA,SAAAtX,EAAAlgE,EAAAkpB,GACA,GAAApc,KAAAwnE,YAAA,CAGA,IAAAznE,EAAAqc,GAA2D,GAC3DkuD,OAAAtvE,IAAA+E,EAAAuqE,aACAluD,EAAAkuD,aAAAtqE,KAAAwnE,YAAAz5C,WAAA,EACAw8C,EAAAxqE,EAAAwqE,aAA6CviB,GAAA,EAC7C,OAAAhoD,KAAA2oE,UAAA+B,oBACAtX,EAAApzD,KAAAwnE,YAAA8C,EAAAp3E,EAAA,KAAAq3E,EAAA,QAYArE,EAAAjlE,UAAA0pE,kBAAA,SAAAvX,EAAAh3C,GACA,IAAApc,KAAAwnE,YACA,SAEA,IAAA91E,EAAAsO,KAAAszD,uBAAAF,GAGAmX,OAAAvvE,KAFAohB,OAAAphB,IAAAohB,IACgC,IAChCmuD,YAAAnuD,EAAAmuD,YAAwFviB,GAAA,EACxFsiB,OAAAtvE,IAAAohB,EAAAkuD,aACAluD,EAAAkuD,aAAAtqE,KAAAwnE,YAAAz5C,WAAA,EACA,OAAA/tB,KAAA2oE,UAAAiC,uBACAl5E,EAAAsO,KAAAwnE,YAAA8C,EAAAC,EAAA,OASArE,EAAAjlE,UAAA4pE,mBAAA,SAAAn4D,GACA,OAAA1S,KAAAszD,uBAAAtzD,KAAAqzD,cAAA3gD,KASAwzD,EAAAjlE,UAAAoyD,cAAA,SAAA3gD,GACA,IAAAo4D,EAAA9qE,KAAA6nE,UAAAkD,wBACAC,EAAA,mBAAAt4D,EAC4B,EAAAypD,eAAA,GACA,EAE5B,OACA6O,EAAAtT,QAAAoT,EAAAnuC,KACAquC,EAAArT,QAAAmT,EAAAG,MAaA/E,EAAAjlE,UAAAiqE,UAAA,WACA,OAAmDlrE,KAAAwL,IAAcy2D,GAAWG,SAU5E8D,EAAAjlE,UAAAkqE,iBAAA,WACA,IAAAvwE,EAAAoF,KAAAkrE,YACA,YAAAlwE,IAAAJ,EACA,iBAAAA,EAAAyM,SAAAg/D,eAAAzrE,KAEA,MAWAsrE,EAAAjlE,UAAAqyD,uBAAA,SAAAF,GACA,IAAA/3C,EAAArb,KAAAwnE,YACA,OAAAnsD,EAGaznB,OAAAyzE,GAAA,EAAAzzE,CAAcynB,EAAA+vD,2BAAAhY,EAAA/hE,SAF3B,MAYA60E,EAAAjlE,UAAA2oE,YAAA,WACA,OAAA5pE,KAAAsmE,UASAJ,EAAAjlE,UAAAkpE,YAAA,WACA,OAAAnqE,KAAAyoE,WAWAvC,EAAAjlE,UAAAoqE,eAAA,SAAAn1C,GACA,IAAAg0C,EAAAlqE,KAAA0oE,gBAAAxyC,EAAAvnB,YACA,YAAA3T,IAAAkvE,IAAA,MAWAhE,EAAAjlE,UAAA6oE,gBAAA,WACA,OAAA9pE,KAAAumE,cASAL,EAAAjlE,UAAA+oE,cAAA,WACA,OAC4BhqE,KAAAwL,IAAcy2D,GAAWC,aASrDgE,EAAAjlE,UAAAwkE,UAAA,WAEA,OADAzlE,KAAAgqE,gBAAAvE,aAWAS,EAAAjlE,UAAAqqE,uBAAA,SAAA55E,GACA,IAAA2pB,EAAArb,KAAAwnE,YACA,OAAAnsD,EAGaznB,OAAAyzE,GAAA,EAAAzzE,CAAcynB,EAAAkwD,2BAAA75E,EAAAL,MAAA,MAF3B,MAUA60E,EAAAjlE,UAAAuqE,YAAA,WACA,OAAAxrE,KAAA2oE,WASAzC,EAAAjlE,UAAAywB,QAAA,WACA,OACoD1xB,KAAAwL,IAAcy2D,GAAWE,OAW7E+D,EAAAjlE,UAAA80C,QAAA,WACA,OACsB/1C,KAAAwL,IAAcy2D,GAAWI,OAS/C6D,EAAAjlE,UAAA+/D,YAAA,WACA,OAAAhhE,KAAA6nE,WAUA3B,EAAAjlE,UAAAwqE,oBAAA,WACA,OAAAzrE,KAAAioE,mBAUA/B,EAAAjlE,UAAAyqE,6BAAA,WACA,OAAA1rE,KAAAkoE,4BAUAhC,EAAAjlE,UAAAgoE,gBAAA,SAAAxoC,EAAAkrC,EAAAC,EAAAriB,GAGA,IAAAluC,EAAArb,KAAAwnE,YACA,KAAAnsD,GAAAswD,KAAAtwD,EAAAwwD,aACA,OH32BOr5E,IG62BP,IAAA6oB,EAAAwwD,YAAAF,GAAAlrC,EAAAtwB,UACA,OH92BO3d,IGs3BP,IAAA0C,EAAA02E,EAAA,GAAAvwD,EAAAywD,MAAA,GACA32E,EAAAy2E,EAAA,GAAAvwD,EAAAywD,MAAA,GACA,aAAA/4E,KAAA2Q,IAAA6lD,GACAx2D,KAAAyjB,KAAAthB,IAAAC,KAAAo0D,GAOA2c,EAAAjlE,UAAAunE,mBAAA,SAAAvV,EAAAlgD,GACA,IAAAlY,EAAAkY,GAAAkgD,EAAAp4D,KACAkxE,EAAA,IAA8BhZ,EAAel4D,EAAAmF,KAAAizD,GAC7CjzD,KAAAqoE,sBAAA0D,IAMA7F,EAAAjlE,UAAAonE,sBAAA,SAAA0D,GACA,GAAA/rE,KAAAwnE,YAAA,CAKAxnE,KAAA8oE,OAAAiD,EAAAr6E,WACAq6E,EAAA1wD,WAAArb,KAAAwnE,YACA,IAAAwE,EAAAhsE,KAAA8pE,kBAAAxX,WACA,QAAAtyD,KAAA6L,cAAAkgE,GACA,QAAA/6E,EAAAg7E,EAAA96E,OAAA,EAAgDF,GAAA,EAAQA,IAAA,CACxD,IAAAy4E,EAAAuC,EAAAh7E,GACA,GAAAy4E,EAAAwC,YAIA,IADAxC,EAAAyC,YAAAH,GAEA,SASA7F,EAAAjlE,UAAAkrE,iBAAA,WAEA,IAAA9wD,EAAArb,KAAAwnE,YAWA4E,EAAApsE,KAAAgpE,WACA,IAAAoD,EAAA97E,UAAA,CACA,IAAAu0E,EAAA7kE,KAAA2mE,iBACA7B,EAAAD,EACA,GAAAxpD,EAAA,CACA,IAAAgxD,EAAAhxD,EAAAixD,UACAD,EAAkBrnB,GAAA,EAAQ94C,aAC1B24D,EAAA7kE,KAAA6mE,yBAAA,IACA/B,EAAA,GAEAuH,EAAkBrnB,GAAA,EAAQ74C,eAC1B04D,EAAA7kE,KAAA+mE,2BAAA,IACAjC,EAAA,GAGAsH,EAAA1H,kBAAAG,IACAuH,EAAApI,eACAoI,EAAAxH,cAAAC,EAAAC,KAGAzpD,IAAArb,KAAA8S,YAAuCy5D,GAAA,EAAer3D,iBAAAmG,EAAAyoC,SACtD9jD,KAAAgpE,WAAAtE,mBAscA,SAAA8H,EAAA56B,GACA,QAAA5gD,EAAA,EAAAC,EAAA2gD,EAAA1gD,OAAqCF,EAAAC,IAAQD,EAAA,CAC7C,IAAAmjC,EAAAyd,EAAA5gD,GACA,GAA4B,qBAAAy0E,UAC5B,OAAA+G,EAA8C,EAAA/G,YAAAnT,YAE9C,IAAA71D,EAAiE,EACjEme,YACA,GAAAne,KAAA+sC,QACA,SAIA,SAndAgjC,CAAAxsE,KAAAylE,YAAAnT,aACAtyD,KAAA2oE,UAAA8D,oBAAyCF,GAAA,EAAer3D,eAAAmG,GAIxD,IADA,IAAAqxD,EAAA1sE,KAAA+oE,qBACA/3E,EAAA,EAAAC,EAAAy7E,EAAAx7E,OAAoDF,EAAAC,IAAQD,EAC5D07E,EAAA17E,GAAAgP,KAAAqb,GAEAqxD,EAAAx7E,OAAA,GAMAg1E,EAAAjlE,UAAAqoE,mBAAA,WACAtpE,KAAAwb,UAMA0qD,EAAAjlE,UAAAsoE,qBAAA,WAMA,IAAAoD,EAKA,GAJA3sE,KAAAkrE,cACAyB,EAAA3sE,KAAAmrE,oBAGAnrE,KAAAuoE,gBAAA,CACA,QAAAv3E,EAAA,EAAAC,EAAA+O,KAAAuoE,gBAAAr3E,OAAuDF,EAAAC,IAAQD,EACvD4C,OAAAosE,EAAA,EAAApsE,CAAaoM,KAAAuoE,gBAAAv3E,IAErBgP,KAAAuoE,gBAAA,KAGA,GAAAoE,EAOK,CACLA,EAAAztB,YAAAl/C,KAAA6nE,WAEA,IAAAzB,EAAApmE,KAAAsoE,qBACAtoE,KAAAsoE,qBAAAqE,EACA3sE,KAAAuoE,gBAAA,CACQ30E,OAAAosE,EAAA,EAAApsE,CAAMwyE,EAAsB7lC,EAAA,EAASvnC,QAAAgH,KAAAwoE,mBAAAxoE,MACrCpM,OAAAosE,EAAA,EAAApsE,CAAMwyE,EAAsB7lC,EAAA,EAAStnC,SAAA+G,KAAAwoE,mBAAAxoE,OAG7CA,KAAA6oE,gBACA7oE,KAAA6oE,cAAA7oE,KAAA4sE,WAAAjoC,KAAA3kC,MACAtE,iBAAyB6kC,EAAA,EAAS9mC,OAAAuG,KAAA6oE,eAAA,SAlBlC7oE,KAAA2oE,UAAAkE,uBACMj5E,OAAA0tC,GAAA,EAAA1tC,CAAUoM,KAAA6nE,gBAChB7sE,IAAAgF,KAAA6oE,gBACAztE,oBAA4BmlC,EAAA,EAAS9mC,OAAAuG,KAAA6oE,eAAA,GACrC7oE,KAAA6oE,mBAAA7tE,GAkBAgF,KAAA4sE,cAQA1G,EAAAjlE,UAAAioE,kBAAA,WACAlpE,KAAAwb,UAMA0qD,EAAAjlE,UAAA6rE,2BAAA,WACA9sE,KAAAwb,UAMA0qD,EAAAjlE,UAAAooE,mBAAA,WACArpE,KAAA0nE,2BACM9zE,OAAAosE,EAAA,EAAApsE,CAAaoM,KAAA0nE,0BACnB1nE,KAAA0nE,yBAAA,MAEA1nE,KAAA2nE,yBACM/zE,OAAAosE,EAAA,EAAApsE,CAAaoM,KAAA2nE,wBACnB3nE,KAAA2nE,uBAAA,MAEA,IAAA1M,EAAAj7D,KAAA+1C,UACAklB,IACAj7D,KAAA6nE,UAAAroB,aAAA,YAA+C5rD,OAAAk2C,EAAA,EAAAl2C,CAAMqnE,IACrDj7D,KAAA0nE,yBAAsC9zE,OAAAosE,EAAA,EAAApsE,CACtCqnE,EAAc4K,GAAA,EAAe/5D,eAC7B9L,KAAA8sE,2BAAA9sE,MACAA,KAAA2nE,uBAAoC/zE,OAAAosE,EAAA,EAAApsE,CACpCqnE,EAAc16B,EAAA,EAAShoC,OACvByH,KAAA8sE,2BAAA9sE,OAEAA,KAAAwb,UAMA0qD,EAAAjlE,UAAAmoE,yBAAA,WACAppE,KAAA4nE,kCACA5nE,KAAA4nE,gCAAA9hE,QAAmDk6D,EAAA,GACnDhgE,KAAA4nE,gCAAA,MAEA,IAAAnB,EAAAzmE,KAAAgqE,gBACAvD,IACAzmE,KAAA4nE,gCAAA,CACQh0E,OAAAosE,EAAA,EAAApsE,CACR6yE,EAAsBZ,GAAA,EAAe/5D,eACrC9L,KAAAwb,OAAAxb,MACQpM,OAAAosE,EAAA,EAAApsE,CACR6yE,EAAsBlmC,EAAA,EAAShoC,OAC/ByH,KAAAwb,OAAAxb,QAGAA,KAAAwb,UAMA0qD,EAAAjlE,UAAA8rE,WAAA,WACA,QAAA/sE,KAAAwnE,aAOAtB,EAAAjlE,UAAA+rE,WAAA,WACAhtE,KAAAinE,oBACA7hB,qBAAAplD,KAAAinE,oBAEAjnE,KAAAknE,mBAOAhB,EAAAjlE,UAAAua,OAAA,gBACAxgB,IAAAgF,KAAAinE,qBACAjnE,KAAAinE,mBAAAnrB,sBAAA97C,KAAAknE,mBAWAhB,EAAAjlE,UAAAgsE,cAAA,SAAAzD,GACA,OAAAxpE,KAAA4pE,cAAA1rE,OAAAsrE,IAUAtD,EAAAjlE,UAAAisE,kBAAA,SAAAzD,GACA,OAAAzpE,KAAA8pE,kBAAA5rE,OAAAurE,IAUAvD,EAAAjlE,UAAAksE,YAAA,SAAAh5C,GAEA,OADAn0B,KAAAgqE,gBAAAvE,YACAvnE,OAAAi2B,IAUA+xC,EAAAjlE,UAAAmsE,cAAA,SAAAlD,GACA,OAAAlqE,KAAAmqE,cAAAjsE,OAAAgsE,IAOAhE,EAAAjlE,UAAAkmE,aAAA,SAAAnmC,GACA,IAAAqsC,EAEAr5E,EAAAgM,KAAA0xB,UACAupC,EAAAj7D,KAAA+1C,UACAhlD,EAAiB6C,OAAAoT,GAAA,EAAApT,GACjB05E,EAAAttE,KAAAwnE,YAEAnsD,EAAA,KACA,QAAArgB,IAAAhH,GAA8BJ,OAAAuzB,GAAA,EAAAvzB,CAAOI,IAAAinE,KAAAhX,QAAA,CAIrC,IAHA,IAAAqoB,EAAArR,EAAA7U,SAAApmD,KAAAwnE,YAAAxnE,KAAAwnE,YAAA8E,eAAAtxE,GACAsgB,EAAAtb,KAAAgqE,gBAAAxvD,sBACAe,EAAA,GACAvqB,EAAA,EAAAC,EAAAqqB,EAAApqB,OAAmDF,EAAAC,IAAQD,EAC3DuqB,EAAoB3nB,OAAAk2C,EAAA,EAAAl2C,CAAM0nB,EAAAtqB,GAAAmjC,QAAA7Y,EAAAtqB,GAE1Bq8E,EAAApS,EAAAngD,SAAA9a,KAAA2mC,aACAtrB,EAAyC,CACzCyoC,SAAA,EACAynB,2BAAAvrE,KAAAonE,4BACAr2E,SACA+6E,MAAA9rE,KAAA8oE,OAAA9oE,KAAA8oE,OAAAuE,EAAAx5E,OACA2K,MAAAwB,KAAAunE,cACAhsD,cACAD,mBACAyS,WAAA/tB,KAAA2mC,YACAykC,2BAAAprE,KAAAsnE,4BACAoF,oBAAA,GACA14E,OACAu5E,mBAAAvtE,KAAAmpE,oBACAiD,UAAApsE,KAAAgpE,WACAhoC,OACA4B,UAAA,GACAyqC,YACAf,YACAT,YAAA,IAYA,GARAxwD,IACAA,EAAAtqB,OAA0B6C,OAAAoT,GAAA,EAAApT,CAAiBy5E,EAAAx5E,OAC3Cw5E,EAAAv5E,WAAAu5E,EAAAt5E,SAAAsnB,EAAArnB,KAAAjD,IAGAiP,KAAAwnE,YAAAnsD,EACArb,KAAA2oE,UAAA6E,YAAAnyD,GAEAA,EAAA,CAMA,GALAA,EAAAyoC,SACA9jD,KAAAwb,SAEAzjB,MAAAkJ,UAAApF,KAAA9F,MAAAiK,KAAA+oE,qBAAA1tD,EAAAqxD,qBAEAY,IACAttE,KAAAynE,kBACsB7zE,OAAAoT,GAAA,EAAApT,CAAOoM,KAAAynE,mBACR7zE,OAAAoT,GAAA,EAAApT,CAAMynB,EAAAtqB,OAAAiP,KAAAynE,oBAE3BznE,KAAA6L,cACA,IAAgB+mD,EAASoP,GAAYhiE,KAAAstE,IACrCttE,KAAAynE,gBAAiC7zE,OAAAoT,GAAA,EAAApT,CAAmBoM,KAAAynE,kBAIpDznE,KAAAynE,kBACApsD,EAAAixD,UAAgCtnB,GAAA,EAAQ94C,aACxCmP,EAAAixD,UAAgCtnB,GAAA,EAAQ74C,eAC7BvY,OAAAoT,GAAA,EAAApT,CAAMynB,EAAAtqB,OAAAiP,KAAAynE,mBAGjBznE,KAAA6L,cAAA,IAA+B+mD,EAASoP,GAAYhiE,KAAAqb,IAC5CznB,OAAAoT,GAAA,EAAApT,CAAKynB,EAAAtqB,OAAAiP,KAAAynE,kBAIbznE,KAAA6L,cAAA,IAA2B+mD,EAASoP,GAAYhiE,KAAAqb,IAEhD4sB,WAAAjoC,KAAAmsE,iBAAAxnC,KAAA3kC,MAAA,IAUAkmE,EAAAjlE,UAAAwsE,cAAA,SAAAhH,GACAzmE,KAAA4I,IAAaq5D,GAAWC,WAAAuE,IASxBP,EAAAjlE,UAAAgyB,QAAA,SAAAj/B,GACAgM,KAAA4I,IAAaq5D,GAAWE,KAAAnuE,IAUxBkyE,EAAAjlE,UAAAmpE,UAAA,SAAAxvE,GACAoF,KAAA4I,IAAaq5D,GAAWG,OAAAxnE,IASxBsrE,EAAAjlE,UAAAysE,QAAA,SAAAzS,GACAj7D,KAAA4I,IAAaq5D,GAAWI,KAAApH,IAMxBiL,EAAAjlE,UAAA0sE,YAAA,SAAA1wD,GACAjd,KAAAmpE,oBAA6Bv1E,OAAAk2C,EAAA,EAAAl2C,CAAMqpB,KAAA,EACnCjd,KAAAwb,UAQA0qD,EAAAjlE,UAAA2rE,WAAA,WACA,IAAAD,EAAA3sE,KAAAmrE,mBAEA,GAAAwB,EAEK,CACL,IAAAiB,EAAA5nB,iBAAA2mB,GACA3sE,KAAAizB,QAAA,CACA05C,EAAAkB,YACAx5B,WAAAu5B,EAAA,iBACAv5B,WAAAu5B,EAAA,aACAv5B,WAAAu5B,EAAA,cACAv5B,WAAAu5B,EAAA,kBACAjB,EAAAmB,aACAz5B,WAAAu5B,EAAA,gBACAv5B,WAAAu5B,EAAA,YACAv5B,WAAAu5B,EAAA,eACAv5B,WAAAu5B,EAAA,0BAbA5tE,KAAAizB,aAAAj4B,IAqBAkrE,EAAAjlE,UAAA8sE,cAAA,SAAA9wD,UACAjd,KAAAmpE,oBAAoCv1E,OAAAk2C,EAAA,EAAAl2C,CAAMqpB,IAC1Cjd,KAAAwb,UAGA0qD,EAprCgB,CAqrCdj8B,EAAA,GCnxCF,ICoBAtU,GACAtxB,GDuFe2pE,GA5GJ,SAAA7iE,GACX,SAAA8iE,EAAAluE,GAEAoL,EAAA9X,KAAA2M,MAMAA,KAAAw4C,QAAAz4C,EAAAy4C,QAAAz4C,EAAAy4C,QAAA,KAMAx4C,KAAAkuE,QAAA,KAMAluE,KAAA0gE,KAAA,KAMA1gE,KAAAmuE,aAAA,GAKAnuE,KAAAwb,OAAAzb,EAAAyb,OAAAzb,EAAAyb,OAAoDwsC,GAAA,EAEpDjoD,EAAAnF,QACAoF,KAAAoqE,UAAArqE,EAAAnF,QAqEA,OAhEAuQ,IAAA8iE,EAAAjrE,UAAAmI,GACA8iE,EAAAhtE,UAAArN,OAAAqP,OAAAkI,KAAAlK,WACAgtE,EAAAhtE,UAAAiC,YAAA+qE,EAKAA,EAAAhtE,UAAA4R,gBAAA,WACIjf,OAAA0tC,GAAA,EAAA1tC,CAAUoM,KAAAw4C,SACdrtC,EAAAlK,UAAA4R,gBAAAxf,KAAA2M,OAQAiuE,EAAAhtE,UAAAmtE,OAAA,WACA,OAAApuE,KAAA0gE,MAUAuN,EAAAhtE,UAAAiZ,OAAA,SAAA3J,GACAvQ,KAAA0gE,MACM9sE,OAAA0tC,GAAA,EAAA1tC,CAAUoM,KAAAw4C,SAEhB,QAAAxnD,EAAA,EAAAC,EAAA+O,KAAAmuE,aAAAj9E,OAAkDF,EAAAC,IAAQD,EACpD4C,OAAAosE,EAAA,EAAApsE,CAAaoM,KAAAmuE,aAAAn9E,KAEnBgP,KAAAmuE,aAAAj9E,OAAA,EACA8O,KAAA0gE,KAAAnwD,EACAvQ,KAAA0gE,SACA1gE,KAAAkuE,QACAluE,KAAAkuE,QAAA39D,EAAAm7D,gCACAxsB,YAAAl/C,KAAAw4C,SACAx4C,KAAAwb,SAA0BwsC,GAAA,GAC1BhoD,KAAAmuE,aAAAtyE,KAA+BjI,OAAAosE,EAAA,EAAApsE,CAAM2c,EAC3ByxD,GAAYhiE,KAAAwb,OAAAxb,OAEtBuQ,EAAAiL,WAaAyyD,EAAAhtE,UAAAmpE,UAAA,SAAAxvE,GACAoF,KAAAkuE,QAAA,iBAAAtzE,EACAyM,SAAAg/D,eAAAzrE,GACAA,GAGAqzE,EAxGW,CAyGThkC,EAAA,GC7IKokC,GAAA,YAkBAC,GAAA,kBAkBAC,GAAA,aAUAC,GAAA,eASAC,IAEPpqE,GAAA,GACA,SAAAqqE,GAIA,GAHA/4C,KACAA,GAAAtuB,SAAAC,cAAA,OAAAquB,SAEA+4C,KAAArqE,IAAA,CACAsxB,GAAA+4C,OACA,IAAAC,EAAAh5C,GAAAi5C,WAEA,GADAj5C,GAAA+4C,KAAA,IACAC,EACA,YAEAtqE,GAAAqqE,GAAAC,EAAAr+D,MAAA,QAEA,OAAAjM,GAAAqqE,eC2PO,SAASG,GAAMC,GACtB9uE,KAAA+uE,eAAAD,EAAAzzD,YAIe,IAAA2zD,GArSA,SAAAf,GACf,SAAAgB,EAAA7yD,GAEA,IAAArc,EAAAqc,GAAA,GAEA6xD,EAAA56E,KAAA2M,KAAA,CACAw4C,QAAAnxC,SAAAC,cAAA,OACAkU,OAAAzb,EAAAyb,QAAgCqzD,GAChCj0E,OAAAmF,EAAAnF,SAOAoF,KAAAkvE,WAAA7nE,SAAAC,cAAA,MAMAtH,KAAAmvE,gBAAAn0E,IAAA+E,EAAAqvE,WAAArvE,EAAAqvE,UAMApvE,KAAAqvE,0BAAAr0E,IAAA+E,EAAAuvE,YAMAtvE,KAAAuvE,kBAAAv0E,IAAA+E,EAAAuvE,aACAvvE,EAAAuvE,YAEAtvE,KAAAuvE,eACAvvE,KAAAmvE,YAAA,GAGA,IAAAr2B,OAAA99C,IAAA+E,EAAA+4C,UAAA/4C,EAAA+4C,UAAA,iBAEA02B,OAAAx0E,IAAA+E,EAAAyvE,SAAAzvE,EAAAyvE,SAAA,eAEAC,OAAAz0E,IAAA+E,EAAA0vE,cAAA1vE,EAAA0vE,cAAA,IAEA,iBAAAA,GAKAzvE,KAAA0vE,eAAAroE,SAAAC,cAAA,QACAtH,KAAA0vE,eAAAjvD,YAAAgvD,GAEAzvE,KAAA0vE,eAAAD,EAGA,IAAAE,OAAA30E,IAAA+E,EAAA4vE,MAAA5vE,EAAA4vE,MAAA,IAEA,iBAAAA,GAKA3vE,KAAA4vE,OAAAvoE,SAAAC,cAAA,QACAtH,KAAA4vE,OAAAnvD,YAAAkvD,GAEA3vE,KAAA4vE,OAAAD,EAIA,IAAAE,EAAA7vE,KAAAuvE,eAAAvvE,KAAAmvE,WACAnvE,KAAA0vE,eAAA1vE,KAAA4vE,OACAnZ,EAAApvD,SAAAC,cAAA,UACAmvD,EAAAjX,aAAA,iBACAiX,EAAAqZ,MAAAN,EACA/Y,EAAAvX,YAAA2wB,GAEIj8E,OAAAosE,EAAA,EAAApsE,CAAM6iE,EAASl2B,EAAA,EAAS7nC,MAAAsH,KAAA+vE,aAAA/vE,MAE5B,IAAAgwE,EAAAl3B,EAAA,IAAuCw1B,GAAkB,IAASC,IAClEvuE,KAAAmvE,YAAAnvE,KAAAuvE,aAAA,IAAsDf,GAAe,KACrExuE,KAAAuvE,aAAA,wBACA/2B,EAAAx4C,KAAAw4C,QACAA,EAAAM,UAAAk3B,EACAx3B,EAAA0G,YAAAl/C,KAAAkvE,YACA12B,EAAA0G,YAAAuX,GAOAz2D,KAAAiwE,sBAAA,GAMAjwE,KAAAkwE,kBAAA,EAmLA,OA/KAjC,IAAAgB,EAAAjsE,UAAAirE,GACAgB,EAAAhuE,UAAArN,OAAAqP,OAAAgrE,KAAAhtE,WACAguE,EAAAhuE,UAAAiC,YAAA+rE,EAQAA,EAAAhuE,UAAAkvE,2BAAA,SAAA90D,GAeA,IAVA,IAAA+0D,EAAA,GAMAC,EAAA,GAEA/0D,EAAAD,EAAAC,iBACAxnB,EAAAunB,EAAAgyD,UAAAv5E,WACA9C,EAAA,EAAAC,EAAAqqB,EAAApqB,OAAiDF,EAAAC,IAAQD,EAAA,CACzD,IAAAiqB,EAAAK,EAAAtqB,GACA,GAAW4C,OAAAgmB,GAAA,EAAAhmB,CAAmBqnB,EAAAnnB,GAA9B,CAIA,IAAA2I,EAAkEwe,EAAA,MAAAL,YAClE,GAAAne,EAAA,CAIA,IAAA6zE,EAAA7zE,EAAAktC,kBACA,GAAA2mC,EAAA,CAIA,IAAAjnC,EAAAinC,EAAAj1D,GACA,GAAAguB,EAQA,GAJArpC,KAAAqvE,uBAAA,IAAA5yE,EAAAmtC,8BACA5pC,KAAAuwE,gBAAA,GAGAx4E,MAAAkG,QAAAorC,GACA,QAAAzxC,EAAA,EAAA0Z,EAAA+3B,EAAAn4C,OAAiD0G,EAAA0Z,IAAQ1Z,EACzDyxC,EAAAzxC,KAAAw4E,IACAC,EAAAx0E,KAAAwtC,EAAAzxC,IACAw4E,EAAA/mC,EAAAzxC,KAAA,QAIAyxC,KAAA+mC,IACAC,EAAAx0E,KAAAwtC,GACA+mC,EAAA/mC,IAAA,MAIA,OAAAgnC,GAOApB,EAAAhuE,UAAA8tE,eAAA,SAAA1zD,GACA,GAAAA,EAAA,CAQA,IAAAguB,EAAArpC,KAAAmwE,2BAAA90D,GAEAI,EAAA4tB,EAAAn4C,OAAA,EAMA,GALA8O,KAAAkwE,kBAAAz0D,IACAzb,KAAAw4C,QAAA7iB,MAAA66C,QAAA/0D,EAAA,UACAzb,KAAAkwE,iBAAAz0D,IAGQ7nB,OAAAskB,GAAA,EAAAtkB,CAAMy1C,EAAArpC,KAAAiwE,uBAAd,CAIIr8E,OAAA0tC,GAAA,EAAA1tC,CAAcoM,KAAAkvE,YAGlB,QAAAl+E,EAAA,EAAAC,EAAAo4C,EAAAn4C,OAA6CF,EAAAC,IAAQD,EAAA,CACrD,IAAAwnD,EAAAnxC,SAAAC,cAAA,MACAkxC,EAAAW,UAAA9P,EAAAr4C,GACAgP,KAAAkvE,WAAAhwB,YAAA1G,GAGAx4C,KAAAiwE,sBAAA5mC,QA5BArpC,KAAAkwE,mBACAlwE,KAAAw4C,QAAA7iB,MAAA66C,QAAA,OACAxwE,KAAAkwE,kBAAA,IAiCAjB,EAAAhuE,UAAA8uE,aAAA,SAAAr9D,GACAA,EAAA3F,iBACA/M,KAAAywE,iBAMAxB,EAAAhuE,UAAAwvE,cAAA,WACAzwE,KAAAw4C,QAAAk4B,UAAAC,OAAkCnC,IAClCxuE,KAAAmvE,WACMv7E,OAAA0tC,GAAA,EAAA1tC,CAAWoM,KAAA0vE,eAAA1vE,KAAA4vE,QAEXh8E,OAAA0tC,GAAA,EAAA1tC,CAAWoM,KAAA4vE,OAAA5vE,KAAA0vE,gBAEjB1vE,KAAAmvE,YAAAnvE,KAAAmvE,YAQAF,EAAAhuE,UAAA2vE,eAAA,WACA,OAAA5wE,KAAAuvE,cAQAN,EAAAhuE,UAAAsvE,eAAA,SAAAjB,GACAtvE,KAAAuvE,eAAAD,IAGAtvE,KAAAuvE,aAAAD,EACAtvE,KAAAw4C,QAAAk4B,UAAAC,OAAA,qBACArB,GAAAtvE,KAAAmvE,YACAnvE,KAAAywE,kBAWAxB,EAAAhuE,UAAA4vE,aAAA,SAAAzB,GACApvE,KAAAuvE,cAAAvvE,KAAAmvE,aAAAC,GAGApvE,KAAAywE,iBASAxB,EAAAhuE,UAAA6vE,aAAA,WACA,OAAA9wE,KAAAmvE,YAGAF,EAtRe,CAuRbjB,cCvKK,SAAS+C,GAAMjC,GACtB,IAAAzzD,EAAAyzD,EAAAzzD,WACA,GAAAA,EAAA,CAGA,IAAAtnB,EAAAsnB,EAAAgyD,UAAAt5E,SACA,GAAAA,GAAAiM,KAAAgxE,UAAA,CACA,IAAApqE,EAAA,UAAA7S,EAAA,OACA,GAAAiM,KAAAixE,UAAA,CACA,IAAA94D,EAAAnY,KAAAw4C,QAAAk4B,UAAAv4D,SAAqDk2D,IACrDl2D,GAAA,IAAApkB,EAEOokB,GAAA,IAAApkB,GACPiM,KAAAw4C,QAAAk4B,UAAAxyE,OAAsCmwE,IAFtCruE,KAAAw4C,QAAAk4B,UAAAxrE,IAAmCmpE,IAKnCruE,KAAA4vE,OAAAj6C,MAAAu7C,YAAAtqE,EACA5G,KAAA4vE,OAAAj6C,MAAAw7C,gBAAAvqE,EACA5G,KAAA4vE,OAAAj6C,MAAA/uB,YAEA5G,KAAAgxE,UAAAj9E,GAGe,IAAAq9E,GAjJL,SAAAnD,GACV,SAAAoD,EAAAj1D,GAEA,IAAArc,EAAAqc,GAAA,GAEA6xD,EAAA56E,KAAA2M,KAAA,CACAw4C,QAAAnxC,SAAAC,cAAA,OACAkU,OAAAzb,EAAAyb,QAAgCu1D,GAChCn2E,OAAAmF,EAAAnF,SAGA,IAAAk+C,OAAA99C,IAAA+E,EAAA+4C,UAAA/4C,EAAA+4C,UAAA,YAEA62B,OAAA30E,IAAA+E,EAAA4vE,MAAA5vE,EAAA4vE,MAAA,IAMA3vE,KAAA4vE,OAAA,KAEA,iBAAAD,GACA3vE,KAAA4vE,OAAAvoE,SAAAC,cAAA,QACAtH,KAAA4vE,OAAA92B,UAAA,aACA94C,KAAA4vE,OAAAnvD,YAAAkvD,IAEA3vE,KAAA4vE,OAAAD,EACA3vE,KAAA4vE,OAAAc,UAAAxrE,IAAA,eAGA,IAAAsqE,EAAAzvE,EAAAyvE,SAAAzvE,EAAAyvE,SAAA,iBAEA/Y,EAAApvD,SAAAC,cAAA,UACAmvD,EAAA3d,YAAA,SACA2d,EAAAjX,aAAA,iBACAiX,EAAAqZ,MAAAN,EACA/Y,EAAAvX,YAAAl/C,KAAA4vE,QAEIh8E,OAAAosE,EAAA,EAAApsE,CAAM6iE,EAASl2B,EAAA,EAAS7nC,MAAAsH,KAAA+vE,aAAA/vE,MAE5B,IAAAgwE,EAAAl3B,EAAA,IAAuCw1B,GAAkB,IAASC,GAClE/1B,EAAAx4C,KAAAw4C,QACAA,EAAAM,UAAAk3B,EACAx3B,EAAA0G,YAAAuX,GAEAz2D,KAAAsxE,gBAAAvxE,EAAAwxE,WAAAxxE,EAAAwxE,gBAAAv2E,EAMAgF,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IAMA3kD,KAAAixE,eAAAj2E,IAAA+E,EAAA0xE,UAAA1xE,EAAA0xE,SAMAzxE,KAAAgxE,eAAAh2E,EAEAgF,KAAAixE,WACAjxE,KAAAw4C,QAAAk4B,UAAAxrE,IAAiCmpE,IA8CjC,OAzCAJ,IAAAoD,EAAAruE,UAAAirE,GACAoD,EAAApwE,UAAArN,OAAAqP,OAAAgrE,KAAAhtE,WACAowE,EAAApwE,UAAAiC,YAAAmuE,EAMAA,EAAApwE,UAAA8uE,aAAA,SAAAr9D,GACAA,EAAA3F,sBACA/R,IAAAgF,KAAAsxE,gBACAtxE,KAAAsxE,kBAEAtxE,KAAA0xE,eAOAL,EAAApwE,UAAAywE,YAAA,WACA,IACAzW,EADAj7D,KAAAouE,SACAr4B,UACAklB,QAKAjgE,IAAAigE,EAAApX,gBACA7jD,KAAAwxE,UAAA,EACAvW,EAAAnX,QAAA,CACA/vD,SAAA,EACA4wD,SAAA3kD,KAAAwxE,UACAvwC,OAAkBA,GAAA,IAGlBg6B,EAAA7W,YAAA,KAKAitB,EAhHU,CAiHRrD,ICVa2D,GAxGP,SAAA1D,GACR,SAAA2D,EAAAx1D,GAEA,IAAArc,EAAAqc,GAAA,GAEA6xD,EAAA56E,KAAA2M,KAAA,CACAw4C,QAAAnxC,SAAAC,cAAA,OACA1M,OAAAmF,EAAAnF,SAGA,IAAAk+C,OAAA99C,IAAA+E,EAAA+4C,UAAA/4C,EAAA+4C,UAAA,UAEAr6B,OAAAzjB,IAAA+E,EAAA0e,MAAA1e,EAAA0e,MAAA,EAEAozD,OAAA72E,IAAA+E,EAAA8xE,YAAA9xE,EAAA8xE,YAAA,IACAC,OAAA92E,IAAA+E,EAAA+xE,aAAA/xE,EAAA+xE,aAAA,IAEAC,OAAA/2E,IAAA+E,EAAAgyE,eACAhyE,EAAAgyE,eAAA,UACAC,OAAAh3E,IAAA+E,EAAAiyE,gBACAjyE,EAAAiyE,gBAAA,WAEAC,EAAA5qE,SAAAC,cAAA,UACA2qE,EAAAn5B,YAAA,MACAm5B,EAAAzyB,aAAA,iBACAyyB,EAAAnC,MAAAiC,EACAE,EAAA/yB,YACA,iBAAA2yB,EAAAxqE,SAAA6qE,eAAAL,MAGIj+E,OAAAosE,EAAA,EAAApsE,CAAMq+E,EAAY1xC,EAAA,EAAS7nC,MAAAsH,KAAA+vE,aAAAprC,KAAA3kC,KAAAye,IAE/B,IAAA0zD,EAAA9qE,SAAAC,cAAA,UACA6qE,EAAAr5B,YAAA,OACAq5B,EAAA3yB,aAAA,iBACA2yB,EAAArC,MAAAkC,EACAG,EAAAjzB,YACA,iBAAA4yB,EAAAzqE,SAAA6qE,eAAAJ,MAGIl+E,OAAAosE,EAAA,EAAApsE,CAAMu+E,EAAa5xC,EAAA,EAAS7nC,MAAAsH,KAAA+vE,aAAAprC,KAAA3kC,MAAAye,IAEhC,IAAAuxD,EAAAl3B,EAAA,IAAuCw1B,GAAkB,IAASC,GAClE/1B,EAAAx4C,KAAAw4C,QACAA,EAAAM,UAAAk3B,EACAx3B,EAAA0G,YAAA+yB,GACAz5B,EAAA0G,YAAAizB,GAMAnyE,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IAgDA,OA5CAspB,IAAA2D,EAAA5uE,UAAAirE,GACA2D,EAAA3wE,UAAArN,OAAAqP,OAAAgrE,KAAAhtE,WACA2wE,EAAA3wE,UAAAiC,YAAA0uE,EAOAA,EAAA3wE,UAAA8uE,aAAA,SAAAtxD,EAAA/L,GACAA,EAAA3F,iBACA/M,KAAAoyE,aAAA3zD,IAOAmzD,EAAA3wE,UAAAmxE,aAAA,SAAA3zD,GACA,IACAw8C,EADAj7D,KAAAouE,SACAr4B,UACA,GAAAklB,EAAA,CAKA,IAAApV,EAAAoV,EAAAl0C,gBACA,GAAA8+B,EAAA,CACA,IAAAwsB,EAAApX,EAAAzX,oBAAAqC,EAAApnC,GACAze,KAAAwxE,UAAA,GACAvW,EAAAhW,gBACAgW,EAAA9V,mBAEA8V,EAAAnX,QAAA,CACAhwD,WAAAu+E,EACA1tB,SAAA3kD,KAAAwxE,UACAvwC,OAAkBA,GAAA,KAGlBg6B,EAAAhT,cAAAoqB,MAKAT,EApGQ,CAqGN5D,IC7HF,IAAAsE,GAAA,SAAAC,EAAAC,EAAAC,GAMAzyE,KAAA0yE,OAAAH,EAMAvyE,KAAA2yE,aAAAH,EAMAxyE,KAAA4yE,OAAAH,EAMAzyE,KAAA6yE,QAAA,GAMA7yE,KAAA8yE,OAAA,EAMA9yE,KAAA+yE,iBAAA,GAMAT,GAAArxE,UAAAnD,MAAA,WACAkC,KAAA6yE,QAAA3hF,OAAA,EACA8O,KAAA8yE,OAAA,EACA9yE,KAAA+yE,iBAAA,GAOAT,GAAArxE,UAAA+xE,OAAA,SAAA1hF,EAAAC,GACAyO,KAAA6yE,QAAAh3E,KAAAvK,EAAAC,EAAA+yD,KAAAC,QAMA+tB,GAAArxE,UAAArO,IAAA,WACA,GAAAoN,KAAA6yE,QAAA3hF,OAAA,EAGA,SAEA,IAAAuhF,EAAAnuB,KAAAC,MAAAvkD,KAAA4yE,OACAl4B,EAAA16C,KAAA6yE,QAAA3hF,OAAA,EACA,GAAA8O,KAAA6yE,QAAAn4B,EAAA,GAAA+3B,EAGA,SAKA,IADA,IAAAQ,EAAAv4B,EAAA,EACAu4B,EAAA,GAAAjzE,KAAA6yE,QAAAI,EAAA,GAAAR,GACAQ,GAAA,EAGA,IAAAtuB,EAAA3kD,KAAA6yE,QAAAn4B,EAAA,GAAA16C,KAAA6yE,QAAAI,EAAA,GAIA,GAAAtuB,EAAA,OACA,SAGA,IAAAnzD,EAAAwO,KAAA6yE,QAAAn4B,GAAA16C,KAAA6yE,QAAAI,GACAxhF,EAAAuO,KAAA6yE,QAAAn4B,EAAA,GAAA16C,KAAA6yE,QAAAI,EAAA,GAGA,OAFAjzE,KAAA8yE,OAAA//E,KAAAk5B,MAAAx6B,EAAAD,GACAwO,KAAA+yE,iBAAAhgF,KAAAyjB,KAAAhlB,IAAAC,KAAAkzD,EACA3kD,KAAA+yE,iBAAA/yE,KAAA2yE,cAMAL,GAAArxE,UAAAwqB,YAAA,WACA,OAAAzrB,KAAA2yE,aAAA3yE,KAAA+yE,kBAAA/yE,KAAA0yE,QAMAJ,GAAArxE,UAAAiyE,SAAA,WACA,OAAAlzE,KAAA8yE,QAGe,IAAAK,GAAA,GC/GAC,GACf,mBCgIO,SAAA3jE,GAAAwrD,EAAAlnE,EAAA6b,EAAAyjE,GACPt/E,EAAAknE,EAAA7X,kBAAArvD,EAAA,GACAu/E,GAAArY,EAAAlnE,EAAA6b,EAAAyjE,GAUO,SAAAC,GAAArY,EAAAlnE,EAAA6b,EAAAyjE,GACP,QAAAr4E,IAAAjH,EAAA,CACA,IAAAw/E,EAAAtY,EAAApX,cACA+B,EAAAqV,EAAAprE,iBACAmL,IAAAu4E,GAAA3tB,GAAAytB,EAAA,EACApY,EAAAnX,QAAA,CACA/vD,WACA2b,OAAAE,EACA+0C,SAAA0uB,EACApyC,OAAgBA,GAAA,IAGhBg6B,EAAAxrD,OAAA1b,EAAA6b,IAgCO,SAAA4jE,GAAAvY,EAAAx8C,EAAA7O,EAAAyjE,GACP,IAAAxtB,EAAAoV,EAAAl0C,gBACAjzB,EAAAmnE,EAAAzX,oBAAAqC,EAAApnC,EAAA,GAEA,QAAAzjB,IAAAlH,EAAA,CACA,IAAAwxB,EAAA21C,EAAAj0C,iBACAlzB,EAAiBF,OAAAmP,GAAA,EAAAnP,CACjBE,EACAmnE,EAAAzmC,oBAAAlP,IAAAp0B,OAAA,GACA+pE,EAAA1mC,oBAAAjP,EAAA,IAMA,GAAA1V,QAAA5U,IAAAlH,OAAA+xD,EAAA,CACA,IAAAD,EAAAqV,EAAAprE,YACAgE,EAAAonE,EAAAxV,oBAAA3xD,EAAA8b,GACA/b,EAAAonE,EAAAhV,gBAAApyD,GAEA+b,EAAA,EACA9b,EAAA8xD,EAAA,GAAAC,EAAAhyD,EAAA,KACAC,EAAA+xD,IACA/xD,EAAA8xD,EAAA,GAAAC,EAAAhyD,EAAA,KACAC,EAAA+xD,IAIA4tB,GAAAxY,EAAAnnE,EAAA8b,EAAAyjE,GAUO,SAAAI,GAAAxY,EAAAnnE,EAAA8b,EAAAyjE,GACP,GAAAv/E,EAAA,CACA,IAAA+xD,EAAAoV,EAAAl0C,gBACA6+B,EAAAqV,EAAAprE,YACA,QAAAmL,IAAA6qD,GAAAD,GACA9xD,IAAA+xD,GAAAwtB,EACApY,EAAAnX,QAAA,CACAhwD,aACA4b,OAAAE,EACA+0C,SAAA0uB,EACApyC,OAAgBA,GAAA,QAEX,CACL,GAAArxB,EAAA,CACA,IAAA/b,EAAAonE,EAAAxV,oBAAA3xD,EAAA8b,GACAqrD,EAAA/W,UAAArwD,GAEAonE,EAAAhT,cAAAn0D,KAKe,IAAA4/E,GA3NA,SAAAvoE,GACf,SAAAwoE,EAAA5zE,GACAoL,EAAA9X,KAAA2M,MAEAD,EAAAmsE,cACAlsE,KAAAksE,YAAAnsE,EAAAmsE,aAOAlsE,KAAA0gE,KAAA,KAEA1gE,KAAA4zE,WAAA,GAwDA,OArDAzoE,IAAAwoE,EAAA3wE,UAAAmI,GACAwoE,EAAA1yE,UAAArN,OAAAqP,OAAAkI,KAAAlK,WACA0yE,EAAA1yE,UAAAiC,YAAAywE,EAQAA,EAAA1yE,UAAAgrE,UAAA,WACA,OAA8BjsE,KAAAwL,IAAc4nE,KAQ5CO,EAAA1yE,UAAAmtE,OAAA,WACA,OAAApuE,KAAA0gE,MASAiT,EAAA1yE,UAAAirE,YAAA,SAAAH,GACA,UASA4H,EAAA1yE,UAAA2yE,UAAA,SAAAC,GACA7zE,KAAA4I,IAAawqE,GAAmBS,IAShCF,EAAA1yE,UAAAiZ,OAAA,SAAA3J,GACAvQ,KAAA0gE,KAAAnwD,GAGAojE,EAtEe,CAuEb1pC,EAAA,GChDF,SAAS6pC,GAAW/H,GACpB,IAAAgI,GAAA,EACA,GAAAhI,EAAAlxE,MAA8B05D,EAAmB57D,SAAA,CACjD,IAAAs6D,EAA6C8Y,EAAA,cAC7Cx7D,EAAAw7D,EAAAx7D,IACAb,EAAAq8D,EAAAr6E,WACA+sB,EAAAw0C,EAAAsI,UAAAv7D,KAAAg0E,OAAAh0E,KAAAg0E,OAEIR,GADJjjE,EAAAwlC,UACet3B,EAAA/O,EAAA1P,KAAAwxE,WACfzF,EAAAh/D,iBACAgnE,GAAA,EAEA,OAAAA,EAGe,IAAAE,GApDf,SAAAN,GACA,SAAAO,EAAA93D,GACAu3D,EAAAtgF,KAAA2M,KAAA,CACAksE,YAAmB4H,KAGnB,IAAA/zE,EAAAqc,GAAA,GAMApc,KAAAg0E,OAAAj0E,EAAA0e,MAAA1e,EAAA0e,MAAA,EAMAze,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IAQA,OAJAgvB,IAAAO,EAAAlxE,UAAA2wE,GACAO,EAAAjzE,UAAArN,OAAAqP,OAAA0wE,KAAA1yE,WACAizE,EAAAjzE,UAAAiC,YAAAgxE,EAEAA,EA1BA,CA2BER,cCJKS,GAAA,SAAApI,GACP,IAAA5Y,EAAqE4Y,EAAA,cACrE,OACA5Y,EAAAmI,UACAnI,EAAAqI,SAAArI,EAAAkI,UACAlI,EAAAoI,UAYW6Y,GAAK,SAAA1hE,GAChB,OAAAA,EAAA9X,OAAAuwE,qBAAA9jE,SAAAgtE,eAWOC,GAAatsB,GAAA,EAwBbusB,GAAA,SAAAxI,GACP,IAAA5Y,EAA4C4Y,EAAA,cAC5C,UAAA5Y,EAAAsD,UACQ5C,GAAUC,GAAGX,EAAAkI,UA2DdmZ,IAhDYxsB,GAAA,EAgDZ,SAAA+jB,GACP,IAAA5Y,EAAqE4Y,EAAA,cACrE,OACA5Y,EAAAmI,UACAnI,EAAAqI,SAAArI,EAAAkI,WACAlI,EAAAoI,WA6BOkZ,GAAA,SAAA1I,GACP,IAAA5Y,EAAqE4Y,EAAA,cACrE,OACA5Y,EAAAmI,UACAnI,EAAAqI,SAAArI,EAAAkI,UACAlI,EAAAoI,UAYOmZ,GAAA,SAAA3I,GACP,IACApvB,EADAovB,EAAA5Y,cAAAv4D,OACmC+hD,QACnC,MACA,UAAAA,GACA,WAAAA,GACA,aAAAA,GAWOg4B,GAAA,SAAA5I,GACP,IAAA3W,EAA4E,EAAAA,aAG5E,OAFExhE,OAAA2xB,GAAA,EAAA3xB,MAAMoH,IAAAo6D,EAAA,IAER,SAAAA,EAAAgC,aCvBO,SAASwd,GAAQC,GAIxB,IAHA,IAAA3jF,EAAA2jF,EAAA3jF,OACAwmE,EAAA,EACAC,EAAA,EACA3mE,EAAA,EAAiBA,EAAAE,EAAYF,IAC7B0mE,GAAAmd,EAAA7jF,GAAA0mE,QACAC,GAAAkd,EAAA7jF,GAAA2mE,QAEA,OAAAD,EAAAxmE,EAAAymE,EAAAzmE,GAiBe,IAAA4jF,GA1LO,SAAAnB,GACtB,SAAAoB,EAAA34D,GAEA,IAAArc,EAAAqc,GAAA,GAEAu3D,EAAAtgF,KAA8E2M,KAAA,GAE9ED,EAAAi1E,kBACAh1E,KAAAg1E,gBAAAj1E,EAAAi1E,iBAGAj1E,EAAAk1E,kBACAj1E,KAAAi1E,gBAAAl1E,EAAAk1E,iBAGAl1E,EAAAm1E,kBACAl1E,KAAAk1E,gBAAAn1E,EAAAm1E,iBAGAn1E,EAAAo1E,gBACAn1E,KAAAm1E,cAAAp1E,EAAAo1E,eAGAp1E,EAAAq1E,WACAp1E,KAAAo1E,SAAAr1E,EAAAq1E,UAOAp1E,KAAAq1E,wBAAA,EAMAr1E,KAAAs1E,iBAAA,GAMAt1E,KAAAu1E,eAAA,GA8GA,OA1GA5B,IAAAoB,EAAA/xE,UAAA2wE,GACAoB,EAAA9zE,UAAArN,OAAAqP,OAAA0wE,KAAA1yE,WACA8zE,EAAA9zE,UAAAiC,YAAA6xE,EAQAA,EAAA9zE,UAAA+zE,gBAAA,SAAAjJ,GACA,UAQAgJ,EAAA9zE,UAAAg0E,gBAAA,SAAAlJ,KASAgJ,EAAA9zE,UAAAirE,YAAA,SAAAH,GACA,IAAoE,eACpE,SAGA,IAAAgI,GAAA,EAEA,GADA/zE,KAAAw1E,uBAAAzJ,GACA/rE,KAAAq1E,wBACA,GAAAtJ,EAAAlxE,MAAkC05D,EAAmBE,YACrDz0D,KAAAi1E,gBAAAlJ,QACO,GAAAA,EAAAlxE,MAAkC05D,EAAmBK,UAAA,CAC5D,IAAA6gB,EAAAz1E,KAAAm1E,cAAApJ,GACA/rE,KAAAq1E,uBAAAI,GAAAz1E,KAAAu1E,eAAArkF,OAAA,QAGA,GAAA66E,EAAAlxE,MAAkC05D,EAAmBI,YAAA,CACrD,IAAA+gB,EAAA11E,KAAAg1E,gBAAAjJ,GACA2J,GACA3J,EAAAh/D,iBAEA/M,KAAAq1E,uBAAAK,EACA3B,EAAA/zE,KAAAo1E,SAAAM,QACO3J,EAAAlxE,MAAkC05D,EAAmBG,aAC5D10D,KAAAk1E,gBAAAnJ,GAGA,OAAAgI,GAQAgB,EAAA9zE,UAAAi0E,gBAAA,SAAAnJ,KAQAgJ,EAAA9zE,UAAAk0E,cAAA,SAAApJ,GACA,UASAgJ,EAAA9zE,UAAAm0E,SAAA,SAAAM,GACA,OAAAA,GAOAX,EAAA9zE,UAAAu0E,uBAAA,SAAAzJ,GACA,GA0CA,SAAAA,GACA,IAAAlxE,EAAAkxE,EAAAlxE,KACA,OAAAA,IAAkB05D,EAAmBI,aACrC95D,IAAa05D,EAAmBE,aAChC55D,IAAa05D,EAAmBK,UA9ChC+gB,CAAA5J,GAAA,CACA,IAAAr5D,EAAAq5D,EAAA3W,aAEAl/B,EAAAxjB,EAAAwkD,UAAAvoD,WACAo9D,EAAAlxE,MAAkC05D,EAAmBK,iBACrD50D,KAAAs1E,iBAAAp/C,GACO61C,EAAAlxE,MACG05D,EAAmBI,YAC7B30D,KAAAs1E,iBAAAp/C,GAAAxjB,EACOwjB,KAAAl2B,KAAAs1E,mBAEPt1E,KAAAs1E,iBAAAp/C,GAAAxjB,GAEA1S,KAAAu1E,eAA4B3hF,OAAA0C,GAAA,EAAA1C,CAASoM,KAAAs1E,oBAIrCP,EAzJsB,CA0JpBrB,IC1BakC,GApJJ,SAAAb,GACX,SAAAc,EAAAz5D,GAEA24D,EAAA1hF,KAAA2M,KAAA,CACAo1E,SAAgBptB,GAAA,IAGhB,IAAAjoD,EAAAqc,GAAA,GAMApc,KAAA81E,SAAA/1E,EAAAg2E,QAKA/1E,KAAAg2E,aAAA,KAKAh2E,KAAAi2E,mBAKAj2E,KAAAk2E,UAAA,EAMAl2E,KAAAm2E,WAAAp2E,EAAAq2E,UAAAr2E,EAAAq2E,UAA8D5B,GAM9Dx0E,KAAAq2E,YAAA,EAyGA,OArGAtB,IAAAc,EAAA7yE,UAAA+xE,GACAc,EAAA50E,UAAArN,OAAAqP,OAAA8xE,KAAA9zE,WACA40E,EAAA50E,UAAAiC,YAAA2yE,EAKAA,EAAA50E,UAAAg0E,gBAAA,SAAAlJ,GACA/rE,KAAAk2E,WACAl2E,KAAAk2E,UAAA,EACAl2E,KAAAouE,SAAAr4B,UAAAgP,QAAsCC,GAAA,EAAQ74C,YAAA,IAE9C,IAAAopE,EAAAv1E,KAAAu1E,eACAe,EAAmB1B,GAAoBW,GACvC,GAAAA,EAAArkF,QAAA8O,KAAAi2E,oBAIA,GAHAj2E,KAAA81E,UACA91E,KAAA81E,SAAA9C,OAAAsD,EAAA,GAAAA,EAAA,IAEAt2E,KAAAg2E,aAAA,CACA,IAAA9gF,EAAA8K,KAAAg2E,aAAA,GAAAM,EAAA,GACAnhF,EAAAmhF,EAAA,GAAAt2E,KAAAg2E,aAAA,GAEA/a,EADA8Q,EAAAx7D,IACAwlC,UACAliD,EAAA,CAAAqB,EAAAC,GACQvB,OAAA2iF,GAAA,EAAA3iF,CAAeC,EAAAonE,EAAAl0C,iBACfnzB,OAAA2iF,GAAA,EAAA3iF,CAAgBC,EAAAonE,EAAApX,eAChBjwD,OAAA2iF,GAAA,EAAA3iF,CAAaC,EAAAonE,EAAAprE,aACrBgE,EAAAonE,EAAAhV,gBAAApyD,GACAonE,EAAA/W,UAAArwD,SAEKmM,KAAA81E,UAGL91E,KAAA81E,SAAAh4E,QAEAkC,KAAAg2E,aAAAM,EACAt2E,KAAAi2E,mBAAAV,EAAArkF,QAMA2kF,EAAA50E,UAAAk0E,cAAA,SAAApJ,GACA,IAAAx7D,EAAAw7D,EAAAx7D,IACA0qD,EAAA1qD,EAAAwlC,UACA,OAAA/1C,KAAAu1E,eAAArkF,OAAA,CACA,IAAA8O,KAAAq2E,YAAAr2E,KAAA81E,UAAA91E,KAAA81E,SAAAljF,MAAA,CACA,IAAAs5B,EAAAlsB,KAAA81E,SAAArqD,cACAthB,EAAAnK,KAAA81E,SAAA5C,WACAr/E,EAAuEonE,EAAAprE,YACvE2mF,EAAAjmE,EAAA+6D,uBAAAz3E,GACAuhB,EAAA7E,EAAA+iD,uBAAA,CACAkjB,EAAA,GAAAtqD,EAAAn5B,KAAAmB,IAAAiW,GACAqsE,EAAA,GAAAtqD,EAAAn5B,KAAAqB,IAAA+V,KAEA8wD,EAAAnX,QAAA,CACAjwD,OAAAonE,EAAAhV,gBAAA7wC,GACAuvC,SAAA,IACA1jB,OAAkBA,GAAA,IAOlB,OAJAjhC,KAAAk2E,WACAl2E,KAAAk2E,UAAA,EACAjb,EAAAlW,QAAqBC,GAAA,EAAQ74C,aAAA,KAE7B,EAQA,OANAnM,KAAA81E,UAGA91E,KAAA81E,SAAAh4E,QAEAkC,KAAAg2E,aAAA,MACA,GAOAH,EAAA50E,UAAA+zE,gBAAA,SAAAjJ,GACA,GAAA/rE,KAAAu1E,eAAArkF,OAAA,GAAA8O,KAAAm2E,WAAApK,GAAA,CACA,IACA9Q,EADA8Q,EAAAx7D,IACAwlC,UAYA,OAXA/1C,KAAAg2E,aAAA,KAEA/a,EAAAhW,gBACAgW,EAAA/W,UAAA6nB,EAAA1wD,WAAAgyD,UAAAx5E,QAEAmM,KAAA81E,UACA91E,KAAA81E,SAAAh4E,QAIAkC,KAAAq2E,WAAAr2E,KAAAu1E,eAAArkF,OAAA,GACA,EAEA,UAIA2kF,EAjJW,CAkJTf,cC5Ca2B,GAjGD,SAAA1B,GACd,SAAA2B,EAAAt6D,GAEA,IAAArc,EAAAqc,GAAA,GAEA24D,EAAA1hF,KAAA2M,KAAA,CACAo1E,SAAgBptB,GAAA,IAOhBhoD,KAAAm2E,WAAAp2E,EAAAq2E,UAAAr2E,EAAAq2E,UAA8DjC,GAM9Dn0E,KAAA22E,gBAAA37E,EAMAgF,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IAqEA,OAjEAowB,IAAA2B,EAAA1zE,UAAA+xE,GACA2B,EAAAz1E,UAAArN,OAAAqP,OAAA8xE,KAAA9zE,WACAy1E,EAAAz1E,UAAAiC,YAAAwzE,EAKAA,EAAAz1E,UAAAg0E,gBAAA,SAAAlJ,GACA,GAAS4I,GAAS5I,GAAlB,CAIA,IAAAx7D,EAAAw7D,EAAAx7D,IACA0qD,EAAA1qD,EAAAwlC,UACA,GAAAklB,EAAA9U,iBAAApyD,WAA2CsvD,GAAA,EAA3C,CAGA,IAAArvD,EAAAuc,EAAAmhB,UACA/+B,EAAAo5E,EAAA3Y,MACAjvC,EACApxB,KAAAk5B,MAAAj4B,EAAA,KAAArB,EAAA,GAAAA,EAAA,GAAAqB,EAAA,MACA,QAAAgH,IAAAgF,KAAA22E,WAAA,CACA,IAAAl4D,EAAA0F,EAAAnkB,KAAA22E,WACA5iF,EAAAknE,EAAApX,cACMyvB,GAAwBrY,EAAAlnE,EAAA0qB,GAE9Bze,KAAA22E,WAAAxyD,KAOAuyD,EAAAz1E,UAAAk0E,cAAA,SAAApJ,GACA,IAAS4I,GAAS5I,GAClB,SAGA,IACA9Q,EADA8Q,EAAAx7D,IACAwlC,UACAklB,EAAAlW,QAAiBC,GAAA,EAAQ74C,aAAA,GACzB,IAAApY,EAAAknE,EAAApX,cAEA,OADIp0C,GAAMwrD,EAAAlnE,OAAAiH,EAAAgF,KAAAwxE,YACV,GAOAkF,EAAAz1E,UAAA+zE,gBAAA,SAAAjJ,GACA,QAAS4I,GAAS5I,QAIVwI,GAAiBxI,KAAA/rE,KAAAm2E,WAAApK,MACzBA,EAAAx7D,IACAwlC,UAAAgP,QAA4BC,GAAA,EAAQ74C,YAAA,GACpCnM,KAAA22E,gBAAA37E,GACA,KAMA07E,EA9Fc,CA+FZ5B,wBCIa8B,GA1HF,SAAAtkE,GACb,SAAAukE,EAAA/9B,GACAxmC,EAAAjf,KAAA2M,MAMAA,KAAA82E,UAAA,KAMA92E,KAAAk/D,SAA8C73D,SAAAC,cAAA,OAC9CtH,KAAAk/D,SAAAvpC,MAAAwyB,SAAA,WACAnoD,KAAAk/D,SAAApmB,UAAA,UAAAA,EAMA94C,KAAA0gE,KAAA,KAMA1gE,KAAA+2E,YAAA,KAMA/2E,KAAAg3E,UAAA,KAoFA,OAhFA1kE,IAAAukE,EAAA7zE,UAAAsP,GACAukE,EAAA51E,UAAArN,OAAAqP,OAAAqP,KAAArR,WACA41E,EAAA51E,UAAAiC,YAAA2zE,EAKAA,EAAA51E,UAAA4R,gBAAA,WACA7S,KAAAka,OAAA,OAMA28D,EAAA51E,UAAAg2E,QAAA,WACA,IAAAC,EAAAl3E,KAAA+2E,YACAI,EAAAn3E,KAAAg3E,UAEArhD,EAAA31B,KAAAk/D,SAAAvpC,MACAA,EAAAgH,KAAA5pC,KAAAC,IAAAkkF,EAAA,GAAAC,EAAA,IAFA,KAGAxhD,EAAAs1C,IAAAl4E,KAAAC,IAAAkkF,EAAA,GAAAC,EAAA,IAHA,KAIAxhD,EAAApuB,MAAAxU,KAAAyE,IAAA2/E,EAAA,GAAAD,EAAA,IAJA,KAKAvhD,EAAAnuB,OAAAzU,KAAAyE,IAAA2/E,EAAA,GAAAD,EAAA,IALA,MAWAL,EAAA51E,UAAAiZ,OAAA,SAAA3J,GACA,GAAAvQ,KAAA0gE,KAAA,CACA1gE,KAAA0gE,KAAA+K,sBAAAvjE,YAAAlI,KAAAk/D,UACA,IAAAvpC,EAAA31B,KAAAk/D,SAAAvpC,MACAA,EAAAgH,KAAAhH,EAAAs1C,IAAAt1C,EAAApuB,MAAAouB,EAAAnuB,OAAA,UAEAxH,KAAA0gE,KAAAnwD,EACAvQ,KAAA0gE,MACA1gE,KAAA0gE,KAAA+K,sBAAAvsB,YAAAl/C,KAAAk/D,WAQA2X,EAAA51E,UAAAm2E,UAAA,SAAAF,EAAAC,GACAn3E,KAAA+2E,YAAAG,EACAl3E,KAAAg3E,UAAAG,EACAn3E,KAAAq3E,yBACAr3E,KAAAi3E,WAMAJ,EAAA51E,UAAAo2E,uBAAA,WACA,IAAAH,EAAAl3E,KAAA+2E,YACAI,EAAAn3E,KAAAg3E,UAOAlmF,EANA,CACAomF,EACA,CAAAA,EAAA,GAAAC,EAAA,IACAA,EACA,CAAAA,EAAA,GAAAD,EAAA,KAEA3mE,IAAAvQ,KAAA0gE,KAAApN,uBAAAtzD,KAAA0gE,MAEA5vE,EAAA,GAAAA,EAAA,GAAAO,QACA2O,KAAA82E,UAGA92E,KAAA82E,UAAA7nE,eAAA,CAAAne,IAFAkP,KAAA82E,UAAA,IAA2Bp/D,GAAA,EAAO,CAAA5mB,KASlC+lF,EAAA51E,UAAAy0B,YAAA,WACA,OAAA11B,KAAA82E,WAGAD,EAtHa,CAuHXS,GAAA,GCxFFC,GAMA,WANAA,GAaA,UAbAA,GAoBA,SASAC,GAAA,SAAAvsE,GACA,SAAAusE,EAAA38E,EAAAnJ,EAAAq6E,GACA9gE,EAAA5X,KAAA2M,KAAAnF,GAQAmF,KAAAtO,aAOAsO,KAAA+rE,kBAQA,OAJA9gE,IAAAusE,EAAAx0E,UAAAiI,GACAusE,EAAAv2E,UAAArN,OAAAqP,OAAAgI,KAAAhK,WACAu2E,EAAAv2E,UAAAiC,YAAAs0E,EAEAA,EAzBA,CA0BEvsE,EAAA,GCzBF,SAAAwsE,KACA,IAAAlnE,EAAAvQ,KAAAouE,SACAnT,EAAsD1qD,EAAAwlC,UACtD/hD,EAAmDuc,EAAAmhB,UACnD3gC,EAAAiP,KAAA01B,cAAAt0B,YAEA,GAAApB,KAAA03E,KAAA,CACA,IAAAC,EAAA1c,EAAA3U,gBAAAtyD,GACA4jF,EAAyBhkF,OAAAoT,GAAA,EAAApT,CAA6B,CACtD2c,EAAA+6D,uBAAiC13E,OAAAoT,GAAA,EAAApT,CAAa7C,IAC9Cwf,EAAA+6D,uBAAiC13E,OAAAoT,GAAA,EAAApT,CAAW7C,MAC5C8mF,EAAA5c,EAAAvU,uBAAAkxB,EAAA5jF,GAEIJ,OAAAoT,GAAA,EAAApT,CAAe+jF,EAAA,EAAAE,GACnB9mF,EAAA4mF,EAGA,IAAA7jF,EAAAmnE,EAAAzX,oBACAyX,EAAAvU,uBAAA31D,EAAAiD,IAEAH,EAAeD,OAAAoT,GAAA,EAAApT,CAAS7C,GACxB8C,EAAAonE,EAAAhV,gBAAApyD,GAEAonE,EAAAnX,QAAA,CACAhwD,aACAD,SACA8wD,SAAA3kD,KAAAwxE,UACAvwC,OAAYA,GAAA,IAKG,IAAA62C,GApEH,SAAAC,GACZ,SAAAC,EAAA57D,GACA,IAAArc,EAAAqc,GAAA,GAEAg6D,EAAAr2E,EAAAq2E,UAAAr2E,EAAAq2E,UAA4D3B,GAE5DsD,EAAA1kF,KAAA2M,KAAA,CACAo2E,YACAt9B,UAAA/4C,EAAA+4C,WAAA,cACA2+B,cAOAz3E,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IAMA3kD,KAAA03E,UAAA18E,IAAA+E,EAAAw+D,KAAAx+D,EAAAw+D,IAOA,OAJAwZ,IAAAC,EAAAh1E,UAAA+0E,GACAC,EAAA/2E,UAAArN,OAAAqP,OAAA80E,KAAA92E,WACA+2E,EAAA/2E,UAAAiC,YAAA80E,EAEAA,EA7BY,CD8ED,SAAAjD,GACX,SAAAgD,EAAA37D,GAEA24D,EAAA1hF,KAAA2M,MAEA,IAAAD,EAAAqc,GAAA,GAMApc,KAAAi4E,KAAA,IAAoBrB,GAAS72E,EAAA+4C,WAAA,cAM7B94C,KAAAk4E,cAAAl9E,IAAA+E,EAAA8+B,QAAA9+B,EAAA8+B,QAAA,GAOA7+B,KAAAm4E,UAAAp4E,EAAA03E,SAAA13E,EAAA03E,SAA2DzvB,GAAA,EAM3DhoD,KAAA+2E,YAAA,KAMA/2E,KAAAm2E,WAAAp2E,EAAAq2E,UAAAr2E,EAAAq2E,UAA8D9B,GAM9Dt0E,KAAAo4E,iBAAAr4E,EAAAs4E,gBACAt4E,EAAAs4E,gBAAAr4E,KAAAs4E,uBAoFA,OAjFAvD,IAAAgD,EAAA/0E,UAAA+xE,GACAgD,EAAA92E,UAAArN,OAAAqP,OAAA8xE,KAAA9zE,WACA82E,EAAA92E,UAAAiC,YAAA60E,EAWAA,EAAA92E,UAAAq3E,uBAAA,SAAAvM,EAAAmL,EAAAC,GACA,IAAA5vE,EAAA4vE,EAAA,GAAAD,EAAA,GACA1vE,EAAA2vE,EAAA,GAAAD,EAAA,GACA,OAAA3vE,IAAAC,KAAAxH,KAAAk4E,UAQAH,EAAA92E,UAAAy0B,YAAA,WACA,OAAA11B,KAAAi4E,KAAAviD,eAMAqiD,EAAA92E,UAAAg0E,gBAAA,SAAAlJ,GACS4I,GAAS5I,KAIlB/rE,KAAAi4E,KAAAb,UAAAp3E,KAAA+2E,YAAAhL,EAAA3Y,OAEApzD,KAAA6L,cAAA,IAAA2rE,GAAAD,GACAxL,EAAAr6E,WAAAq6E,MAMAgM,EAAA92E,UAAAk0E,cAAA,SAAApJ,GACA,OAAS4I,GAAS5I,KAIlB/rE,KAAAi4E,KAAA/9D,OAAA,MAEAla,KAAAo4E,iBAAArM,EAAA/rE,KAAA+2E,YAAAhL,EAAA3Y,SACApzD,KAAAm4E,UAAApM,GACA/rE,KAAA6L,cAAA,IAAA2rE,GAAAD,GACAxL,EAAAr6E,WAAAq6E,MAEA,IAMAgM,EAAA92E,UAAA+zE,gBAAA,SAAAjJ,GACA,QAAS4I,GAAS5I,QAIVwI,GAAiBxI,KACzB/rE,KAAAm2E,WAAApK,MACA/rE,KAAA+2E,YAAAhL,EAAA3Y,MACApzD,KAAAi4E,KAAA/9D,OAAA6xD,EAAAx7D,KACAvQ,KAAAi4E,KAAAb,UAAAp3E,KAAA+2E,YAAA/2E,KAAA+2E,aACA/2E,KAAA6L,cAAA,IAAA2rE,GAAAD,GACAxL,EAAAr6E,WAAAq6E,KACA,KAMAgM,EA/HW,CAgITjD,KEtOayD,GAAA,CACfpmF,KAAA,GACAqmF,GAAA,GACApmF,MAAA,GACAqmF,KAAA,ICiFA,SAASC,GAAW3M,GACpB,IAAAgI,GAAA,EACA,GAAAhI,EAAAlxE,MAA8B0lC,EAAA,EAASvnC,QAAA,CACvC,IACA2/E,EAD4C5M,EAAA,cAC5C4M,QACA,GAAA34E,KAAAm2E,WAAApK,KACA4M,GAAoBJ,GAAOE,MAC3BE,GAAmBJ,GAAOpmF,MAC1BwmF,GAAmBJ,GAAOnmF,OAC1BumF,GAAmBJ,GAAOC,IAAA,CAC1B,IACAvd,EADA8Q,EAAAx7D,IACAwlC,UACA6iC,EAAA3d,EAAAl0C,gBAAA/mB,KAAA64E,YACA3jF,EAAA,EAAAC,EAAA,EACAwjF,GAAqBJ,GAAOE,KAC5BtjF,GAAAyjF,EACOD,GAAqBJ,GAAOpmF,KACnC+C,GAAA0jF,EACOD,GAAqBJ,GAAOnmF,MACnC8C,EAAA0jF,EAEAzjF,EAAAyjF,EAEA,IAAAn6D,EAAA,CAAAvpB,EAAAC,GACMvB,OAAA2iF,GAAA,EAAA3iF,CAAgB6qB,EAAAw8C,EAAApX,eVLf,SAAAoX,EAAAx8C,EAAA40D,GACP,IAAAztB,EAAAqV,EAAAprE,YACA,GAAA+1D,EAAA,CACA,IAAA/xD,EAAAonE,EAAAhV,gBACA,CAAAL,EAAA,GAAAnnC,EAAA,GAAAmnC,EAAA,GAAAnnC,EAAA,KACA40D,EACApY,EAAAnX,QAAA,CACAa,SAAA0uB,EACApyC,OAAgBA,GAAA,EAChBptC,WAGAonE,EAAA/W,UAAArwD,IUNMilF,CAAG7d,EAAAx8C,EAAAze,KAAAwxE,WACTzF,EAAAh/D,iBACAgnE,GAAA,GAGA,OAAAA,EAGe,IAAAgF,GA1FA,SAAApF,GACf,SAAAqF,EAAA58D,GAEAu3D,EAAAtgF,KAAA2M,KAAA,CACAksE,YAAmBwM,KAGnB,IAAA34E,EAAAqc,GAAA,GAOApc,KAAAi5E,kBAAA,SAAAlN,GACA,OAAayI,GAAczI,IACnB2I,GAAiB3I,IAOzB/rE,KAAAm2E,gBAAAn7E,IAAA+E,EAAAq2E,UACAr2E,EAAAq2E,UAAAp2E,KAAAi5E,kBAMAj5E,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IAMA3kD,KAAA64E,iBAAA79E,IAAA+E,EAAAm5E,WACAn5E,EAAAm5E,WAAA,IAQA,OAJAvF,IAAAqF,EAAAh2E,UAAA2wE,GACAqF,EAAA/3E,UAAArN,OAAAqP,OAAA0wE,KAAA1yE,WACA+3E,EAAA/3E,UAAAiC,YAAA81E,EAEAA,EA7Ce,CA8CbtF,ICLF,SAASyF,GAAWpN,GACpB,IAAAgI,GAAA,EACA,GAAAhI,EAAAlxE,MAA8B0lC,EAAA,EAASvnC,SACvC+yE,EAAAlxE,MAA8B0lC,EAAA,EAAStnC,SAAA,CACvC,IACAk1C,EAD4C49B,EAAA,cAC5C59B,SACA,GAAAnuC,KAAAm2E,WAAApK,KACA59B,GAAA,IAAAE,WAAA,IAAAF,GAAA,IAAAE,WAAA,KACA,IAAA99B,EAAAw7D,EAAAx7D,IACAkO,EAAA0vB,GAAA,IAAAE,WAAA,GAAAruC,KAAAg0E,QAAAh0E,KAAAg0E,OAEMR,GADNjjE,EAAAwlC,UACiBt3B,OAAAzjB,EAAAgF,KAAAwxE,WACjBzF,EAAAh/D,iBACAgnE,GAAA,GAGA,OAAAA,EAGe,IAAAqF,GAhEC,SAAAzF,GAChB,SAAA0F,EAAAj9D,GAEAu3D,EAAAtgF,KAAA2M,KAAA,CACAksE,YAAmBiN,KAGnB,IAAAp5E,EAAAqc,GAAA,GAMApc,KAAAm2E,WAAAp2E,EAAAq2E,UAAAr2E,EAAAq2E,UAA8D1B,GAM9D10E,KAAAg0E,OAAAj0E,EAAA0e,MAAA1e,EAAA0e,MAAA,EAMAze,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IAQA,OAJAgvB,IAAA0F,EAAAr2E,UAAA2wE,GACA0F,EAAAp4E,UAAArN,OAAAqP,OAAA0wE,KAAA1yE,WACAo4E,EAAAp4E,UAAAiC,YAAAm2E,EAEAA,EAjCgB,CAkCd3F,IC5CK4F,GACP,WADOA,GAEP,QAkSeC,GAxQG,SAAA5F,GAClB,SAAA6F,EAAAp9D,GAEA,IAAArc,EAAAqc,GAAA,GAEAu3D,EAAAtgF,KAA8E2M,KAAA,GAM9EA,KAAAg0E,OAAA,EAMAh0E,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IAMA3kD,KAAAy5E,cAAAz+E,IAAA+E,EAAA25E,QAAA35E,EAAA25E,QAAA,GAMA15E,KAAA25E,gBAAA3+E,IAAA+E,EAAA65E,WAAA75E,EAAA65E,UAMA55E,KAAA65E,qBAAA95E,EAAAyjD,sBAAA,EAMAxjD,KAAAm2E,WAAAp2E,EAAAq2E,UAAAr2E,EAAAq2E,UAA8D9B,GAM9Dt0E,KAAA85E,YAAA,KAMA95E,KAAA+5E,gBAAA/+E,EAMAgF,KAAAg6E,WAMAh6E,KAAAi6E,WAAAj/E,EAOAgF,KAAAk6E,kBAAA,IAKAl6E,KAAAm6E,mBAOAn6E,KAAAo6E,sBAAA,IAOAp6E,KAAAq6E,oBAAA,IA0KA,OAtKA1G,IAAA6F,EAAAx2E,UAAA2wE,GACA6F,EAAAv4E,UAAArN,OAAAqP,OAAA0wE,KAAA1yE,WACAu4E,EAAAv4E,UAAAiC,YAAAs2E,EAKAA,EAAAv4E,UAAAq5E,0BAAA,WACAt6E,KAAAm6E,wBAAAn/E,EACAgF,KAAAouE,SAAAr4B,UACAgP,QAAiBC,GAAA,EAAQ74C,aAAA,IAQzBqtE,EAAAv4E,UAAAirE,YAAA,SAAAH,GACA,IAAA/rE,KAAAm2E,WAAApK,GACA,SAEA,IAAAlxE,EAAAkxE,EAAAlxE,KACA,GAAAA,IAAiB0lC,EAAA,EAAS1mC,OAAAgB,IAAmB0lC,EAAA,EAAShnC,WACtD,SAGAwyE,EAAAh/D,iBAEA,IASA0R,EATAlO,EAAAw7D,EAAAx7D,IACAgqE,EAA2CxO,EAAA,cAyB3C,GAvBA/rE,KAAA25E,aACA35E,KAAA85E,YAAA/N,EAAAr6E,YAMAq6E,EAAAlxE,MAAgC0lC,EAAA,EAAS1mC,OACzC4kB,EAAA87D,EAAAplF,OACUw+D,GACV4mB,EAAAC,YAAAC,WAAAC,kBACAj8D,GAAiBs1C,GAEjBwmB,EAAAC,YAAAC,WAAAE,iBACAl8D,GAAA,KAEKstD,EAAAlxE,MAAkC0lC,EAAA,EAAShnC,aAChDklB,GAAA87D,EAAAK,YACUhnB,IACVn1C,GAAA,IAIA,IAAAA,EACA,SAGA,IAAA8lC,EAAAD,KAAAC,MAYA,QAVAvpD,IAAAgF,KAAA+5E,aACA/5E,KAAA+5E,WAAAx1B,KAGAvkD,KAAAi6E,OAAA11B,EAAAvkD,KAAA+5E,WAAA/5E,KAAAk6E,qBACAl6E,KAAAi6E,MAAAlnF,KAAAyE,IAAAinB,GAAA,EACA66D,GACAA,IAGAt5E,KAAAi6E,QAAAX,GAAA,CACA,IAAAre,EAAA1qD,EAAAwlC,UACA/1C,KAAAm6E,mBACAvc,aAAA59D,KAAAm6E,oBAEAlf,EAAAlW,QAAqBC,GAAA,EAAQ74C,YAAA,GAE7BnM,KAAAm6E,mBAAAlyC,WAAAjoC,KAAAs6E,0BAAA31C,KAAA3kC,WAAAk6E,mBACA,IAAApmF,EAAAmnE,EAAAl0C,gBAAAh0B,KAAAka,IAAA,EAAAwR,EAAAze,KAAAo6E,uBACA1+D,EAAAu/C,EAAAzmC,mBACA7Y,EAAAs/C,EAAA1mC,mBACAsmD,EAAA,EAQA,GAPA/mF,EAAA4nB,GACA5nB,EAAAf,KAAAE,IAAAa,EAAA4nB,EAAA1b,KAAAq6E,qBACAQ,EAAA,GACO/mF,EAAA6nB,IACP7nB,EAAAf,KAAAC,IAAAc,EAAA6nB,EAAA3b,KAAAq6E,qBACAQ,GAAA,GAEA76E,KAAA85E,YAAA,CACA,IAAAjmF,EAAAonE,EAAAxV,oBAAA3xD,EAAAkM,KAAA85E,aACA7e,EAAA/W,UAAA+W,EAAAhV,gBAAApyD,IA6BA,OA3BAonE,EAAAhT,cAAAn0D,GAEA,IAAA+mF,GAAA76E,KAAA65E,sBACA5e,EAAAnX,QAAA,CACAhwD,WAAAmnE,EAAAzX,oBAAA1vD,EAAA2qB,EAAA,QACAwiB,OAAkBA,GAAA,EAClBvxB,OAAA1P,KAAA85E,YACAn1B,SAAA3kD,KAAAwxE,YAIAqJ,EAAA,EACA5f,EAAAnX,QAAA,CACAhwD,WAAA4nB,EACAulB,OAAkBA,GAAA,EAClBvxB,OAAA1P,KAAA85E,YACAn1B,SAAA,MAEOk2B,EAAA,GACP5f,EAAAnX,QAAA,CACAhwD,WAAA6nB,EACAslB,OAAkBA,GAAA,EAClBvxB,OAAA1P,KAAA85E,YACAn1B,SAAA,MAGA3kD,KAAA+5E,WAAAx1B,GACA,EAGAvkD,KAAAg0E,QAAAv1D,EAEA,IAAAq8D,EAAA/nF,KAAAE,IAAA+M,KAAAy5E,UAAAl1B,EAAAvkD,KAAA+5E,YAAA,GAKA,OAHAnc,aAAA59D,KAAAg6E,YACAh6E,KAAAg6E,WAAA/xC,WAAAjoC,KAAA+6E,iBAAAp2C,KAAA3kC,KAAAuQ,GAAAuqE,IAEA,GAOAtB,EAAAv4E,UAAA85E,iBAAA,SAAAxqE,GACA,IAAA0qD,EAAA1qD,EAAAwlC,UACAklB,EAAAhW,gBACAgW,EAAA9V,mBAIIquB,GAAWvY,GADCrnE,OAAAmP,GAAA,EAAAnP,CAAKoM,KAAAg0E,QAjRrB,KAkReh0E,KAAA85E,YAAA95E,KAAAwxE,WACfxxE,KAAAi6E,WAAAj/E,EACAgF,KAAAg0E,OAAA,EACAh0E,KAAA85E,YAAA,KACA95E,KAAA+5E,gBAAA/+E,EACAgF,KAAAg6E,gBAAAh/E,GASAw+E,EAAAv4E,UAAA+5E,eAAA,SAAApB,GACA55E,KAAA25E,WAAAC,EACAA,IACA55E,KAAA85E,YAAA,OAIAN,EArQkB,CAsQhB9F,ICjJauH,GA/IA,SAAAlG,GACf,SAAAmG,EAAA9+D,GAEA,IAAArc,EAAAqc,GAAA,GAEA++D,EAAmE,EAEnEA,EAAA/F,WACA+F,EAAA/F,SAAgCptB,GAAA,GAGhC+sB,EAAA1hF,KAAA2M,KAAAm7E,GAMAn7E,KAAAo7E,QAAA,KAMAp7E,KAAA22E,gBAAA37E,EAMAgF,KAAAq7E,WAAA,EAMAr7E,KAAAs7E,eAAA,EAMAt7E,KAAAu7E,gBAAAvgF,IAAA+E,EAAAy7E,UAAAz7E,EAAAy7E,UAAA,GAMAx7E,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IA6FA,OAzFAowB,IAAAmG,EAAAl4E,UAAA+xE,GACAmG,EAAAj6E,UAAArN,OAAAqP,OAAA8xE,KAAA9zE,WACAi6E,EAAAj6E,UAAAiC,YAAAg4E,EAKAA,EAAAj6E,UAAAg0E,gBAAA,SAAAlJ,GACA,IAAA0P,EAAA,EAEAC,EAAA17E,KAAAu1E,eAAA,GACAoG,EAAA37E,KAAAu1E,eAAA,GAGAprE,EAAApX,KAAAk5B,MACA0vD,EAAAhkB,QAAA+jB,EAAA/jB,QACAgkB,EAAAjkB,QAAAgkB,EAAAhkB,SAEA,QAAA18D,IAAAgF,KAAA22E,WAAA,CACA,IAAAl4D,EAAAtU,EAAAnK,KAAA22E,WACA32E,KAAAs7E,gBAAA78D,GACAze,KAAAq7E,WACAtoF,KAAAyE,IAAAwI,KAAAs7E,gBAAAt7E,KAAAu7E,aACAv7E,KAAAq7E,WAAA,GAEAI,EAAAh9D,EAEAze,KAAA22E,WAAAxsE,EAEA,IAAAoG,EAAAw7D,EAAAx7D,IACA0qD,EAAA1qD,EAAAwlC,UACA,GAAAklB,EAAA9U,iBAAApyD,WAA2CsvD,GAAA,EAA3C,CAOA,IAAAynB,EAAAv6D,EAAAywD,cAAA+J,wBACAuL,EAAmB1B,GAAoB50E,KAAAu1E,gBAMvC,GALAe,EAAA,IAAAxL,EAAAnuC,KACA25C,EAAA,IAAAxL,EAAAG,IACAjrE,KAAAo7E,QAAA7qE,EAAA+iD,uBAAAgjB,GAGAt2E,KAAAq7E,UAAA,CACA,IAAAtnF,EAAAknE,EAAApX,cACAtzC,EAAAiL,SACM83D,GAAwBrY,EAAAlnE,EAAA0nF,EAAAz7E,KAAAo7E,YAO9BF,EAAAj6E,UAAAk0E,cAAA,SAAApJ,GACA,GAAA/rE,KAAAu1E,eAAArkF,OAAA,GACA,IACA+pE,EADA8Q,EAAAx7D,IACAwlC,UAEA,GADAklB,EAAAlW,QAAmBC,GAAA,EAAQ74C,aAAA,GAC3BnM,KAAAq7E,UAAA,CACA,IAAAtnF,EAAAknE,EAAApX,cACQp0C,GAAMwrD,EAAAlnE,EAAAiM,KAAAo7E,QAAAp7E,KAAAwxE,WAEd,SAEA,UAOA0J,EAAAj6E,UAAA+zE,gBAAA,SAAAjJ,GACA,GAAA/rE,KAAAu1E,eAAArkF,QAAA,GACA,IAAAqf,EAAAw7D,EAAAx7D,IAQA,OAPAvQ,KAAAo7E,QAAA,KACAp7E,KAAA22E,gBAAA37E,EACAgF,KAAAq7E,WAAA,EACAr7E,KAAAs7E,eAAA,EACAt7E,KAAAq1E,wBACA9kE,EAAAwlC,UAAAgP,QAA8BC,GAAA,EAAQ74C,YAAA,IAEtC,EAEA,UAIA+uE,EA5Ie,CA6IbpG,ICEa8G,GAhJF,SAAA7G,GACb,SAAA8G,EAAAz/D,GAEA,IAAArc,EAAAqc,GAAA,GAEA++D,EAAmE,EAEnEA,EAAA/F,WACA+F,EAAA/F,SAAgCptB,GAAA,GAGhC+sB,EAAA1hF,KAAA2M,KAAAm7E,GAMAn7E,KAAA65E,qBAAA95E,EAAAyjD,sBAAA,EAMAxjD,KAAAo7E,QAAA,KAMAp7E,KAAAwxE,eAAAx2E,IAAA+E,EAAA4kD,SAAA5kD,EAAA4kD,SAAA,IAMA3kD,KAAA87E,mBAAA9gF,EAMAgF,KAAA+7E,gBAAA,EAoGA,OAhGAhH,IAAA8G,EAAA74E,UAAA+xE,GACA8G,EAAA56E,UAAArN,OAAAqP,OAAA8xE,KAAA9zE,WACA46E,EAAA56E,UAAAiC,YAAA24E,EAKAA,EAAA56E,UAAAg0E,gBAAA,SAAAlJ,GACA,IAAAiQ,EAAA,EAEAN,EAAA17E,KAAAu1E,eAAA,GACAoG,EAAA37E,KAAAu1E,eAAA,GACA/jF,EAAAkqF,EAAAhkB,QAAAikB,EAAAjkB,QACAjmE,EAAAiqF,EAAA/jB,QAAAgkB,EAAAhkB,QAGAzrC,EAAAn5B,KAAAyjB,KAAAhlB,IAAAC,UAEAuJ,IAAAgF,KAAA87E,gBACAE,EAAAh8E,KAAA87E,cAAA5vD,GAEAlsB,KAAA87E,cAAA5vD,EAGA,IAAA3b,EAAAw7D,EAAAx7D,IACA0qD,EAAA1qD,EAAAwlC,UACAjiD,EAAAmnE,EAAAl0C,gBACApL,EAAAs/C,EAAA1mC,mBACA7Y,EAAAu/C,EAAAzmC,mBACA69C,EAAAv+E,EAAAkoF,EACA3J,EAAA12D,GACAqgE,EAAArgE,EAAA7nB,EACAu+E,EAAA12D,GACK02D,EAAA32D,IACLsgE,EAAAtgE,EAAA5nB,EACAu+E,EAAA32D,GAGA,GAAAsgE,IACAh8E,KAAA+7E,gBAAAC,GAIA,IAAAlR,EAAAv6D,EAAAywD,cAAA+J,wBACAuL,EAAmB1B,GAAoB50E,KAAAu1E,gBACvCe,EAAA,IAAAxL,EAAAnuC,KACA25C,EAAA,IAAAxL,EAAAG,IACAjrE,KAAAo7E,QAAA7qE,EAAA+iD,uBAAAgjB,GAGA/lE,EAAAiL,SACIi4D,GAAsBxY,EAAAoX,EAAAryE,KAAAo7E,UAM1BS,EAAA56E,UAAAk0E,cAAA,SAAApJ,GACA,GAAA/rE,KAAAu1E,eAAArkF,OAAA,GACA,IACA+pE,EADA8Q,EAAAx7D,IACAwlC,UACAklB,EAAAlW,QAAmBC,GAAA,EAAQ74C,aAAA,GAC3B,IAAArY,EAAAmnE,EAAAl0C,gBACA,GAAA/mB,KAAA65E,sBACA/lF,EAAAmnE,EAAAzmC,oBACA1gC,EAAAmnE,EAAA1mC,mBAAA,CAIA,IAAA32B,EAAAoC,KAAA+7E,gBAAA,Gd2CO,SAAA9gB,EAAAnnE,EAAA8b,EAAAyjE,EAAAhrD,GACPv0B,EAAAmnE,EAAAzX,oBAAA1vD,EAAA,EAAAu0B,GACAorD,GAAAxY,EAAAnnE,EAAA8b,EAAAyjE,Gc5CQ5sD,CAAIw0C,EAAAnnE,EAAAkM,KAAAo7E,QAAAp7E,KAAAwxE,UAAA5zE,GAEZ,SAEA,UAOAi+E,EAAA56E,UAAA+zE,gBAAA,SAAAjJ,GACA,GAAA/rE,KAAAu1E,eAAArkF,QAAA,GACA,IAAAqf,EAAAw7D,EAAAx7D,IAOA,OANAvQ,KAAAo7E,QAAA,KACAp7E,KAAA87E,mBAAA9gF,EACAgF,KAAA+7E,gBAAA,EACA/7E,KAAAq1E,wBACA9kE,EAAAwlC,UAAAgP,QAA8BC,GAAA,EAAQ74C,YAAA,IAEtC,EAEA,UAIA0vE,EA7Ia,CA8IX/G,kBC3JEmH,GAAS,SAAAnqD,GACb,SAAAoqD,EAAAnrF,EAAA+C,EAAAi6B,EAAAmG,GAEApC,EAAAz+B,KAAA2M,MAMAA,KAAAjP,SAMAiP,KAAA2mC,YAAA5Y,EAMA/tB,KAAAlM,aAMAkM,KAAAk0B,QA2DA,OAvDApC,IAAAoqD,EAAAl5E,UAAA8uB,GACAoqD,EAAAj7E,UAAArN,OAAAqP,OAAA6uB,KAAA7wB,WACAi7E,EAAAj7E,UAAAiC,YAAAg5E,EAKAA,EAAAj7E,UAAAuO,QAAA,WACAxP,KAAA6L,cAAuB00B,EAAA,EAAShoC,SAMhC2jF,EAAAj7E,UAAAG,UAAA,WACA,OAAApB,KAAAjP,QAOAmrF,EAAAj7E,UAAAkhC,SAAA,WACA,OAAWvuC,OAAAk2C,EAAA,EAAAl2C,IAMXsoF,EAAAj7E,UAAAk7E,cAAA,WACA,OAAAn8E,KAAA2mC,aAMAu1C,EAAAj7E,UAAA8lB,cAAA,WACA,OAA6B/mB,KAAA,YAM7Bk8E,EAAAj7E,UAAA6Z,SAAA,WACA,OAAA9a,KAAAk0B,OAOAgoD,EAAAj7E,UAAAo8B,KAAA,WACIzpC,OAAAk2C,EAAA,EAAAl2C,IAGJsoF,EAtFa,CAuFX7pE,EAAA,GC1Fa+pE,GAAA,CACfhwE,KAAA,EACAC,QAAA,EACAC,OAAA,EACAvT,MAAA,GCmFesjF,GA7EA,SAAAH,GACf,SAAAI,EAAAvrF,EAAA+C,EAAAi6B,EAAA3mB,EAAAm1E,GAEA,IAAAroD,OAAAl5B,IAAAuhF,EAA2CH,GAAUhwE,KAAQgwE,GAAU9vE,OAEvE4vE,EAAA7oF,KAAA2M,KAAAjP,EAAA+C,EAAAi6B,EAAAmG,GAOAl0B,KAAAw8E,aAAAxhF,IAAAuhF,IAAA,KAMAv8E,KAAA6mC,QAAAz/B,EAMApH,KAAAy8E,OAAA,KAiDA,OA7CAP,IAAAI,EAAAt5E,UAAAk5E,GACAI,EAAAr7E,UAAArN,OAAAqP,OAAAi5E,KAAAj7E,WACAq7E,EAAAr7E,UAAAiC,YAAAo5E,EAMAA,EAAAr7E,UAAAy7E,SAAA,WACA,OAAA18E,KAAAy8E,QAQAH,EAAAr7E,UAAA07E,YAAA,SAAAC,GACAA,GACA58E,KAAAy8E,OAAAG,EACA58E,KAAAk0B,MAAmBkoD,GAAUrjF,OAE7BiH,KAAAk0B,MAAmBkoD,GAAU9vE,OAE7BtM,KAAAwP,WAMA8sE,EAAAr7E,UAAAo8B,KAAA,WACAr9B,KAAAk0B,OAAsBkoD,GAAUhwE,OAChCpM,KAAAk0B,MAAmBkoD,GAAU/vE,QAC7BrM,KAAAwP,UACAxP,KAAAw8E,QAAAx8E,KAAA28E,YAAAh4C,KAAA3kC,SAOAs8E,EAAAr7E,UAAAkhC,SAAA,WACA,OAAAniC,KAAA6mC,SAGAy1C,EAzEe,CFmFA,cGtFAO,GACf,QCmCeC,GA5Cf,SAAA7xE,GACA,SAAA8xE,EAAAliF,EAAAmiF,EAAAlqB,EAAAmqB,EAAAC,GAEAjyE,EAAA5X,KAAA2M,KAAAnF,GAOAmF,KAAAm9E,cAAAH,EAOAh9E,KAAAqb,WAAAy3C,EAQA9yD,KAAAquB,QAAA4uD,EAQAj9E,KAAAo9E,UAAAF,EAQA,OAJAjyE,IAAA8xE,EAAA/5E,UAAAiI,GACA8xE,EAAA97E,UAAArN,OAAAqP,OAAAgI,KAAAhK,WACA87E,EAAA97E,UAAAiC,YAAA65E,EAEAA,EAzCA,CA0CE9xE,EAAA,aCyCKoyE,GAAA,UAcAC,GAAA,GA4BAC,GAAA,UAqBAC,GAAA,UAgBAC,GAAA,IAAqB5rD,GAAA,EAMrB6rD,GAAA,GAMPC,GAAA,KAMOC,GAAA,GAOAC,GAAA,WACP,IAMAC,EAAAC,EANAC,EAAA,GACAC,EAAAP,GACA1pF,EAAA,QACAkqF,EAAA,sBACA7qD,EAAA6qD,EAAAhtF,OACAkvB,EAAA,2BAGA,SAAA+9D,EAAAzP,GAIA,IAHA,IAAArgD,EAAA+vD,KAGAC,EAAA,IAA0BA,GAAA,IAAeA,GAAA,KAGzC,IAFA,IAAAC,EAAAD,EAAA,IACAE,GAAA,EACAvtF,EAAA,EAAqBA,EAAAqiC,IAASriC,EAAA,CAC9B,IAAAwtF,EAAAN,EAAAltF,GAGA,GAFAq9B,EAAAqgD,KAAA4P,EAAAtqF,EAAAwqF,EACAT,EAAA1vD,EAAAowD,YAAAr+D,GAAA7Y,MACAmnE,GAAA8P,EAAA,CACAnwD,EAAAqgD,KAAA4P,EAAAtqF,EAAA06E,EAAA,IAAA8P,EACA,IAAAj3E,EAAA8mB,EAAAowD,YAAAr+D,GAAA7Y,MAGAg3E,KAAAh3E,GAAAw2E,GAGA,GAAAQ,EAIA,SAGA,SAGA,SAAAG,IACA,IAAAC,GAAA,EACA,QAAAjQ,KAAAuP,EACAA,EAAAvP,GAAAsP,IACAG,EAAAzP,IACAuP,EAAAvP,GAAAsP,EACUpqF,OAAA0C,GAAA,EAAA1C,CAAKgqF,IAEfD,GAAA,KACAF,GAAAvhF,YAEA+hF,EAAAvP,GACAiQ,GAAA,IAIAA,IACAC,cAAAd,GACAA,OAAA9iF,GAIA,gBAAA6jF,GACA,IAAAC,EAAuBrQ,GAAeoQ,GACtC,GAAAC,EAGA,QAAA9tF,EAAA,EAAAC,EAAA6tF,EAAA5tF,OAA6CF,EAAAC,IAAQD,EAAA,CACrD,IAAA49E,EAAAkQ,EAAA9tF,GACA49E,KAAAqP,IACAA,EAAArP,GAAAoP,EACAG,EAAAvP,KACAqP,EAAArP,GAAA,OACA5zE,IAAA8iF,IACAA,EAAAiB,YAAAL,EAAA,SAxEO,GAoFP,SAAAN,KAIA,OAHAT,KACAA,GAAqB/pF,OAAA0tC,GAAA,EAAA1tC,CAAqB,MAE1C+pF,GAQO,IACPqB,GACAC,GAFOC,IAEPD,GAAArB,GACA,SAAAlP,GACA,IAAAlnE,EAAAy3E,GAAAvQ,GAcA,OAbA1zE,MAAAwM,IACAw3E,MACAA,GAAA33E,SAAAC,cAAA,SACAmZ,YAAA,IACAu+D,GAAArpD,MAAAkK,OAAAm/C,GAAArpD,MAAA0xB,QAAA,eACA23B,GAAArpD,MAAAwyB,SAAA,sBACA62B,GAAArpD,MAAAgH,KAAA,uBAEAqiD,GAAArpD,MAAA+4C,OACArnE,SAAA4sC,KAAAiL,YAAA8/B,IACAx3E,EAAAy3E,GAAAvQ,GAAAsQ,GAAAlR,aACAzmE,SAAA4sC,KAAA/rC,YAAA82E,KAEAx3E,IAUO,SAAA23E,GAAAzQ,EAAAtuD,GACP,IAAAu9D,EAAAS,KAIA,OAHA1P,GAAAiP,EAAAjP,OACAiP,EAAAjP,QAEAiP,EAAAc,YAAAr+D,GAAA7Y,MAUO,SAAA63E,GAAA/wD,EAAAt6B,EAAAsrF,EAAAC,GACP,IAAAvrF,IACAs6B,EAAA7lB,UAAA62E,EAAAC,GACAjxD,EAAA5e,OAAA1b,GACAs6B,EAAA7lB,WAAA62E,GAAAC,IAKO,IAAAC,GAAqB3rF,OAAAyzE,GAAA,EAAAzzE,GAgBrB,SAAAo7B,GAAAX,EACPznB,EAAAotB,EAAA/E,EAAAuwD,EAAAC,EAAAC,EAAA92C,EAAAt3C,EAAAC,EAAAgX,GACA,IAAAo3E,EACA,GAAA3rD,IACA2rD,EAAAtxD,EAAAuxD,YACAvxD,EAAAuxD,YAAAD,EAAA3rD,GAEAptB,GACAynB,EAAAwxD,aAAA9pF,MAAAs4B,EAAAznB,GAGAynB,EAAAW,UAAAC,EAAAuwD,EAAAC,EAAAC,EAAA92C,EAAAt3C,EAAAC,EAAAmuF,EAAAn3E,EAAAqgC,EAAArgC,GAEAo3E,IACAtxD,EAAAuxD,YAAAD,GAEA/4E,GACAynB,EAAAwxD,aAAA9pF,MAAAs4B,EAAAkxD,IC/VA,IAAAO,GAAA,oDASAC,GAAA,cASO,SAAAC,GAAAC,GACP,uBAAAA,EACAA,EAEWC,GAAQD,IA2BZ,WAWP,IAKA57E,EAAA,GAKAomC,EAAA,EArBO,GA4HA,SAAA01C,GAAAF,GAKP,OAJAA,EAAA,GAAarsF,OAAAmP,GAAA,EAAAnP,CAAKqsF,EAAA,eAClBA,EAAA,GAAarsF,OAAAmP,GAAA,EAAAnP,CAAKqsF,EAAA,eAClBA,EAAA,GAAarsF,OAAAmP,GAAA,EAAAnP,CAAKqsF,EAAA,eAClBA,EAAA,GAAarsF,OAAAmP,GAAA,EAAAnP,CAAKqsF,EAAA,QAClBA,EAQO,SAASC,GAAQD,GACxB,IAAAxoF,EAAAwoF,EAAA,GACAxoF,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAA2oF,EAAAH,EAAA,GACAG,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAA9nF,EAAA2nF,EAAA,GAKA,OAJA3nF,IAAA,EAAAA,KACAA,IAAA,MAGA,QAAAb,EAAA,IAAA2oF,EAAA,IAAA9nF,EAAA,UADA0C,IAAAilF,EAAA,KAAAA,EAAA,IACA,ICvMO,SAAAI,GAAAJ,GACP,OAAAloF,MAAAkG,QAAAgiF,GACWC,GAAQD,GAEnBA,oCClBIK,GAAa,aAEjBA,GAAar/E,UAAAs/E,WAAA,SAAArkE,EAAAe,EAAAujE,KAObF,GAAar/E,UAAAw/E,aAAA,SAAAvkE,KAObokE,GAAar/E,UAAA8pB,SAAA,SAAA4K,KAMb2qD,GAAar/E,UAAAy/E,WAAA,SAAAC,EAAA1jE,KAMbqjE,GAAar/E,UAAA2/E,YAAA,SAAA3jE,EAAA0Y,KAMb2qD,GAAar/E,UAAA4/E,uBAAA,SAAAC,EAAA7jE,KAMbqjE,GAAar/E,UAAA8/E,eAAA,SAAAC,EAAA/jE,KAMbqjE,GAAar/E,UAAAggF,oBAAA,SAAAC,EAAAjkE,KAMbqjE,GAAar/E,UAAAkgF,eAAA,SAAAC,EAAAnkE,KAMbqjE,GAAar/E,UAAAogF,iBAAA,SAAAC,EAAArkE,KAMbqjE,GAAar/E,UAAAsgF,UAAA,SAAAC,EAAAvkE,KAMbqjE,GAAar/E,UAAAwgF,YAAA,SAAAC,EAAAzkE,KAMbqjE,GAAar/E,UAAA0gF,SAAA,SAAAzlE,EAAAe,KAMbqjE,GAAar/E,UAAA2gF,mBAAA,SAAArgD,EAAA/Q,KAMb8vD,GAAar/E,UAAA4gF,cAAA,SAAAC,EAAAC,KAMbzB,GAAar/E,UAAA+gF,aAAA,SAAAC,EAAAF,KAEE,IAAAG,GAAA,GCyzBAC,GAx4BY,SAAAC,GAC3B,SAAAC,EAAAh0D,EAAAN,EAAAh9B,EAAA6V,EAAA07E,GACAF,EAAA/uF,KAAA2M,MAMAA,KAAAuiF,SAAAl0D,EAMAruB,KAAA2mC,YAAA5Y,EAMA/tB,KAAAI,QAAArP,EAMAiP,KAAAwiF,WAAA57E,EAMA5G,KAAAyiF,cAAAH,EAMAtiF,KAAA0iF,kBAAA,KAMA1iF,KAAA2iF,oBAAA,KAMA3iF,KAAA4iF,kBAAA,KAMA5iF,KAAA6iF,WAAA,KAMA7iF,KAAA8iF,aAAA,KAMA9iF,KAAA8hC,OAAA,KAMA9hC,KAAA+iF,cAAA,EAMA/iF,KAAAgjF,cAAA,EAMAhjF,KAAAijF,aAAA,EAMAjjF,KAAAkjF,cAAA,EAMAljF,KAAAmjF,cAAA,EAMAnjF,KAAAojF,cAAA,EAMApjF,KAAAqjF,sBAAA,EAMArjF,KAAAsjF,eAAA,EAMAtjF,KAAAujF,YAAA,EAMAvjF,KAAAwjF,YAAA,EAMAxjF,KAAAyjF,MAAA,GAMAzjF,KAAA0jF,aAAA,EAMA1jF,KAAA2jF,aAAA,EAMA3jF,KAAA4jF,qBAAA,EAMA5jF,KAAA6jF,cAAA,EAMA7jF,KAAA8jF,WAAA,EAMA9jF,KAAA+jF,eAAA,KAMA/jF,KAAAgkF,iBAAA,KAMAhkF,KAAAikF,WAAA,KAMAjkF,KAAAkkF,kBAAA,GAMAlkF,KAAAmkF,mBAA8BvwF,OAAAyzE,GAAA,EAAAzzE,GAksB9B,OA9rBAwuF,IAAAC,EAAAr/E,UAAAo/E,GACAC,EAAAphF,UAAArN,OAAAqP,OAAAm/E,KAAAnhF,WACAohF,EAAAphF,UAAAiC,YAAAm/E,EASAA,EAAAphF,UAAAmjF,YAAA,SAAA1xF,EAAAC,EAAAC,EAAAC,GACA,GAAAmN,KAAA8hC,OAAA,CAGA,IAAAuiD,EAA2BzwF,OAAA0wF,GAAA,EAAA1wF,CAC3BlB,EAAAC,EAAAC,EAAA,EAAAoN,KAAAwiF,WACAxiF,KAAAkkF,mBACA71D,EAAAruB,KAAAuiF,SACAgC,EAAAvkF,KAAAmkF,mBACAxE,EAAAtxD,EAAAuxD,YACA,GAAA5/E,KAAAkjF,gBACA70D,EAAAuxD,YAAAD,EAAA3/E,KAAAkjF,eAEA,IAAAnvF,EAAAiM,KAAAsjF,eACAtjF,KAAAqjF,uBACAtvF,GAAAiM,KAAAyiF,eAEA,QAAAzxF,EAAA,EAAAC,EAAAozF,EAAAnzF,OAAiDF,EAAAC,EAAQD,GAAA,GACzD,IAAAM,EAAA+yF,EAAArzF,GAAAgP,KAAA+iF,cACAxxF,EAAA8yF,EAAArzF,EAAA,GAAAgP,KAAAgjF,cACA,OAAAjvF,GAAA,GAAAiM,KAAAujF,YAAA,CACA,IAAAn7B,EAAA92D,EAAA0O,KAAA+iF,cACA16B,EAAA92D,EAAAyO,KAAAgjF,cACQpvF,OAAAyzE,GAAA,EAAAzzE,CAAgB2wF,EACxBn8B,EAAAC,EACAroD,KAAAujF,YAAAvjF,KAAAujF,YACAxvF,GACAq0D,GAAAC,GACAh6B,EAAAwxD,aAAA9pF,MAAAs4B,EAAAk2D,GAEAl2D,EAAAW,UAAAhvB,KAAA8hC,OAAA9hC,KAAAmjF,cAAAnjF,KAAAojF,cACApjF,KAAAwjF,YAAAxjF,KAAAijF,aAAA3xF,EAAAC,EACAyO,KAAAwjF,YAAAxjF,KAAAijF,cAEA,IAAAlvF,GAAA,GAAAiM,KAAAujF,aACAl1D,EAAAwxD,aAAA,aAEA,GAAA7/E,KAAAkjF,gBACA70D,EAAAuxD,YAAAD,KAWA0C,EAAAphF,UAAAujF,UAAA,SAAA9xF,EAAAC,EAAAC,EAAAC,GACA,GAAAmN,KAAAikF,YAAA,KAAAjkF,KAAAyjF,MAAA,CAGAzjF,KAAA+jF,gBACA/jF,KAAAykF,qBAAAzkF,KAAA+jF,gBAEA/jF,KAAAgkF,kBACAhkF,KAAA0kF,uBAAA1kF,KAAAgkF,kBAEAhkF,KAAA2kF,qBAAA3kF,KAAAikF,YACA,IAAAI,EAA2BzwF,OAAA0wF,GAAA,EAAA1wF,CAC3BlB,EAAAC,EAAAC,EAAAC,EAAAmN,KAAAwiF,WACAxiF,KAAAkkF,mBACA71D,EAAAruB,KAAAuiF,SACAxuF,EAAAiM,KAAA6jF,cAIA,IAHA7jF,KAAA4jF,sBACA7vF,GAAAiM,KAAAyiF,eAEU9vF,EAAAC,EAAcD,GAAAE,EAAA,CACxB,IAAAvB,EAAA+yF,EAAA1xF,GAAAqN,KAAA0jF,aACAnyF,EAAA8yF,EAAA1xF,EAAA,GAAAqN,KAAA2jF,aACA,OAAA5vF,GAAA,GAAAiM,KAAA8jF,WAAA,CACA,IAAAS,EAA6B3wF,OAAAyzE,GAAA,EAAAzzE,CAAgBoM,KAAAmkF,mBAC7C7yF,EAAAC,EACAyO,KAAA8jF,WAAA9jF,KAAA8jF,WACA/vF,GACAzC,GAAAC,GACA88B,EAAAwxD,aAAA9pF,MAAAs4B,EAAAk2D,GAEAvkF,KAAAgkF,kBACA31D,EAAAu2D,WAAA5kF,KAAAyjF,MAAAnyF,EAAAC,GAEAyO,KAAA+jF,gBACA11D,EAAAw2D,SAAA7kF,KAAAyjF,MAAAnyF,EAAAC,GAGA,IAAAwC,GAAA,GAAAiM,KAAA8jF,YACAz1D,EAAAwxD,aAAA,eAaAwC,EAAAphF,UAAA6jF,cAAA,SAAApyF,EAAAC,EAAAC,EAAAC,EAAA4oD,GACA,IAAAptB,EAAAruB,KAAAuiF,SACA8B,EAA2BzwF,OAAA0wF,GAAA,EAAA1wF,CAC3BlB,EAAAC,EAAAC,EAAAC,EAAAmN,KAAAwiF,WACAxiF,KAAAkkF,mBACA71D,EAAA+B,OAAAi0D,EAAA,GAAAA,EAAA,IACA,IAAAnzF,EAAAmzF,EAAAnzF,OACAuqD,IACAvqD,GAAA,GAEA,QAAAF,EAAA,EAAmBA,EAAAE,EAAYF,GAAA,EAC/Bq9B,EAAAgC,OAAAg0D,EAAArzF,GAAAqzF,EAAArzF,EAAA,IAKA,OAHAyqD,GACAptB,EAAAqC,YAEA99B,GAWAyvF,EAAAphF,UAAA8jF,WAAA,SAAAryF,EAAAC,EAAA0e,EAAAxe,GACA,QAAA7B,EAAA,EAAAC,EAAAogB,EAAAngB,OAAqCF,EAAAC,IAAQD,EAC7C2B,EAAAqN,KAAA8kF,cAAApyF,EAAAC,EAAA0e,EAAArgB,GAAA6B,GAAA,GAEA,OAAAF,GAWA0vF,EAAAphF,UAAAy/E,WAAA,SAAAxkE,GACA,GAAStoB,OAAAoT,GAAA,EAAApT,CAAUoM,KAAAI,QAAA8b,EAAA9a,aAAnB,CAGA,GAAApB,KAAA6iF,YAAA7iF,KAAA8iF,aAAA,CACA9iF,KAAA6iF,YACA7iF,KAAAykF,qBAAAzkF,KAAA6iF,YAEA7iF,KAAA8iF,cACA9iF,KAAA0kF,uBAAA1kF,KAAA8iF,cAEA,IAAAuB,EAA6BzwF,OAAA+Z,GAAA,EAAA/Z,CAC7BsoB,EAAAlc,KAAAwiF,WAAAxiF,KAAAkkF,mBACA1yF,EAAA6yF,EAAA,GAAAA,EAAA,GACA5yF,EAAA4yF,EAAA,GAAAA,EAAA,GACAz4D,EAAA74B,KAAAyjB,KAAAhlB,IAAAC,KACA48B,EAAAruB,KAAAuiF,SACAl0D,EAAA2B,YACA3B,EAAA22D,IACAX,EAAA,GAAAA,EAAA,GAAAz4D,EAAA,IAAA74B,KAAAoF,IACA6H,KAAA6iF,YACAx0D,EAAA42D,OAEAjlF,KAAA8iF,cACAz0D,EAAAsC,SAGA,KAAA3wB,KAAAyjF,OACAzjF,KAAAwkF,UAAAtoE,EAAArsB,YAAA,SAYAwyF,EAAAphF,UAAA8pB,SAAA,SAAA4K,GACA31B,KAAA4hF,mBAAAjsD,EAAAuvD,UAAAvvD,EAAAwvD,aACAnlF,KAAA6hF,cAAAlsD,EAAAwM,YACAniC,KAAAgiF,aAAArsD,EAAAg3B,YAWA01B,EAAAphF,UAAAw/E,aAAA,SAAAvkE,GAEA,OADAA,EAAA/E,WAEA,KAAWC,GAAA,EAAYnY,MACvBe,KAAAuhF,UAAwE,GACxE,MACA,KAAWnqE,GAAA,EAAYlY,YACvBc,KAAA+gF,eAAkF,GAClF,MACA,KAAW3pE,GAAA,EAAYhY,QACvBY,KAAAyhF,YAA4E,GAC5E,MACA,KAAWrqE,GAAA,EAAY/X,YACvBW,KAAAmhF,eAAkF,GAClF,MACA,KAAW/pE,GAAA,EAAY9X,kBACvBU,KAAAihF,oBAA4F,GAC5F,MACA,KAAW7pE,GAAA,EAAY7X,cACvBS,KAAAqhF,iBAAsF,GACtF,MACA,KAAWjqE,GAAA,EAAY5X,oBACvBQ,KAAA6gF,uBAAkG,GAClG,MACA,KAAWzpE,GAAA,EAAY3X,OACvBO,KAAA0gF,WAA0E,KAiB1E2B,EAAAphF,UAAA2/E,YAAA,SAAA3jE,EAAA0Y,GACA,IAAAzZ,EAAAyZ,EAAAyvD,qBAAAzvD,CAAA1Y,GACAf,GAAsBtoB,OAAAoT,GAAA,EAAApT,CAAUoM,KAAAI,QAAA8b,EAAA9a,eAGhCpB,KAAA+qB,SAAA4K,GACA31B,KAAAygF,aAAAvkE,KAUAmmE,EAAAphF,UAAA4/E,uBAAA,SAAA3kE,GAEA,IADA,IAAA+a,EAAA/a,EAAAkb,qBACApmC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EACnDgP,KAAAygF,aAAAxpD,EAAAjmC,KAWAqxF,EAAAphF,UAAAsgF,UAAA,SAAArlE,GACA,IAAAxpB,EAAAwpB,EAAAhO,qBACArb,EAAAqpB,EAAApN,YACA9O,KAAA8hC,QACA9hC,KAAAokF,YAAA1xF,EAAA,EAAAA,EAAAxB,OAAA2B,GAEA,KAAAmN,KAAAyjF,OACAzjF,KAAAwkF,UAAA9xF,EAAA,EAAAA,EAAAxB,OAAA2B,IAWAwvF,EAAAphF,UAAAkgF,eAAA,SAAAjlE,GACA,IAAAxpB,EAAAwpB,EAAAhO,qBACArb,EAAAqpB,EAAApN,YACA9O,KAAA8hC,QACA9hC,KAAAokF,YAAA1xF,EAAA,EAAAA,EAAAxB,OAAA2B,GAEA,KAAAmN,KAAAyjF,OACAzjF,KAAAwkF,UAAA9xF,EAAA,EAAAA,EAAAxB,OAAA2B,IAWAwvF,EAAAphF,UAAA8/E,eAAA,SAAA7kE,GACA,GAAStoB,OAAAoT,GAAA,EAAApT,CAAUoM,KAAAI,QAAA8b,EAAA9a,aAAnB,CAGA,GAAApB,KAAA8iF,aAAA,CACA9iF,KAAA0kF,uBAAA1kF,KAAA8iF,cACA,IAAAz0D,EAAAruB,KAAAuiF,SACA7vF,EAAAwpB,EAAAhO,qBACAmgB,EAAA2B,YACAhwB,KAAA8kF,cAAApyF,EAAA,EAAAA,EAAAxB,OACAgrB,EAAApN,aAAA,GACAuf,EAAAsC,SAEA,QAAA3wB,KAAAyjF,MAAA,CACA,IAAA4B,EAAAnpE,EAAAgH,kBACAljB,KAAAwkF,UAAAa,EAAA,UAWAhD,EAAAphF,UAAAggF,oBAAA,SAAA/kE,GACA,IAAAopE,EAAAppE,EAAA9a,YACA,GAASxN,OAAAoT,GAAA,EAAApT,CAAUoM,KAAAI,QAAAklF,GAAnB,CAGA,GAAAtlF,KAAA8iF,aAAA,CACA9iF,KAAA0kF,uBAAA1kF,KAAA8iF,cACA,IAAAz0D,EAAAruB,KAAAuiF,SACA7vF,EAAAwpB,EAAAhO,qBACAvb,EAAA,EACA0e,EAA0C6K,EAAA3D,UAC1C1lB,EAAAqpB,EAAApN,YACAuf,EAAA2B,YACA,QAAAh/B,EAAA,EAAAC,EAAAogB,EAAAngB,OAAuCF,EAAAC,IAAQD,EAC/C2B,EAAAqN,KAAA8kF,cAAApyF,EAAAC,EAAA0e,EAAArgB,GAAA6B,GAAA,GAEAw7B,EAAAsC,SAEA,QAAA3wB,KAAAyjF,MAAA,CACA,IAAA8B,EAAArpE,EAAAke,mBACAp6B,KAAAwkF,UAAAe,EAAA,EAAAA,EAAAr0F,OAAA,MAWAmxF,EAAAphF,UAAAwgF,YAAA,SAAAvlE,GACA,GAAStoB,OAAAoT,GAAA,EAAApT,CAAUoM,KAAAI,QAAA8b,EAAA9a,aAAnB,CAGA,GAAApB,KAAA8iF,cAAA9iF,KAAA6iF,WAAA,CACA7iF,KAAA6iF,YACA7iF,KAAAykF,qBAAAzkF,KAAA6iF,YAEA7iF,KAAA8iF,cACA9iF,KAAA0kF,uBAAA1kF,KAAA8iF,cAEA,IAAAz0D,EAAAruB,KAAAuiF,SACAl0D,EAAA2B,YACAhwB,KAAA+kF,WAAA7oE,EAAA9D,6BACA,EAAoC8D,EAAA3D,UAAA2D,EAAApN,aACpC9O,KAAA6iF,YACAx0D,EAAA42D,OAEAjlF,KAAA8iF,cACAz0D,EAAAsC,SAGA,QAAA3wB,KAAAyjF,MAAA,CACA,IAAA+B,EAAAtpE,EAAA1D,uBACAxY,KAAAwkF,UAAAgB,EAAA,UAUAnD,EAAAphF,UAAAogF,iBAAA,SAAAnlE,GACA,GAAStoB,OAAAoT,GAAA,EAAApT,CAAUoM,KAAAI,QAAA8b,EAAA9a,aAAnB,CAGA,GAAApB,KAAA8iF,cAAA9iF,KAAA6iF,WAAA,CACA7iF,KAAA6iF,YACA7iF,KAAAykF,qBAAAzkF,KAAA6iF,YAEA7iF,KAAA8iF,cACA9iF,KAAA0kF,uBAAA1kF,KAAA8iF,cAEA,IAAAz0D,EAAAruB,KAAAuiF,SACA7vF,EAAAwpB,EAAA9D,6BACAzlB,EAAA,EACA+e,EAAAwK,EAAA6zB,WACAl9C,EAAAqpB,EAAApN,YACAuf,EAAA2B,YACA,QAAAh/B,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAwCF,EAAAC,IAAQD,EAAA,CAChD,IAAAqgB,EAAAK,EAAA1gB,GACA2B,EAAAqN,KAAA+kF,WAAAryF,EAAAC,EAAA0e,EAAAxe,GAEAmN,KAAA6iF,YACAx0D,EAAA42D,OAEAjlF,KAAA8iF,cACAz0D,EAAAsC,SAGA,QAAA3wB,KAAAyjF,MAAA,CACA,IAAAgC,EAAAvpE,EAAA8zB,wBACAhwC,KAAAwkF,UAAAiB,EAAA,EAAAA,EAAAv0F,OAAA,MAQAmxF,EAAAphF,UAAAwjF,qBAAA,SAAAiB,GACA,IAAAr3D,EAAAruB,KAAAuiF,SACAoD,EAAA3lF,KAAA0iF,kBACAiD,EAMAA,EAAApkD,WAAAmkD,EAAAnkD,YACAokD,EAAApkD,UAAAlT,EAAAkT,UAAAmkD,EAAAnkD,YANAlT,EAAAkT,UAAAmkD,EAAAnkD,UACAvhC,KAAA0iF,kBAAA,CACAnhD,UAAAmkD,EAAAnkD,aAaA8gD,EAAAphF,UAAAyjF,uBAAA,SAAAkB,GACA,IAAAv3D,EAAAruB,KAAAuiF,SACAsD,EAAA7lF,KAAA2iF,oBACAkD,GAoBAA,EAAAC,SAAAF,EAAAE,UACAD,EAAAC,QAAAz3D,EAAAy3D,QAAgFF,EAAA,SAEtE3xB,IACGrgE,OAAAskB,GAAA,EAAAtkB,CAAMiyF,EAAAE,SAAAH,EAAAG,WACnB13D,EAAA8lC,YAAA0xB,EAAAE,SAAAH,EAAAG,UAEAF,EAAAG,gBAAAJ,EAAAI,iBACAH,EAAAG,eAAA33D,EAAA23D,eACAJ,EAAAI,iBAGAH,EAAAI,UAAAL,EAAAK,WACAJ,EAAAI,SAAA53D,EAAA43D,SAAmFL,EAAA,UAEnFC,EAAAp1D,WAAAm1D,EAAAn1D,YACAo1D,EAAAp1D,UAAApC,EAAAoC,UAAAm1D,EAAAn1D,WAEAo1D,EAAAK,YAAAN,EAAAM,aACAL,EAAAK,WAAA73D,EAAA63D,WACAN,EAAAM,YAEAL,EAAAr1D,aAAAo1D,EAAAp1D,cACAq1D,EAAAr1D,YAAAnC,EAAAmC,YACAo1D,EAAAp1D,eA3CAnC,EAAAy3D,QAAiDF,EAAA,QACvC3xB,IACV5lC,EAAA8lC,YAAAyxB,EAAAG,UACA13D,EAAA23D,eAAAJ,EAAAI,gBAEA33D,EAAA43D,SAAmDL,EAAA,SACnDv3D,EAAAoC,UAAAm1D,EAAAn1D,UACApC,EAAA63D,WAAAN,EAAAM,WACA73D,EAAAmC,YAAAo1D,EAAAp1D,YACAxwB,KAAA2iF,oBAAA,CACAmD,QAAAF,EAAAE,QACAC,SAAAH,EAAAG,SACAC,eAAAJ,EAAAI,eACAC,SAAAL,EAAAK,SACAx1D,UAAAm1D,EAAAn1D,UACAy1D,WAAAN,EAAAM,WACA11D,YAAAo1D,EAAAp1D,eAoCA6xD,EAAAphF,UAAA0jF,qBAAA,SAAAwB,GACA,IAAA93D,EAAAruB,KAAAuiF,SACA6D,EAAApmF,KAAA4iF,kBACAyD,EAAAF,EAAAE,UACAF,EAAAE,UJlmBO,SImmBPD,GAUAA,EAAA1X,MAAAyX,EAAAzX,OACA0X,EAAA1X,KAAArgD,EAAAqgD,KAAAyX,EAAAzX,MAEA0X,EAAAC,eACAD,EAAAC,UAAAh4D,EAAAg4D,UAAoF,GAEpFD,EAAAE,cAAAH,EAAAG,eACAF,EAAAE,aAAAj4D,EAAAi4D,aACwCH,EAAA,gBAjBxC93D,EAAAqgD,KAAAyX,EAAAzX,KACArgD,EAAAg4D,UAAqD,EACrDh4D,EAAAi4D,aAA2DH,EAAA,aAC3DnmF,KAAA4iF,kBAAA,CACAlU,KAAAyX,EAAAzX,KACA2X,YACAC,aAAAH,EAAAG,gBAwBAjE,EAAAphF,UAAA2gF,mBAAA,SAAArgD,EAAA/Q,GACA,GAAA+Q,EAEK,CACL,IAAAglD,EAAAhlD,EAAAilD,WACAxmF,KAAA6iF,WAAA,CACAthD,UAAmB8+C,GAAWkG,GACHlJ,UAL3Br9E,KAAA6iF,WAAA,KAQA,GAAAryD,EAEK,CACL,IAAAi2D,EAAAj2D,EAAAg2D,WACAE,EAAAl2D,EAAAm2D,aACAC,EAAAp2D,EAAAq2D,cACAC,EAAAt2D,EAAAu2D,oBACAC,EAAAx2D,EAAAy2D,cACAC,EAAA12D,EAAApgC,WACA+2F,EAAA32D,EAAA42D,gBACApnF,KAAA8iF,aAAA,CACAgD,aAAA9qF,IAAA0rF,EACAA,EJlsBO,QImsBPX,SAAAa,GACgCtJ,GAChC0I,eAAAc,GJvrBO,EIyrBPb,cAAAjrF,IAAAgsF,EACAA,EJnrBO,QIorBPv2D,UAAAzwB,KAAA2mC,kBAAA3rC,IAAAksF,EACAA,EJ3oBO,GI4oBPhB,gBAAAlrF,IAAAmsF,EACAA,EJhrBO,GIirBP32D,YAAqB6vD,GAAWoG,GACHlJ,UAvB7Bv9E,KAAA8iF,aAAA,MAmCAT,EAAAphF,UAAA4gF,cAAA,SAAAC,GACA,GAAAA,EAEK,CACL,IAAAuF,EAAAvF,EAAAwF,YAEAC,EAAAzF,EAAA3/C,SAAA,GACAqlD,EAAA1F,EAAAh7D,YACA2gE,EAAA3F,EAAApwD,UACA1xB,KAAA+iF,cAAAsE,EAAA,GACArnF,KAAAgjF,cAAAqE,EAAA,GACArnF,KAAAijF,aAAAwE,EAAA,GACAznF,KAAA8hC,OAAAylD,EACAvnF,KAAAkjF,cAAApB,EAAA1tD,aACAp0B,KAAAmjF,cAAAqE,EAAA,GACAxnF,KAAAojF,cAAAoE,EAAA,GACAxnF,KAAAqjF,qBAAAvB,EAAA4F,oBACA1nF,KAAAsjF,eAAAxB,EAAAj+B,cACA7jD,KAAAujF,YAAAzB,EAAA6F,WAAA3nF,KAAA2mC,YACA3mC,KAAAwjF,YAAAiE,EAAA,QAjBAznF,KAAA8hC,OAAA,MA4BAugD,EAAAphF,UAAA+gF,aAAA,SAAAC,GACA,GAAAA,EAEK,CACL,IAAA2F,EAAA3F,EAAAiD,UACA,GAAA0C,EAEO,CACP,IAAAC,EAAAD,EAAApB,WACAxmF,KAAA+jF,eAAA,CACAxiD,UAAqB8+C,GAAWwH,GACCxK,UALjCr9E,KAAA+jF,eAAA,KAQA,IAAA+D,EAAA7F,EAAAkD,YACA,GAAA2C,EAEO,CACP,IAAAC,EAAAD,EAAAtB,WACAwB,EAAAF,EAAAnB,aACAsB,EAAAH,EAAAjB,cACAqB,EAAAJ,EAAAf,oBACAoB,EAAAL,EAAAb,cACAmB,EAAAN,EAAA13F,WACAi4F,EAAAP,EAAAV,gBACApnF,KAAAgkF,iBAAA,CACA8B,aAAA9qF,IAAAgtF,EACAA,EJnxBO,QIoxBPjC,SAAAkC,GACsC3K,GACtC0I,eAAAkC,GJxwBO,EI0wBPjC,cAAAjrF,IAAAmtF,EACAA,EJpwBO,QIqwBP13D,eAAAz1B,IAAAotF,EACAA,EJ5tBO,EI6tBPlC,gBAAAlrF,IAAAqtF,EACAA,EJjwBO,GIkwBP73D,YAAuB6vD,GAAW0H,GACCxK,UAvBnCv9E,KAAAgkF,iBAAA,KA0BA,IAAAsE,EAAArG,EAAAsG,UACAC,EAAAvG,EAAAwG,aACAC,EAAAzG,EAAA0G,aACAC,EAAA3G,EAAAyF,oBACAmB,EAAA5G,EAAAp+B,cACAilC,EAAA7G,EAAA0F,WACAoB,EAAA9G,EAAAt1B,UACAq8B,EAAA/G,EAAAgH,eACAC,EAAAjH,EAAAkH,kBACAnpF,KAAAikF,WAAA,CACAvV,UAAA1zE,IAAAstF,EACAA,EJ3zBO,kBI4zBPjC,eAAArrF,IAAAguF,EACAA,EJrwBO,SIswBP1C,kBAAAtrF,IAAAkuF,EACAA,EJhwBO,UIkwBPlpF,KAAAyjF,WAAAzoF,IAAA+tF,IAAA,GACA/oF,KAAA0jF,kBACA1oF,IAAAwtF,EAAAxoF,KAAA2mC,YAAA6hD,EAAA,EACAxoF,KAAA2jF,kBACA3oF,IAAA0tF,EAAA1oF,KAAA2mC,YAAA+hD,EAAA,EACA1oF,KAAA4jF,yBAAA5oF,IAAA4tF,KACA5oF,KAAA6jF,mBAAA7oF,IAAA6tF,IAAA,EACA7oF,KAAA8jF,WAAA9jF,KAAA2mC,kBAAA3rC,IAAA8tF,EACAA,EAAA,QAjEA9oF,KAAAyjF,MAAA,IAqEApB,EAp4B2B,CAq4BzBH,ICv5BFkH,GAAA,WAMAppF,KAAAqpF,OAAA,GAMArpF,KAAAspF,WAAA,EAMAtpF,KAAAupF,cAAA,IAqEA,SAAAp5E,GAAAoe,EAAArE,EAAA+1D,GAEA,OAAA/1D,EAAA,IAAAqE,EAAA,KADA0xD,EAA4BD,GAAQC,GAAA,QAhEpCmJ,GAAAnoF,UAAA/E,MAAA,WACA8D,KAAAqpF,OAAA,GACArpF,KAAAspF,WAAA,GAMAF,GAAAnoF,UAAAuoF,OAAA,WACA,GAAAxpF,KAAAspF,WAAAtpF,KAAAupF,cAAA,CACA,IAAAv4F,EAAA,EACA,QAAA8K,KAAAkE,KAAAqpF,OAAA,CACA,IAAAI,EAAAzpF,KAAAqpF,OAAAvtF,GACA,MAAA9K,MAAAy4F,EAAA32E,uBACA9S,KAAAqpF,OAAAvtF,KACAkE,KAAAspF,eAYAF,GAAAnoF,UAAAuK,IAAA,SAAA+iB,EAAArE,EAAA+1D,GACA,IAAAnkF,EAAAqU,GAAAoe,EAAArE,EAAA+1D,GACA,OAAAnkF,KAAAkE,KAAAqpF,OAAArpF,KAAAqpF,OAAAvtF,GAAA,MASAstF,GAAAnoF,UAAA2H,IAAA,SAAA2lB,EAAArE,EAAA+1D,EAAAwJ,GACA,IAAA3tF,EAAAqU,GAAAoe,EAAArE,EAAA+1D,GACAjgF,KAAAqpF,OAAAvtF,GAAA2tF,IACAzpF,KAAAspF,YAUAF,GAAAnoF,UAAAgyB,QAAA,SAAAy2D,GACA1pF,KAAAupF,cAAAG,EACA1pF,KAAAwpF,UAgBe,IAQRG,GAAA,IAAAP,GC9FHQ,GAAW,SAAAt3E,GACf,SAAAu3E,EAAAt5E,GACA+B,EAAAjf,KAAA2M,MAMAA,KAAA0gE,KAAAnwD,EAMAvQ,KAAA8pF,gBAAA,GAMA9pF,KAAA+pF,wBAAA,GAMA/pF,KAAAgqF,2BAAA,GAgSA,OA5RA13E,IAAAu3E,EAAA7mF,UAAAsP,GACAu3E,EAAA5oF,UAAArN,OAAAqP,OAAAqP,KAAArR,WACA4oF,EAAA5oF,UAAAiC,YAAA2mF,EAOAA,EAAA5oF,UAAAwrE,oBAAA,SAAA5xE,EAAAwgB,GACIznB,OAAAk2C,EAAA,EAAAl2C,IAOJi2F,EAAA5oF,UAAAgpF,uBAAA,SAAAC,GACAlqF,KAAAgqF,2BAAAnuF,KAAA9F,MAAAiK,KAAAgqF,2BAAAE,IAOAL,EAAA5oF,UAAAkpF,oBAAA,SAAA9uE,GACA,IAAAgyD,EAAAhyD,EAAAgyD,UACA9B,EAAAlwD,EAAAkwD,2BACAH,EAAA/vD,EAAA+vD,2BAEIx3E,OAAAyzE,GAAA,EAAAzzE,CAAgB23E,EACpBlwD,EAAArnB,KAAA,KAAAqnB,EAAArnB,KAAA,KACA,EAAAq5E,EAAAv5E,YAAA,EAAAu5E,EAAAv5E,YACAu5E,EAAAt5E,UACAs5E,EAAAx5E,OAAA,IAAAw5E,EAAAx5E,OAAA,IAEID,OAAAyzE,GAAA,EAAAzzE,CACEA,OAAAyzE,GAAA,EAAAzzE,CAAqBw3E,EAAAG,KAM3Bse,EAAA5oF,UAAA4rE,qBAAA,WACA,QAAA/wE,KAAAkE,KAAA8pF,gBACA9pF,KAAAoqF,0BAAAtuF,GAAAijB,WAmBA8qE,EAAA5oF,UAAAupE,2BAAA,SACA94E,EACA2pB,EACAivD,EACAp3E,EACAm3F,EACA9f,EACA+f,GAEA,IAAArtD,EACAowC,EAAAhyD,EAAAgyD,UACAkd,EAAAld,EAAAv5E,WAOA,SAAA02E,EAAAvtD,EAAAkX,GACA,IAAAjZ,EAAAG,EAAAE,YAA2C3nB,OAAAk2C,EAAA,EAAAl2C,CAAMugC,IAAAjZ,QACjD,KAAYtnB,OAAAk2C,EAAA,EAAAl2C,CAAMqpB,KAAA5B,EAAAkyD,qBAAAryD,EAClB,OAAAhoB,EAAAG,KAAAg3F,EAAAptE,EAAA/B,EAAAiZ,EAAA,MAIA,IAAAlvB,EAAAooE,EAAApoE,WAEAulF,EAAA94F,EACA,GAAAuT,EAAA/D,WAAA,CACA,IAAAgoB,EAAAjkB,EAAA7D,YACA+nB,EAAuBv1B,OAAAoT,GAAA,EAAApT,CAAQs1B,GAC/B53B,EAAAI,EAAA,GACA,GAAAJ,EAAA43B,EAAA,IAAA53B,EAAA43B,EAAA,GAEAshE,EAAA,CAAAl5F,EAAA63B,EADAp2B,KAAAk1B,MAAAiB,EAAA,GAAA53B,GAAA63B,GACAz3B,EAAA,IAIA,IAEAV,EAFAuqB,EAAAF,EAAAC,iBAGA,IAAAtqB,EAFAuqB,EAAArqB,OAEA,EAA2BF,GAAA,IAAQA,EAAA,CACnC,IAAAiqB,EAAAM,EAAAvqB,GACAmjC,EAAAlZ,EAAAkZ,MACA,GAAUvgC,OAAAgmB,GAAA,EAAAhmB,CAAmBqnB,EAAAsvE,IAAAhgB,EAAAl3E,KAAAi3F,EAAAn2D,GAAA,CAC7B,IAAAs2D,EAAAzqF,KAAA0qF,iBAAAv2D,GACA13B,EAAoE,EAAAme,YAMpE,GALAne,IACAwgC,EAAAwtD,EAAAjgB,2BACA/tE,EAAAstC,WAAAygD,EAAA94F,EACA2pB,EAAAivD,EAAAE,IAEAvtC,EACA,OAAAA,KAuBA4sD,EAAA5oF,UAAAypE,oBAAA,SAAAtX,EAAA/3C,EAAAivD,EAAAp3E,EAAAm3F,EAAA9f,EAAA+f,GACA,OAAW12F,OAAAk2C,EAAA,EAAAl2C,IAeXi2F,EAAA5oF,UAAA2pE,uBAAA,SAAAl5E,EAAA2pB,EAAAivD,EAAAC,EAAA8f,GAIA,YAAArvF,IAHAgF,KAAAwqE,2BACA94E,EAAA2pB,EAAAivD,EAA4CtiB,GAAA,EAAIhoD,KAAAuqE,EAAA8f,IAUhDR,EAAA5oF,UAAAypF,iBAAA,SAAAv2D,GACA,IAAAw2D,EAAmB/2F,OAAAk2C,EAAA,EAAAl2C,CAAMugC,GACzB,GAAAw2D,KAAA3qF,KAAA8pF,gBACA,OAAA9pF,KAAA8pF,gBAAAa,GAGA,IADA,IAAAnK,EACAxvF,EAAA,EAAAC,EAAA+O,KAAAgqF,2BAAA94F,OAAkEF,EAAAC,IAAQD,EAAA,CAC1E,IAAA45F,EAAA5qF,KAAAgqF,2BAAAh5F,GACA,GAAA45F,EAAA,QAAAz2D,GAAA,CACAqsD,EAAAoK,EAAA,OAAA5qF,KAAAm0B,GACA,OAGA,IAAAqsD,EAKA,UAAAtqF,MAAA,wCAAAi+B,EAAAhd,WAEA,OANAnX,KAAA8pF,gBAAAa,GAAAnK,EACAxgF,KAAA+pF,wBAAAY,GAAiD/2F,OAAAosE,EAAA,EAAApsE,CAAM4sF,EAC7CjgD,EAAA,EAAShoC,OAAAyH,KAAA6qF,2BAAA7qF,MAInBwgF,GASAqJ,EAAA5oF,UAAA6pF,sBAAA,SAAAH,GACA,OAAA3qF,KAAA8pF,gBAAAa,IAOAd,EAAA5oF,UAAA8pF,kBAAA,WACA,OAAA/qF,KAAA8pF,iBAMAD,EAAA5oF,UAAAmtE,OAAA,WACA,OAAApuE,KAAA0gE,MAOAmpB,EAAA5oF,UAAA4pF,2BAAA,WACA7qF,KAAA0gE,KAAAllD,UAQAquE,EAAA5oF,UAAAmpF,0BAAA,SAAAO,GACA,IAAAF,EAAAzqF,KAAA8pF,gBAAAa,GAMA,cALA3qF,KAAA8pF,gBAAAa,GAEI/2F,OAAAosE,EAAA,EAAApsE,CAAaoM,KAAA+pF,wBAAAY,WACjB3qF,KAAA+pF,wBAAAY,GAEAF,GAQAZ,EAAA5oF,UAAA+pF,4BAAA,SAAAz6E,EAAA8K,GACA,QAAAsvE,KAAA3qF,KAAA8pF,gBACAzuE,GAAAsvE,KAAAtvE,EAAAE,aACAvb,KAAAoqF,0BAAAO,GAAA5rE,WAUA8qE,EAAA5oF,UAAAusE,YAAA,SAAAnyD,GACIznB,OAAAk2C,EAAA,EAAAl2C,IAOJi2F,EAAA5oF,UAAAgqF,wBAAA,SAAA5vE,GACAA,EAAAqxD,oBAAA7wE,KAAmG,KAOnGguF,EAAA5oF,UAAAiqF,mCAAA,SAAA7vE,GACA,QAAAsvE,KAAA3qF,KAAA8pF,gBACA,KAAAa,KAAAtvE,EAAAE,aAIA,YAHAF,EAAAqxD,oBAAA7wE,KACqEmE,KAAAgrF,4BAAArmD,KAAA3kC,QAOrE6pF,EA1Te,CA2TbvS,GAAA,GAOF,SAAA6T,GAAA56E,EAAA8K,GACEsuE,GAAcH,SAST,SAAA4B,GAAAC,EAAAC,GACP,OAAAD,EAAAjwE,OAAAkwE,EAAAlwE,OAEe,IC5URmwE,GAAA,GA4MQC,GArMM,SAAA3B,GACrB,SAAA4B,EAAAl7E,GACAs5E,EAAAx2F,KAAA2M,KAAAuQ,GAEA,IAAA4nC,EAAA5nC,EAAAywD,cAMAhhE,KAAAuiF,SAAoB3uF,OAAA0tC,GAAA,EAAA1tC,GAMpBoM,KAAA6mC,QAAA7mC,KAAAuiF,SAAAn7E,OAEApH,KAAA6mC,QAAAlR,MAAApuB,MAAA,OACAvH,KAAA6mC,QAAAlR,MAAAnuB,OAAA,OACAxH,KAAA6mC,QAAAlR,MAAA66C,QAAA,QACAxwE,KAAA6mC,QAAAiS,UAA6Bw1B,GAC7Bn2B,EAAAd,aAAAr3C,KAAA6mC,QAAAsR,EAAAuzC,WAAA,UAMA1rF,KAAAkwE,kBAAA,EAMAlwE,KAAAwiF,WAAsB5uF,OAAAyzE,GAAA,EAAAzzE,GA+JtB,OA3JAi2F,IAAA4B,EAAAzoF,UAAA6mF,GACA4B,EAAAxqF,UAAArN,OAAAqP,OAAA4mF,KAAA5oF,WACAwqF,EAAAxqF,UAAAiC,YAAAuoF,EAMAA,EAAAxqF,UAAAwrE,oBAAA,SAAA5xE,EAAAwgB,GACA,IAAA9K,EAAAvQ,KAAAouE,SACA//C,EAAAruB,KAAAuiF,SACA,GAAAhyE,EAAAuC,YAAAjY,GAAA,CACA,IAAA9J,EAAAsqB,EAAAtqB,OACAg9B,EAAA1S,EAAA0S,WAEAh6B,EADAsnB,EAAAgyD,UACAt5E,SAEA6S,EAAA5G,KAAA8G,aAAAuU,GAEA8hE,EAAA,IAA8BgF,GAAuB9zD,EAAAN,EACrDh9B,EAAA6V,EAAA7S,GACA43F,EAAA,IAA6B7O,GAAWjiF,EAAAsiF,EACxC9hE,EAAAgT,EAAA,MACA9d,EAAA1E,cAAA8/E,KASAF,EAAAxqF,UAAA6F,aAAA,SAAAuU,GACA,IAAAgyD,EAAAhyD,EAAAgyD,UACAtjE,EAAA/J,KAAA6mC,QAAAt/B,MAAA,EACAyC,EAAAhK,KAAA6mC,QAAAr/B,OAAA,EACAyC,EAAAoR,EAAA0S,WAAAs/C,EAAAv5E,WACAoW,GAAAD,EACAE,GAAAkjE,EAAAt5E,SACAqW,GAAAijE,EAAAx5E,OAAA,GACAwW,GAAAgjE,EAAAx5E,OAAA,GACA,OAAWD,OAAAyzE,GAAA,EAAAzzE,CAAgBoM,KAAAwiF,WAAAz4E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAM3BohF,EAAAxqF,UAAAusE,YAAA,SAAAnyD,GAEA,GAAAA,EAAA,CAQA,IAAAgT,EAAAruB,KAAAuiF,SACAx0D,EAAA1S,EAAA0S,WACAxmB,EAAAxU,KAAAkhB,MAAAoH,EAAArnB,KAAA,GAAA+5B,GACAvmB,EAAAzU,KAAAkhB,MAAAoH,EAAArnB,KAAA,GAAA+5B,GACA/tB,KAAA6mC,QAAAt/B,UAAAvH,KAAA6mC,QAAAr/B,WACAxH,KAAA6mC,QAAAt/B,QACAvH,KAAA6mC,QAAAr/B,UAEA6mB,EAAAu9D,UAAA,IAAArkF,EAAAC,GAGA,IAAAzT,EAAAsnB,EAAAgyD,UAAAt5E,SAEAiM,KAAAmqF,oBAAA9uE,GAEArb,KAAAysE,oBAA6BF,GAAA,EAAev3D,WAAAqG,GAE5C,IAAAC,EAAAD,EAAAC,iBACI1nB,OAAAskB,GAAA,EAAAtkB,CAAU0nB,EAAmB8vE,IAEjCr3F,IACAs6B,EAAA0B,OACMqvD,GAAc/wD,EAAAt6B,EAAAwT,EAAA,EAAAC,EAAA,IAGpB,IACAxW,EAAAC,EADAs5F,EAAAlvE,EAAAgyD,UAAAv5E,WAEA,IAAA9C,EAAA,EAAAC,EAAAqqB,EAAApqB,OAA6CF,EAAAC,IAAQD,EAAA,CACrD,IAAAiqB,EAAAK,EAAAtqB,GACAmjC,EAAAlZ,EAAAkZ,MACAs2D,EAAkEzqF,KAAA0qF,iBAAAv2D,GACvDvgC,OAAAgmB,GAAA,EAAAhmB,CAAmBqnB,EAAAsvE,IAC9BtvE,EAAAoZ,aAAoCoV,GAAA,EAAW/0B,QAG/C+1E,EAAAoB,aAAAxwE,EAAAJ,IACAwvE,EAAAqB,aAAAzwE,EAAAJ,EAAAoT,IAIAt6B,GACAs6B,EAAAkC,UAGAvwB,KAAAysE,oBAA6BF,GAAA,EAAex3D,YAAAsG,GAE5Crb,KAAAkwE,mBACAlwE,KAAA6mC,QAAAlR,MAAA66C,QAAA,GACAxwE,KAAAkwE,kBAAA,GAGAlwE,KAAAkrF,mCAAA7vE,GACArb,KAAAirF,wBAAA5vE,QA3DArb,KAAAkwE,mBACAlwE,KAAA6mC,QAAAlR,MAAA66C,QAAA,OACAxwE,KAAAkwE,kBAAA,IA+DAub,EAAAxqF,UAAAypE,oBAAA,SAAAtX,EAAA/3C,EAAAivD,EAAAp3E,EAAAm3F,EAAA9f,EAAA+f,GACA,IAAArtD,EAUAjsC,EARAu5F,EADAlvE,EAAAgyD,UACAv5E,WAEAynB,EAAAF,EAAAC,iBACAywE,EAAAxwE,EAAArqB,OAEAQ,EAAqBkC,OAAAyzE,GAAA,EAAAzzE,CACrBynB,EAAA+vD,2BAAAhY,EAAA/hE,SAGA,IAAAL,EAAA+6F,EAAA,EAA2B/6F,GAAA,IAAQA,EAAA,CACnC,IAAAiqB,EAAAM,EAAAvqB,GACAmjC,EAAAlZ,EAAAkZ,MACA,GAAUvgC,OAAAgmB,GAAA,EAAAhmB,CAAmBqnB,EAAAsvE,IAAAhgB,EAAAl3E,KAAAi3F,EAAAn2D,GAI7B,GAFA8I,EADoEj9B,KAAA0qF,iBAAAv2D,GACpE63D,yBACAt6F,EAAA2pB,EAAAivD,EAAAp3E,EAAAm3F,GAEA,OAAAptD,IAUAwuD,EAAAxqF,UAAAgpF,uBAAA,SAAAC,GACAL,EAAA5oF,UAAAgpF,uBAAA52F,KAAA2M,KAAAkqF,GACA,QAAAl5F,EAAA,EAAAC,EAAAi5F,EAAAh5F,OAA6CF,EAAAC,IAAQD,EAAA,CACrD,IAAAw/D,EAAA05B,EAAAl5F,GACW4C,OAAAskB,GAAA,EAAAtkB,CAAQ23F,GAAA/6B,IACnB+6B,GAAA1vF,KAAA20D,KAKAi7B,EAjMqB,CDqUN,IEjKAQ,GA9KQ,SAAAC,GACvB,SAAAC,EAAAh4D,GAEA+3D,EAAA74F,KAAA2M,KAAAm0B,GAMAn0B,KAAAosF,mBAMApsF,KAAAwiF,WAAsB5uF,OAAAyzE,GAAA,EAAAzzE,GA4JtB,OAxJAs4F,IAAAC,EAAAnpF,UAAAkpF,GACAC,EAAAlrF,UAAArN,OAAAqP,OAAAipF,KAAAjrF,WACAkrF,EAAAlrF,UAAAiC,YAAAipF,EAQAA,EAAAlrF,UAAAqvB,KAAA,SAAAjC,EAAAhT,EAAAtqB,GACA,IAAAg9B,EAAA1S,EAAA0S,WACAxmB,EAAA8T,EAAArnB,KAAA,GAAA+5B,EACAvmB,EAAA6T,EAAArnB,KAAA,GAAA+5B,EACAh6B,EAAAsnB,EAAAgyD,UAAAt5E,SACAs4F,EAAkBz4F,OAAAoT,GAAA,EAAApT,CAAU7C,GAC5Bu7F,EAAmB14F,OAAAoT,GAAA,EAAApT,CAAW7C,GAC9Bw7F,EAAsB34F,OAAAoT,GAAA,EAAApT,CAAc7C,GACpCy7F,EAAqB54F,OAAAoT,GAAA,EAAApT,CAAa7C,GAE9B6C,OAAAyzE,GAAA,EAAAzzE,CAAcynB,EAAAkwD,2BAAA8gB,GACdz4F,OAAAyzE,GAAA,EAAAzzE,CAAcynB,EAAAkwD,2BAAA+gB,GACd14F,OAAAyzE,GAAA,EAAAzzE,CAAcynB,EAAAkwD,2BAAAghB,GACd34F,OAAAyzE,GAAA,EAAAzzE,CAAcynB,EAAAkwD,2BAAAihB,GAElBn+D,EAAA0B,OACIqvD,GAAc/wD,GAAAt6B,EAAAwT,EAAA,EAAAC,EAAA,GAClB6mB,EAAA2B,YACA3B,EAAA+B,OAAAi8D,EAAA,GAAAt+D,EAAAs+D,EAAA,GAAAt+D,GACAM,EAAAgC,OAAAi8D,EAAA,GAAAv+D,EAAAu+D,EAAA,GAAAv+D,GACAM,EAAAgC,OAAAk8D,EAAA,GAAAx+D,EAAAw+D,EAAA,GAAAx+D,GACAM,EAAAgC,OAAAm8D,EAAA,GAAAz+D,EAAAy+D,EAAA,GAAAz+D,GACAM,EAAAiC,OACI8uD,GAAc/wD,EAAAt6B,EAAAwT,EAAA,EAAAC,EAAA,IAUlB2kF,EAAAlrF,UAAAwrF,sBAAA,SAAA5xF,EAAAwzB,EAAAhT,EAAAqxE,GACA,IAAAv4D,EAAAn0B,KAAA2sF,WACA,GAAAx4D,EAAArhB,YAAAjY,GAAA,CACA,IAAA0M,EAAA8T,EAAArnB,KAAA,GAAAqnB,EAAA0S,WACAvmB,EAAA6T,EAAArnB,KAAA,GAAAqnB,EAAA0S,WACAh6B,EAAAsnB,EAAAgyD,UAAAt5E,SACMqrF,GAAc/wD,GAAAt6B,EAAAwT,EAAA,EAAAC,EAAA,GACpB,IAAAZ,OAAA5L,IAAA0xF,EACAA,EAAA1sF,KAAA8G,aAAAuU,EAAA,GACAG,EAAA,IAAuB2mE,GACvB9zD,EAAAhT,EAAA0S,WAAA1S,EAAAtqB,OAAA6V,EACAyU,EAAAgyD,UAAAt5E,UACA43F,EAAA,IAA6B7O,GAAWjiF,EAAA2gB,EAAAH,EACxCgT,EAAA,MACA8F,EAAAtoB,cAAA8/E,GACMvM,GAAc/wD,EAAAt6B,EAAAwT,EAAA,EAAAC,EAAA,KAcpB2kF,EAAAlrF,UAAA+qF,yBAAA,SAAAt6F,EAAA2pB,EAAAivD,EAAAp3E,EAAAm3F,GAGA,OAFArqF,KAAAwqE,2BAAA94E,EAAA2pB,EAAAivD,EAA2FtiB,GAAA,GAG3F90D,EAAAG,KAAAg3F,EAAArqF,KAAA2sF,WAAA,WAEA,GAWAR,EAAAlrF,UAAA2rF,YAAA,SAAAv+D,EAAAhT,EAAAJ,EAAAyxE,GACA1sF,KAAAysF,sBAA+BlgB,GAAA,EAAex3D,YAAAsZ,EAAAhT,EAAAqxE,IAS9CP,EAAAlrF,UAAA4rF,WAAA,SAAAx+D,EAAAhT,EAAAqxE,GACA1sF,KAAAysF,sBAA+BlgB,GAAA,EAAev3D,WAAAqZ,EAAAhT,EAAAqxE,IAS9CP,EAAAlrF,UAAAwrE,oBAAA,SAAAp+C,EAAAhT,EAAAqxE,GACA1sF,KAAAysF,sBAA+BlgB,GAAA,EAAet3D,OAAAoZ,EAAAhT,EAAAqxE,IAS9CP,EAAAlrF,UAAA6F,aAAA,SAAAuU,EAAAgkE,GACA,IAAAhS,EAAAhyD,EAAAgyD,UACAt/C,EAAA1S,EAAA0S,WACAhkB,EAAAgkB,EAAA1S,EAAArnB,KAAA,KACAgW,EAAA+jB,EAAA1S,EAAArnB,KAAA,KACAiW,EAAA8jB,EAAAs/C,EAAAv5E,WACAoW,GAAAD,EACAE,GAAAkjE,EAAAt5E,SACAqW,GAAAijE,EAAAx5E,OAAA,GAAAwrF,EACAh1E,GAAAgjE,EAAAx5E,OAAA,GACA,OAAWD,OAAAyzE,GAAA,EAAAzzE,CAAgBoM,KAAAwiF,WAAAz4E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAS3B8hF,EAAAlrF,UAAA6qF,aAAA,SAAAzwE,EAAAJ,EAAAoT,GACIz6B,OAAAk2C,EAAA,EAAAl2C,IASJu4F,EAAAlrF,UAAA4qF,aAAA,SAAAxwE,EAAAJ,GACA,OAAWrnB,OAAAk2C,EAAA,EAAAl2C,IAGXu4F,EA3KuB,CCLN,SAAA/gF,GACjB,SAAA8gF,EAAA/3D,GAEA/oB,EAAA/X,KAAA2M,MAMAA,KAAA8sF,OAAA34D,EA6NA,OAzNA/oB,IAAA8gF,EAAAlpF,UAAAoI,GACA8gF,EAAAjrF,UAAArN,OAAAqP,OAAAmI,KAAAnK,WACAirF,EAAAjrF,UAAAiC,YAAAgpF,EAWAA,EAAAjrF,UAAA8rF,uBAAA,SAAAtwF,EAAAwI,EAAA+nF,GACA,gBAMAvmE,EAAA5V,GAUA,OAAApU,EAAAouC,kBAAA5lC,EAAAwhB,EAAA5V,EANA,SAAA4vB,GACAusD,EAAAvmE,KACAumE,EAAAvmE,GAAA,IAEAumE,EAAAvmE,GAAAga,EAAArwB,UAAAzB,YAAA8xB,MAgBAyrD,EAAAjrF,UAAAupE,2BAAA,SAAA94E,EAAA2pB,EAAAivD,EAAAp3E,KAKAg5F,EAAAjrF,UAAA0rF,SAAA,WACA,OAAA3sF,KAAA8sF,QAQAZ,EAAAjrF,UAAAgsF,mBAAA,SAAAv6E,GACyDA,EAAA,OACzDoI,aAA6BshE,GAAU9vE,QACvCtM,KAAAktF,2BASAhB,EAAAjrF,UAAA2pE,uBAAA,SAAAl5E,EAAA2pB,GACA,UAUA6wE,EAAAjrF,UAAAksF,UAAA,SAAAl+D,GACA,IAAAm+D,EAAAn+D,EAAAnU,WAQA,OAPAsyE,GAAsBhR,GAAU9vE,QAAA8gF,GAAyBhR,GAAUrjF,OAC7DnF,OAAAosE,EAAA,EAAApsE,CAAMq7B,EAAQsR,EAAA,EAAShoC,OAAAyH,KAAAitF,mBAAAjtF,MAE7BotF,GAAsBhR,GAAUhwE,OAChC6iB,EAAAoO,OACA+vD,EAAAn+D,EAAAnU,YAEAsyE,GAAyBhR,GAAU9vE,QAMnC4/E,EAAAjrF,UAAAisF,wBAAA,WACA,IAAA/4D,EAAAn0B,KAAA2sF,WACAx4D,EAAAG,cAAAH,EAAAtZ,kBAAwD4uB,GAAA,EAAW/0B,OACnE1U,KAAAwP,WASA08E,EAAAjrF,UAAAosF,oBAAA,SAAAhyE,EAAAiyE,GACA,GAAAA,EAAAj7D,iBAAA,CAMA,IAAAk7D,EAAA,SAAAD,EAAA/8E,EAAA8K,GACA,IAAAswD,EAA4B/3E,OAAAk2C,EAAA,EAAAl2C,CAAM05F,GAClC3hB,KAAAtwD,EAAAunB,WACA0qD,EAAA3qD,YAAAtnB,EAAAgyD,UAAApoE,WACAoW,EAAAunB,UAAA+oC,KAEOhnC,KAAA,KAAA2oD,GAEPjyE,EAAAqxD,oBAAA7wE,KACmE,KAYnEqwF,EAAAjrF,UAAAusF,gBAAA,SAAA5qD,EAAA0qD,EAAAt9E,EAAAa,GAEA,IAAA86D,EAAwB/3E,OAAAk2C,EAAA,EAAAl2C,CAAM05F,GAC9BzqD,EAAA7yB,EAAArB,WACAg9D,KAAA/oC,EACAC,KAAAD,EAAA+oC,GACA/oC,EAAA+oC,GAAA9oC,GAAAvzC,OAAAuhB,GAEA+xB,EAAA+oC,GAAA9oC,GAAAhyB,GAGA+xB,EAAA+oC,GAAA,GACA/oC,EAAA+oC,GAAA9oC,GAAAhyB,IAwBAq7E,EAAAjrF,UAAAwsF,kBAAA,SACApyE,EACAiyE,EACAxrF,EACAisB,EACA9oB,EACAlU,EACA28F,EACAjpE,EACAkpE,EACAx6F,GAEA,IAAAw4E,EAAwB/3E,OAAAk2C,EAAA,EAAAl2C,CAAM05F,GAC9B3hB,KAAAtwD,EAAAwwD,cACAxwD,EAAAwwD,YAAAF,GAAA,IAEA,IAGAlrC,EAAA5vB,EAAA04C,EAAAj4D,EAAAC,EAAAye,EAHA67D,EAAAxwD,EAAAwwD,YAAAF,GACAS,EAAA/wD,EAAA+wD,UAGA,IAAAp8D,EAFAlO,EAAA6O,aAEqBX,GAAA09E,IAAe19E,EAGpC,IAFAa,EAAA/O,EAAAgP,0BAAA/f,EAAAif,EAAAa,GACA04C,EAAAznD,EAAAilB,cAAA/W,GACA1e,EAAAuf,EAAAhf,KAA8BP,GAAAuf,EAAA9e,OAAqBT,EACnD,IAAAC,EAAAsf,EAAA/e,KAAgCP,GAAAsf,EAAA7e,OAAqBT,EACrDm8F,EAAA19E,GAAAyU,IACAgc,EAAA6sD,EAAAliD,QAAAp7B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,IACA6V,YAAmC4lB,GAAA,EAASt0B,OAC5Cy/D,EAAAprC,EAAAtwB,WAAA,EACAi8D,EAAA3I,YAAAhjC,EAAAtwB,WACAi8D,EAAAlJ,QAAA,CAAAziC,EAAAkrC,EACA7pE,EAAAwlB,mBAAAmZ,EAAArwB,WAAAm5C,UAGAvuD,IAAA2yF,GACAA,EAAAt6F,KAAAF,EAAAstC,IAGA6sD,EAAA1hD,QAAA57B,EAAA1e,EAAAC,EAAA0T,IAOAinF,EAtOiB,QAuOf,IClHa0B,GAnHe,SAAAzB,GAC9B,SAAA0B,EAAA15D,GAEAg4D,EAAA94F,KAAA2M,KAAAm0B,GAMAn0B,KAAA8tF,iCAA4Cl6F,OAAAyzE,GAAA,EAAAzzE,GAM5CoM,KAAA+tF,kBAAA,KAgGA,OA5FA5B,IAAA0B,EAAA7qF,UAAAmpF,GACA0B,EAAA5sF,UAAArN,OAAAqP,OAAAkpF,KAAAlrF,WACA4sF,EAAA5sF,UAAAiC,YAAA2qF,EAKAA,EAAA5sF,UAAA6qF,aAAA,SAAAzwE,EAAAJ,EAAAoT,GAEAruB,KAAA6sF,WAAAx+D,EAAAhT,GAEA,IAAA4T,EAAAjvB,KAAAmiC,WACA,GAAAlT,EAAA,CAGA,IAAAl+B,EAAAkqB,EAAAlqB,OACAi9F,OAAAhzF,IAAAjK,IACW6C,OAAAoT,GAAA,EAAApT,CAAc7C,EAAAsqB,EAAAtqB,SACf6C,OAAAoT,GAAA,EAAApT,CAAU7C,EAAAsqB,EAAAtqB,QACpBi9F,GACAhuF,KAAAswB,KAAAjC,EAAAhT,EAAmF,GAGnF,IAAA4yE,EAAAjuF,KAAAkuF,oBAIAvO,EAAAtxD,EAAAuxD,YACAvxD,EAAAuxD,YAAA3kE,EAAA+Y,QAIA,IAAAxiC,EAAAy8F,EAAA,GACAx8F,EAAAw8F,EAAA,GACAE,EAAAl/D,EAAA1nB,MAAA0mF,EAAA,GACAG,EAAAn/D,EAAAznB,OAAAymF,EAAA,GACAE,GAAA,IAAAC,GAAA,IACA//D,EAAAW,UAAAC,EAAA,KAAAA,EAAA1nB,OAAA0nB,EAAAznB,OACAzU,KAAAkhB,MAAAziB,GAAAuB,KAAAkhB,MAAAxiB,GAAAsB,KAAAkhB,MAAAk6E,GAAAp7F,KAAAkhB,MAAAm6E,IAEA//D,EAAAuxD,YAAAD,EAEAqO,GACA3/D,EAAAkC,UAIAvwB,KAAA4sF,YAAAv+D,EAAAhT,EAAAJ,IAOA4yE,EAAA5sF,UAAAkhC,SAAA,WACA,OAAWvuC,OAAAk2C,EAAA,EAAAl2C,IAOXi6F,EAAA5sF,UAAAitF,kBAAA,WACA,OAAWt6F,OAAAk2C,EAAA,EAAAl2C,IAMXi6F,EAAA5sF,UAAA+qF,yBAAA,SAAAt6F,EAAA2pB,EAAAivD,EAAAp3E,EAAAm3F,GACA,GAAArqF,KAAAmiC,WAAA,CAIA,IAAAixB,EAAgBx/D,OAAAyzE,GAAA,EAAAzzE,CAAcoM,KAAA8tF,iCAAAp8F,EAAAL,SAC1BuC,OAAA2iF,GAAA,EAAA3iF,CAAew/D,EAAA/3C,EAAAgyD,UAAAv5E,WAAAkM,KAAAosF,oBAEnBpsF,KAAA+tF,oBACA/tF,KAAA+tF,kBAA+Bn6F,OAAA0tC,GAAA,EAAA1tC,CAAqB,MAGpDoM,KAAA+tF,kBAAAnC,UAAA,SACA5rF,KAAA+tF,kBAAA/+D,UAAAhvB,KAAAmiC,WAAAixB,EAAA,GAAAA,EAAA,gBAEA,IAAAi7B,EAAAruF,KAAA+tF,kBAAAO,aAAA,SAAAvwF,KACA,OAAAswF,EAAA,KACAn7F,EAAAG,KAAAg3F,EAAArqF,KAAA2sF,WAAA0B,QAEA,IAIAR,EA/G8B,CAgH5B5B,ICzGEsC,GAAwB,SAAAV,GAC5B,SAAAW,EAAAC,GA2BA,GAzBAZ,EAAAx6F,KAAA2M,KAAAyuF,GAMAzuF,KAAA8hC,OAAA,KAMA9hC,KAAA0uF,gBAA2B96F,OAAAyzE,GAAA,EAAAzzE,GAK3BoM,KAAA2uF,iBAAA,GAMA3uF,KAAA4uF,gBAAA,KAEAH,EAAAt3E,YAAiC0N,GAAA,EAAS/P,OAC1C,QAAA9jB,EAAA,EAAAC,EAA2Bs6F,GAAyBr6F,OAAQF,EAAAC,IAAQD,EAAA,CACpE,IAAAw/D,EAAmB+6B,GAAyBv6F,GAC5C,GAAAw/D,IAAAg+B,GAAAh+B,EAAA,QAAAi+B,GAAA,CACAzuF,KAAA4uF,gBAA+E,IAAAp+B,EAAAi+B,GAC/E,QAyIA,OAlIAZ,IAAAW,EAAAxrF,UAAA6qF,GACAW,EAAAvtF,UAAArN,OAAAqP,OAAA4qF,KAAA5sF,WACAutF,EAAAvtF,UAAAiC,YAAAsrF,EAKAA,EAAAvtF,UAAA4R,gBAAA,WACA7S,KAAA4uF,iBACA5uF,KAAA4uF,gBAAA7vE,UAEA8uE,EAAA5sF,UAAA4R,gBAAAxf,KAAA2M,OAMAwuF,EAAAvtF,UAAAkhC,SAAA,WACA,OAAAniC,KAAA8hC,OAAA9hC,KAAA8hC,OAAAK,WAAA,MAMAqsD,EAAAvtF,UAAAitF,kBAAA,WACA,OAAAluF,KAAA0uF,iBAMAF,EAAAvtF,UAAA4qF,aAAA,SAAAxwE,EAAAJ,GAEA,IAMAgU,EANAlB,EAAA1S,EAAA0S,WACA/5B,EAAAqnB,EAAArnB,KACAq5E,EAAAhyD,EAAAgyD,UACAwhB,EAAAxhB,EAAAx5E,OACA02F,EAAAld,EAAAv5E,WAIAg7F,EADuE9uF,KAAA2sF,WACE/xE,YAEzEyxD,EAAAhxD,EAAAixD,UAEAyiB,EAAA/uF,KAAA4uF,gBACAI,EAAA3zE,EAAAtqB,OAKA,GAJAg+F,QAAA/zF,IAAAigB,EAAAlqB,SACAi+F,EAAuBp7F,OAAAoT,GAAA,EAAApT,CAAeo7F,EAAA/zE,EAAAlqB,UAGtCs7E,EAAernB,GAAA,EAAQ94C,aAAAmgE,EAAsBrnB,GAAA,EAAQ74C,eAC5CvY,OAAAoT,GAAA,EAAApT,CAAOo7F,GAAA,CAChB,IAAA/pF,EAAAooE,EAAApoE,WACA,IAAWihB,GAAA,EAA0B,CACrC,IAAAzf,EAAAqoF,EAAAjlD,gBACApjC,IACAxB,EAAAwB,GAGA,IAAAwoF,EAAAjvF,KAAA2uF,iBACA,GAAAI,EAAA,CACA,IAAA1gE,EAAA0gE,EAAA1gE,QACA6gE,EAAyFt7F,OAAA0C,GAAA,EAAL,CAAW,GAAG+kB,EAAA,CAClGrnB,KAAA,CACYJ,OAAAoT,GAAA,EAAApT,CAAQo7F,GAAAzE,EACR32F,OAAAoT,GAAA,EAAApT,CAASo7F,GAAAzE,GAErBld,UAAmEz5E,OAAA0C,GAAA,EAAL,CAAW,GAAG+kB,EAAAgyD,UAAA,CAC5Et5E,SAAA,MAGAo7F,EAAAv7F,OAAA0H,KAAA4zF,EAAA3hB,oBAAA9uE,OACAwwB,EAAA,IAAoBotD,GAAW2S,EAAAzE,EAAAx8D,EAAAM,EAAAjnB,OAAA,SAAAlU,IAC/B67F,EAAAlD,aAAAqD,EAAAj0E,KACA8zE,EAAAK,oBACex7F,OAAAskB,GAAA,EAAAtkB,CAAMq7F,EAAAE,KACrB9gE,EAAAjnB,OAAAG,MAAA2nF,EAAAl7F,KAAA,GAAA+5B,EACAM,EAAAjnB,OAAAI,OAAA0nF,EAAAl7F,KAAA,GAAA+5B,EACAghE,EAAAtmF,QAAA4lB,EAAA6gE,EAAAj0E,GACAg0E,EAAAE,EACAj8F,YAIA+7B,EAAA6/D,EAAA3sD,SACA6sD,EAAAzE,EAAAx8D,EAAA9oB,GAEAgqB,GAAAjvB,KAAAmtF,UAAAl+D,KACAjvB,KAAA8hC,OAAA7S,EACAjvB,KAAA2uF,iBAAAM,GAIA,GAAAjvF,KAAA8hC,OAAA,CAEA,IAAAutD,GADApgE,EAAAjvB,KAAA8hC,QACA1gC,YACAkuF,EAAArgE,EAAAlI,gBACAwoE,EAAAtgE,EAAAktD,gBACA5zE,EAAAwlB,EAAAuhE,GACA/E,EAAAgF,GACA3oF,EAAsBhT,OAAAyzE,GAAA,EAAAzzE,CAAgBoM,KAAA0uF,gBACtC3gE,EAAA/5B,EAAA,KAAA+5B,EAAA/5B,EAAA,KACAuU,IACA,EACAgnF,GAAAF,EAAA,GAAAR,EAAA,IAAAS,EACAC,GAAAV,EAAA,GAAAQ,EAAA,IAAAC,GACM17F,OAAAyzE,GAAA,EAAAzzE,CAAgBoM,KAAA8tF,iCACtB//D,EAAA/5B,EAAA,KAAA4S,EAAA,GAAAmnB,EAAA/5B,EAAA,KAAA4S,EAAA,GACAmnB,EAAAw8D,GAAAx8D,EAAAw8D,EACA,GACAsE,EAAA,IAAAA,EAAA,IAEA7uF,KAAAosF,mBAAAkD,EAAAvhE,EAAAwhE,EAGA,QAAAvvF,KAAA8hC,QAMA0sD,EAAAvtF,UAAAupE,2BAAA,SAAA94E,EAAA2pB,EAAAivD,EAAAp3E,GACA,OAAA8M,KAAA4uF,gBACA5uF,KAAA4uF,gBAAApkB,2BAAA94E,EAAA2pB,EAAAivD,EAAAp3E,GAEA26F,EAAA5sF,UAAAupE,2BAAAn3E,KAAA2M,KAAAtO,EAAA2pB,EAAAivD,EAAAp3E,IAIAs7F,EA1K4B,CA2K1BZ,IAQFW,GAAwB,iBAAAp6D,GACxB,OAAAA,EAAAhd,YAA6B0N,GAAA,EAASlQ,OACtCwf,EAAAhd,YAAwB0N,GAAA,EAAS/P,QACsB,EAAA06E,kBAAgC3S,IAUvF0R,GAAwB,gBAAAkB,EAAAt7D,GACxB,WAAao6D,GAA2E,IAIzE,IAAAmB,GAAA,aCvMXC,GAAuB,SAAA9B,GAC3B,SAAA+B,EAAAC,EAAAC,GAEAjC,EAAAx6F,KAAA2M,KAAA6vF,GAMA7vF,KAAAquB,QAAAyhE,EAAA,KAA0Cl8F,OAAA0tC,GAAA,EAAA1tC,GAM1CoM,KAAA+vF,cAMA/vF,KAAAgwF,gBAAA,KAMAhwF,KAAAiwF,iBAMAjwF,KAAAkwF,cAAA,GAMAlwF,KAAAmwF,WAAA,EAMAnwF,KAAAowF,UAAqBx8F,OAAAoT,GAAA,EAAApT,GAMrBoM,KAAAqwF,cAAA,IAA6B/pE,GAAA,EAAS,SAMtCtmB,KAAA0uF,gBAA2B96F,OAAAyzE,GAAA,EAAAzzE,GAM3BoM,KAAAswF,WAAA,EAgSA,OA5RAzC,IAAA+B,EAAA5sF,UAAA6qF,GACA+B,EAAA3uF,UAAArN,OAAAqP,OAAA4qF,KAAA5sF,WACA2uF,EAAA3uF,UAAAiC,YAAA0sF,EAOAA,EAAA3uF,UAAAsvF,gBAAA,SAAA9vD,GACA,IAAAovD,EAAqE7vF,KAAA2sF,WACrE3+C,EAAAvN,EAAA3lB,WACA4J,EAAAmrE,EAAA9qE,4BACA,OAAAipB,GAAwBtN,GAAA,EAASp0B,QACjC0hC,GAAqBtN,GAAA,EAASn0B,OAC9ByhC,GAAqBtN,GAAA,EAAS3nC,QAAA2rB,GAW9BkrE,EAAA3uF,UAAAmqC,QAAA,SAAAp7B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,GACA,IAAA4qF,EAAqE7vF,KAAA2sF,WAErElsD,EADuEovD,EAAAj1E,YACvEwwB,QAAAp7B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,GAaA,OAZAw7B,EAAA3lB,YAA2B4lB,GAAA,EAAS3nC,QACpC82F,EAAA9qE,4BAGO8qE,EAAA/qE,aAAA,IAEP9kB,KAAAmwF,WAAA,GAHA1vD,EAAAK,SAAsBJ,GAAA,EAASp0B,SAM/BtM,KAAAuwF,gBAAA9vD,KACAA,IAAAD,kBAEAC,GAMAmvD,EAAA3uF,UAAA4qF,aAAA,SAAAxwE,EAAAJ,GAEA,IAAA8S,EAAA1S,EAAA0S,WACA/5B,EAAAqnB,EAAArnB,KACAq5E,EAAAhyD,EAAAgyD,UACApoE,EAAAooE,EAAApoE,WACAslF,EAAAld,EAAAv5E,WACA+6F,EAAAxhB,EAAAx5E,OAEAg8F,EAAqE7vF,KAAA2sF,WACrEW,EAAuEuC,EAAAj1E,YACvE41E,EAAAlD,EAAA9+E,cACA1M,EAAAwrF,EAAAhiD,yBAAArmC,GACA+K,EAAAlO,EAAA4lB,kBAAA6iE,EAAAvqF,KAAAswF,YACA/mC,EAAAznD,EAAAilB,cAAA/W,GACAygF,EAAA19F,KAAAkhB,MAAAs2E,EAAAhhC,IAAA,EACAx4D,EAAAsqB,EAAAtqB,OAKA,QAHAiK,IAAAigB,EAAAlqB,SACAA,EAAe6C,OAAAoT,GAAA,EAAApT,CAAe7C,EAAAkqB,EAAAlqB,SAEtB6C,OAAAoT,GAAA,EAAApT,CAAO7C,GAEf,SAGA,IAAA8f,EAAA/O,EAAAgP,0BAAA/f,EAAAif,GACAq/E,EAAAvtF,EAAAolB,mBAAAlX,EAAAa,GAEA05B,EAAA+iD,EAAA7hD,kBAAA1d,GAKA2iE,EAAA,GACAA,EAAA1gF,GAAA,GAEA,IASAywB,EAAAnvC,EAAAC,EATAo/F,EAAA3wF,KAAA+sF,uBACAO,EAAAroF,EAAAyrF,GAEArkB,EAAAhxD,EAAAixD,UACAskB,EAAAvkB,EAAuCrnB,GAAA,EAAQ94C,YAAAmgE,EAAqBrnB,GAAA,EAAQ74C,aAE5EikF,EAAApwF,KAAAowF,UACAS,EAAA7wF,KAAAqwF,cAGA,IAFArwF,KAAAmwF,WAAA,EAEA7+F,EAAAuf,EAAAhf,KAA4BP,GAAAuf,EAAA9e,OAAqBT,EACjD,IAAAC,EAAAsf,EAAA/e,KAA8BP,GAAAsf,EAAA7e,OAAqBT,EACnD,KAAA+yD,KAAAC,MAAAlpC,EAAA2lB,KAAA,IAAA4vD,GAAA,CAIA,GADAnwD,EAAAzgC,KAAAorC,QAAAp7B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,GACAjF,KAAAuwF,gBAAA9vD,GAAA,CACA,IAAAsN,EAAoBn6C,OAAAk2C,EAAA,EAAAl2C,CAAMoM,MAC1B,GAAAygC,EAAA3lB,YAAiC4lB,GAAA,EAASp0B,OAAA,CAC1CokF,EAAA1gF,GAAAywB,EAAArwB,UAAAzB,YAAA8xB,EACA,IAAAS,EAAAT,EAAAS,aAAA6M,GACA/tC,KAAAmwF,YAAAjvD,IAAA,IAAAlhC,KAAAkwF,cAAAn0F,QAAA0kC,KACAzgC,KAAAmwF,WAAA,GAGA,OAAA1vD,EAAAM,SAAAgN,EAAA1yB,EAAA2lB,MAEA,SAIA,IAAA8vD,EAAAhvF,EAAAmlB,2BACAwZ,EAAArwB,UAAAygF,EAAAT,GACAplD,GAAA,EACA8lD,IACA9lD,EAAA2lD,EAAA3gF,EAAA,EAAA8gF,IAEA9lD,GACAlpC,EAAA4kB,gCACA+Z,EAAArwB,UAAAugF,EAAA,KAAAE,EAAAT,GAMA,IAAAhE,EAAA7iC,EAAAx7B,EAAAwc,EAAAkmD,EACA,KAAAzwF,KAAAosF,oBAAA9nC,KAAAC,MAAAlpC,EAAA2lB,KAAA,IAAA4vD,KACA5wF,KAAAmwF,YACAnwF,KAAAgwF,kBAAoCp8F,OAAAoT,GAAA,EAAApT,CAAcoM,KAAAgwF,gBAAAj/F,IAClDiP,KAAAiwF,kBAAAO,GACAC,GAAAzwF,KAAA+vF,gBACAa,GAAAxE,GAAApsF,KAAAosF,oBACA,CAEA,IAAA/9D,EAAAruB,KAAAquB,QACA,GAAAA,EAAA,CACA,IAAA0iE,EAAAzD,EAAA5hD,iBAAA17B,EAAA+d,EAAA9oB,GACAsC,EAAAxU,KAAAkhB,MAAApD,EAAAzgB,WAAA2gG,EAAA,GAAAN,GACAjpF,EAAAzU,KAAAkhB,MAAApD,EAAA7gB,YAAA+gG,EAAA,GAAAN,GACArpF,EAAAinB,EAAAjnB,OACAA,EAAAG,UAAAH,EAAAI,WACAxH,KAAA+vF,cAAAU,EACArpF,EAAAG,QACAH,EAAAI,YAEAxH,KAAAgwF,kBAAwCp8F,OAAAoT,GAAA,EAAApT,CAAMy7F,EAAArvF,KAAAgwF,kBAC9ChwF,KAAAiwF,kBAAAO,IACAniE,EAAAu9D,UAAA,IAAArkF,EAAAC,GAEAipF,EAAAzwF,KAAA+vF,eAIA/vF,KAAAkwF,cAAAh/F,OAAA,EAEA,IAUA8/F,EAAAC,EAAAvD,EAAA18F,EAAAC,EACAu4D,EAAA0nC,EAAAC,EAAAzR,EAAA92C,EAXAwoD,EAAAx9F,OAAA0H,KAAAo1F,GAAAngF,IAAAC,QAYA,IAXA4gF,EAAA3yF,KAAA,SAAApG,EAAAC,GACA,OAAAD,IAAA2X,EACA,EACS1X,IAAA0X,GACT,EAEA3X,EAAAC,EAAA,EAAAD,EAAAC,GAAA,MAKAtH,EAAA,EAAAC,EAAAmgG,EAAAlgG,OAAiCF,EAAAC,IAAQD,EAOzC,QAAA85C,KANA4iD,EAAA0D,EAAApgG,GACAigG,EAAA3D,EAAA5hD,iBAAAgiD,EAAA3/D,EAAA9oB,GAEA+rF,EADAlvF,EAAAilB,cAAA2mE,GACAnkC,EACA2nC,EAAA3mD,EAAA+iD,EAAAriD,uBAAAhmC,GACAksF,EAAAT,EAAAhD,GAEAjtD,EAAA0wD,EAAArmD,GAEAx5C,IADAk4D,EAAA1nD,EAAA+kB,mBAAA4Z,EAAAI,eAAAuvD,IACA,GAAAf,EAAA,IAAA9lC,EAAAhf,EAAAkmD,EACAl/F,GAAA89F,EAAA,GAAA7lC,EAAA,IAAAD,EAAAhf,EAAAkmD,EACA/Q,EAAAuR,EAAA,GAAAD,EAAAP,EACA7nD,EAAAqoD,EAAA,GAAAD,EAAAP,EACAzwF,KAAAqxF,cAAA5wD,EAAAplB,EAAAJ,EAAA3pB,EAAAC,EAAAmuF,EAAA92C,EAAAsoD,EAAAlhF,IAAA09E,GACA1tF,KAAAkwF,cAAAr0F,KAAA4kC,GAIAzgC,KAAAiwF,iBAAAO,EACAxwF,KAAAosF,mBAAA7iC,EAAAx7B,EAAAwc,EAAAkmD,EACAzwF,KAAAgwF,gBAAAX,EAGA,IAAA9mF,EAAAvI,KAAAosF,mBAAA7B,EACA3jF,EAAoBhT,OAAAyzE,GAAA,EAAAzzE,CAAgBoM,KAAA0uF,gBACpC3gE,EAAA/5B,EAAA,KAAA+5B,EAAA/5B,EAAA,KACAuU,IACA,GACAvI,KAAAgwF,gBAAA,GAAAnB,EAAA,IAAA7uF,KAAAosF,mBAAAr+D,GACA8gE,EAAA,GAAA7uF,KAAAgwF,gBAAA,IAAAhwF,KAAAosF,mBAAAr+D,GAaA,OAZIn6B,OAAAyzE,GAAA,EAAAzzE,CAAgBoM,KAAA8tF,iCACpB//D,EAAA/5B,EAAA,KAAA4S,EAAA,GAAAmnB,EAAA/5B,EAAA,KAAA4S,EAAA,GACAmnB,EAAAw8D,GAAAx8D,EAAAw8D,EACA,GACAsE,EAAA,IAAAA,EAAA,IAGA7uF,KAAAwtF,gBAAAnyE,EAAAunB,UAAA0qD,EAAAt9E,EAAAa,GACA7Q,KAAAytF,kBAAApyE,EAAAiyE,EAAAxrF,EAAAisB,EACA9oB,EAAAlU,EAAAif,EAAA6/E,EAAA/qE,cACA9kB,KAAAqtF,oBAAAhyE,EAAAiyE,GAEAttF,KAAAkwF,cAAAh/F,OAAA,GAcA0+F,EAAA3uF,UAAAowF,cAAA,SAAA5wD,EAAAplB,EAAAJ,EAAA3pB,EAAAC,EAAAmuF,EAAA92C,EAAAza,EAAAkS,GACA,IAAApR,EAAAjvB,KAAAsxF,aAAA7wD,GACA,GAAAxR,EAAA,CAGA,IAAA8e,EAAcn6C,OAAAk2C,EAAA,EAAAl2C,CAAMoM,MACpB2/E,EAAAt/C,EAAAI,EAAAM,SAAAgN,EAAA1yB,EAAA2lB,MAAA,EAEAssD,EADqEttF,KAAA2sF,WACE/xE,YACvE,IAAA+kE,GAAA2N,EAAAniD,UAAA9vB,EAAAgyD,UAAApoE,aACAjF,KAAAquB,QAAAu9D,UAAAt6F,EAAAC,EAAAmuF,EAAA92C,GAEA,IAAA2oD,EAAA5R,IAAA3/E,KAAAquB,QAAAuxD,YACA2R,IACAvxF,KAAAquB,QAAA0B,OACA/vB,KAAAquB,QAAAuxD,YAAAD,GAEA3/E,KAAAquB,QAAAW,UAAAC,EAAAd,IACAc,EAAA1nB,MAAA,EAAA4mB,EAAAc,EAAAznB,OAAA,EAAA2mB,EAAA78B,EAAAC,EAAAmuF,EAAA92C,GAEA2oD,GACAvxF,KAAAquB,QAAAkC,UAEA,IAAAovD,EACAtkE,EAAAyoC,SAAA,EACKzjB,GACLI,EAAAU,cAAA4M,KAOA6hD,EAAA3uF,UAAAkhC,SAAA,WACA,IAAA9T,EAAAruB,KAAAquB,QACA,OAAAA,IAAAjnB,OAAA,MAMAwoF,EAAA3uF,UAAAitF,kBAAA,WACA,OAAAluF,KAAA0uF,iBASAkB,EAAA3uF,UAAAqwF,aAAA,SAAA7wD,GACA,OAA2D,EAAA0B,YAG3DytD,EA/V2B,CAgWzBhC,IAQF+B,GAAuB,iBAAAx7D,GACvB,OAAAA,EAAAhd,YAA6B0N,GAAA,EAASjQ,MAUtC+6E,GAAuB,gBAAAF,EAAAt7D,GACvB,WAAaw7D,GAAyE,IAQtFA,GAAuB1uF,UAAA0rF,SAGR,IAAAnoE,GAAA,wBCzYXgtE,GAAW,aAEfA,GAAWvwF,UAAAwwF,UAAA,SAAAr2E,EAAAs2E,GACX,OAAS99F,OAAAk2C,EAAA,EAAAl2C,IAOT49F,GAAWvwF,UAAA3Q,QAAA,WACX,OAASsD,OAAAk2C,EAAA,EAAAl2C,IAQT49F,GAAWvwF,UAAA0wF,aAAA,SAAAC,GACX,OAASh+F,OAAAk2C,EAAA,EAAAl2C,IAGM,IAAAi+F,GAAA,GCxBAC,GAAA,CACfryF,OAAA,SACAsyF,QAAA,UACAp9E,MAAA,QACAzV,YAAA,aACAE,QAAA,UACAi3B,KAAA,sCCMO,SAAA27D,GACPt/F,EAAAC,EAAAC,EAAAC,EAAAutB,EAAA6xE,EAAAC,EAAAC,GAmBA,IAlBA,IAiBAp0F,EAAAS,EAAA4zF,EAjBAn1D,EAAA,GAGAo1D,EAAA3/F,EAAAC,GAAAD,EAAAE,EAAAC,GAEAy/F,EAAAlyE,EAAAlvB,OAEAwD,EAAAhC,EAAAC,GACAmC,EAAApC,EAAAC,EAAA,GAEAgC,EAAAjC,EADAC,GAAAE,GAEAkC,EAAArC,EAAAC,EAAA,GACA4/F,EAAA,EACAz3D,EAAA/nC,KAAAyjB,KAAAzjB,KAAAka,IAAAtY,EAAAD,EAAA,GAAA3B,KAAAka,IAAAlY,EAAAD,EAAA,IAEA09F,EAAA,GACAC,EAAA,EAEAzhG,EAAA,EAAiBA,EAAAshG,IAActhG,EAAA,CAC/BwN,EAAA6zF,EAAAC,EAAAthG,EAAA,EAAAA,EACA,IAAA0hG,EAAAtyE,EAAAkuC,OAAA9vD,GAEAm0F,EAAAV,EADAO,EAAAH,EAAAK,EAAAF,IAAAE,GACAD,EACAA,GAAAE,EAEA,IADA,IAAAC,EAAAV,EAAAS,EAAA,EACAhgG,EAAAC,EAAAC,GAAA0/F,EAAAz3D,EAAA83D,GACAl+F,EAAAC,EACAG,EAAAC,EAEAJ,EAAAjC,EADAC,GAAAE,GAEAkC,EAAArC,EAAAC,EAAA,GACA4/F,GAAAz3D,EACAA,EAAA/nC,KAAAyjB,KAAAzjB,KAAAka,IAAAtY,EAAAD,EAAA,GAAA3B,KAAAka,IAAAlY,EAAAD,EAAA,IAEA,IAAA+9F,EAAAD,EAAAL,EACApoF,EAAApX,KAAAk5B,MAAAl3B,EAAAD,EAAAH,EAAAD,GAIA,GAHA29F,IACAloF,KAAA,GAAApX,KAAAoF,GAAApF,KAAAoF,SAEA6C,IAAAo3F,EAAA,CACA,IAAA3zE,EAAAtU,EAAAioF,EAEA,GADA3zE,KAAA1rB,KAAAoF,IAAA,EAAApF,KAAAoF,GAAAsmB,GAAA1rB,KAAAoF,GAAA,EAAApF,KAAAoF,GAAA,EACApF,KAAAyE,IAAAinB,GAAA0zE,EACA,YAGA,IAAAh5D,EAAA05D,EAAA/3D,EACAxpC,EAAYsC,OAAAmP,GAAA,EAAAnP,CAAIc,EAAAC,EAAAwkC,GAChB5nC,EAAYqC,OAAAmP,GAAA,EAAAnP,CAAIkB,EAAAC,EAAAokC,GAChBi5D,GAAAjoF,GACAkoF,IACAt0F,EAAA,GAAAzM,EACAyM,EAAA,GAAAxM,EACAwM,EAAA,GAAA40F,EAAA,GAEA50F,EAAA,GAAAy0F,IAGAC,EAAAE,EACA50F,EAAA,CAAAzM,EAAAC,EAAAohG,EAAA,EAAAxoF,EAFAqoF,EAAAE,GAGAL,EACAp1D,EAAA61D,QAAA/0F,GAEAk/B,EAAAphC,KAAAkC,GAEAq0F,EAAAjoF,GAEA+nF,GAAAS,EAEA,OAAA11D,ECnFA,IAAA81D,GAAA,CACAC,eAAA,EACAC,WAAA,EACAxzF,OAAA,EACAyzF,WAAA,EACAC,OAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,KAAA,EACAC,gBAAA,EACAC,eAAA,GACAC,iBAAA,GACAC,OAAA,IAOWC,GAAe,CAAAb,GAAAQ,MAMfM,GAAiB,CAAAd,GAAAY,QAMrBG,GAAA,CAAAf,GAAAE,YAMAc,GAAA,CAAAhB,GAAAG,YAGQc,GAAA,GCtCRC,GAAA,CACLnC,GAAU1yF,QACV0yF,GAAUryF,OACVqyF,GAAU5yF,YACV4yF,GAAUn9E,MACVm9E,GAAUz7D,KACVy7D,GAAUC,SAOLmC,GAAA,CACPv3D,KAAA,EACA/pC,IAAA,EACAiB,OAAA,GACA+oC,MAAA,EACAxnC,MAAA,EACA61E,IAAA,EACAkpB,OAAA,GACAC,QAAA,GACAC,WAAA,GACAC,YAAA,GACAC,OAAA,GCDIC,GAAY5gG,OAAAoT,GAAA,EAAApT,GAMhBkkC,GAAmBlkC,OAAAyzE,GAAA,EAAAzzE,GAuhCJ6gG,GAphCC,SAAArS,GAChB,SAAAsS,EAAA1gF,EAAA2gF,EAAA7gG,EAAAi6B,EAAA6mE,EAAAC,GACAzS,EAAA/uF,KAAA2M,MAKAA,KAAA60F,gBAMA70F,KAAAgU,YAOAhU,KAAA20F,YAMA30F,KAAA40F,WAMA50F,KAAA+tB,aAMA/tB,KAAA80F,aAAA,EAOA90F,KAAAlM,aAMAkM,KAAA+0F,WAMA/0F,KAAAg1F,2BAAA,KAMAh1F,KAAAi1F,2BAAA,KAMAj1F,KAAAk1F,mBAAA,KAMAl1F,KAAAm1F,aAAA,GAMAn1F,KAAAlP,YAAA,GAMAkP,KAAAo1F,iBAAA,GAMAp1F,KAAAq1F,mBAA8BzhG,OAAAyzE,GAAA,EAAAzzE,GAM9BoM,KAAAs1F,yBAAA,GAMAt1F,KAAAkkF,kBAAA,KAMAlkF,KAAAk0B,MAAmE,GAMnEl0B,KAAAyiF,cAAA,EA25BA,OAv5BAL,IAAAsS,EAAA1xF,UAAAo/E,GACAsS,EAAAzzF,UAAArN,OAAAqP,OAAAm/E,KAAAnhF,WACAyzF,EAAAzzF,UAAAiC,YAAAwxF,EAWAA,EAAAzzF,UAAAs0F,sBAAA,SAAAlnE,EAAA6B,EAAAC,EAAAqlE,EAAAC,EAAAC,EAAAC,GACAtnE,EAAA2B,YACA3B,EAAA+B,OAAAr6B,MAAAs4B,EAAA6B,GACA7B,EAAAgC,OAAAt6B,MAAAs4B,EAAA8B,GACA9B,EAAAgC,OAAAt6B,MAAAs4B,EAAAmnE,GACAnnE,EAAAgC,OAAAt6B,MAAAs4B,EAAAonE,GACApnE,EAAAgC,OAAAt6B,MAAAs4B,EAAA6B,GACAwlE,IACA11F,KAAA+0F,WAA2CW,EAAA,GAC3C11F,KAAA41F,MAAAvnE,IAEAsnE,IACA31F,KAAA61F,gBAAAxnE,EAAwD,GACxDA,EAAAsC,WAwBA+jE,EAAAzzF,UAAA60F,aAAA,SACAznE,EACA/8B,EACAC,EACA09B,EACA5Z,EACAC,EACAygF,EACAvuF,EACAwsB,EACAwrD,EACAC,EACA1rF,EACAwU,EACAytF,EACAzuF,EACA8/C,EACAquC,EACAC,GAEA,IAAAM,EAAAP,GAAAC,EAGArkG,GAFA+jB,GAAA9M,EAGAhX,GAFA+jB,GAAA/M,EAIA,IAQA2nB,EAEAC,EAEAqlE,EAEAC,EAdA/V,EAAAn4E,EAAAi4E,EAAAvwD,EAAA1nB,MAAA0nB,EAAA1nB,MAAAi4E,EAAAj4E,EACAqhC,EAAAphC,EAAAi4E,EAAAxwD,EAAAznB,OAAAynB,EAAAznB,OAAAi4E,EAAAj4E,EACA0uF,EAAA7uC,EAAA,GAAAq4B,EAAAn3E,EAAA8+C,EAAA,GACA8uC,EAAA9uC,EAAA,GAAAze,EAAArgC,EAAA8+C,EAAA,GACA+uC,EAAA9kG,EAAA+1D,EAAA,GACAgvC,EAAA9kG,EAAA81D,EAAA,IAUA4uC,GAAA,IAAAliG,KACAm8B,EAAA,CAAAkmE,EAAAC,GACAlmE,EAAA,CAAAimE,EAAAF,EAAAG,GACAb,EAAA,CAAAY,EAAAF,EAAAG,EAAAF,GACAV,EAAA,CAAAW,EAAAC,EAAAF,IAGA,IAAAvvF,EAAA,KACA,OAAA7S,EAAA,CACA,IAAAq0D,EAAA92D,EAAA+jB,EACAgzC,EAAA92D,EAAA+jB,EACA1O,EAAkBhT,OAAAyzE,GAAA,EAAAzzE,CAAgBkkC,GAAAswB,EAAAC,EAAA,IAAAt0D,GAAAq0D,GAAAC,GAE5Bz0D,OAAAoT,GAAA,EAAApT,CAAoB4gG,IACpB5gG,OAAAoT,GAAA,EAAApT,CAAiB4gG,GAAW5gG,OAAAyzE,GAAA,EAAAzzE,CAAckkC,GAAA5H,IAC1Ct8B,OAAAoT,GAAA,EAAApT,CAAiB4gG,GAAW5gG,OAAAyzE,GAAA,EAAAzzE,CAAckkC,GAAA3H,IAC1Cv8B,OAAAoT,GAAA,EAAApT,CAAiB4gG,GAAW5gG,OAAAyzE,GAAA,EAAAzzE,CAAckkC,GAAA09D,IAC1C5hG,OAAAoT,GAAA,EAAApT,CAAiB4gG,GAAW5gG,OAAAyzE,GAAA,EAAAzzE,CAAckkC,GAAA29D,SAE1C7hG,OAAAoT,GAAA,EAAApT,CAAcwiG,EAAAC,EAAAD,EAAAF,EAAAG,EAAAF,EAAuC3B,IAE3D,IAAAptF,EAAAinB,EAAAjnB,OACAkvF,EAAAX,IAAA,GAAAptF,EAAA,IACAlY,EACQmkG,GAAS,GAAA8B,GAAAlvF,EAAAG,OAAuCitF,GAAS,GAAA8B,GAAA,GACzD9B,GAAS,GAAA8B,GAAAlvF,EAAAI,QAAwCgtF,GAAS,GAAA8B,GAAA,EAOlE,GALAN,IACA1kG,EAAAyB,KAAAkhB,MAAA3iB,GACAC,EAAAwB,KAAAkhB,MAAA1iB,IAGAwkG,EAAA,CACA,IAAA1lG,GAAA,GAAA0lG,EAAA,GACA,OAEMniG,OAAAoT,GAAA,EAAApT,CAAMmiG,EAAiBvB,IAC7B,IAAA+B,EAAAlmG,EACA,CAAAg+B,EAAAznB,IAAAvV,MAAA,QAAA2iC,EAAA/E,EAAAuwD,EAAAC,EAAAC,EAAA92C,EAAAt3C,EAAAC,EAAAgX,GACA,KACAguF,GAAAN,GACAM,EAAA16F,KAAA65F,EAAAC,EAAAzlE,EAAAC,EAAAqlE,EAAAC,GAEAM,EAAAl6F,KAAA06F,QACKlmG,IACL4lG,GACAj2F,KAAAu1F,sBAAAlnE,EAAA6B,EAAAC,EAAAqlE,EAAAC,EAC8B,EACA,GAExBzmE,GAASX,EAAAznB,EAAAotB,EAAA/E,EAAAuwD,EAAAC,EAAAC,EAAA92C,EAAAt3C,EAAAC,EAAAgX,KASfmsF,EAAAzzF,UAAAu1F,gBAAA,SAAAC,GACA,IAAA1oE,EAAA/tB,KAAA+tB,WACA,UAAAA,EAAA0oE,IAAAlmF,IAAA,SAAAmmF,GACA,OAAAA,EAAA3oE,KAcA2mE,EAAAzzF,UAAA01F,sBAAA,SAAAjkG,EAAAC,EAAAC,EAAAC,EAAA+jG,EAAAC,GAEA,IAAAC,EAAA92F,KAAAlP,YAAAI,OACAH,EAAAiP,KAAA+2F,uBACAF,IACAlkG,GAAAE,GAEA,IAIA7B,EAAAgmG,EAAAC,EAJAC,EAAA,CAAAxkG,EAAAC,GAAAD,EAAAC,EAAA,IACAwkG,EAAA,CAAA5gF,SACA6gF,GAAA,EAGA,IAAApmG,EAAA2B,EAAAE,EAA6B7B,EAAA4B,EAAS5B,GAAA6B,EACtCskG,EAAA,GAAAzkG,EAAA1B,GACAmmG,EAAA,GAAAzkG,EAAA1B,EAAA,IACAimG,EAAgBrjG,OAAAoT,GAAA,EAAApT,CAAsB7C,EAAAomG,MACtCH,GACAI,IACAp3F,KAAAlP,YAAAgmG,KAAAI,EAAA,GACAl3F,KAAAlP,YAAAgmG,KAAAI,EAAA,IAEAl3F,KAAAlP,YAAAgmG,KAAAK,EAAA,GACAn3F,KAAAlP,YAAAgmG,KAAAK,EAAA,GACAC,GAAA,GACOH,IAAsBI,GAAA,EAAY9kG,cACzCyN,KAAAlP,YAAAgmG,KAAAK,EAAA,GACAn3F,KAAAlP,YAAAgmG,KAAAK,EAAA,GACAC,GAAA,GAEAA,GAAA,EAEAF,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAH,EAAAC,EAQA,OAJAL,GAAAQ,GAAApmG,IAAA2B,EAAAE,KACAmN,KAAAlP,YAAAgmG,KAAAI,EAAA,GACAl3F,KAAAlP,YAAAgmG,KAAAI,EAAA,IAEAJ,GAWApC,EAAAzzF,UAAAq2F,uBAAA,SAAA5kG,EAAAC,EAAA0e,EAAAxe,EAAA0kG,GACA,QAAAvmG,EAAA,EAAAC,EAAAogB,EAAAngB,OAAqCF,EAAAC,IAAQD,EAAA,CAC7C,IAAA4B,EAAAye,EAAArgB,GACAwmG,EAAAx3F,KAAA22F,sBAAAjkG,EAAAC,EAAAC,EAAAC,GAAA,MACA0kG,EAAA17F,KAAA27F,GACA7kG,EAAAC,EAEA,OAAAD,GAMA+hG,EAAAzzF,UAAAs/E,WAAA,SAAArkE,EAAAe,EAAAujE,GACAxgF,KAAAy3F,cAAAv7E,EAAAe,GACA,IAGAvqB,EAAA8kG,EAAAD,EAAAG,EACA/kG,EAJAkI,EAAAqhB,EAAA/E,UACAtkB,EAAAqpB,EAAApN,YACA6oF,EAAA33F,KAAAlP,YAAAI,OAGA,GAAA2J,GAAgBuc,GAAA,EAAY7X,cAAA,CAE5B7M,GADAwpB,EAAyE,GACzE9D,6BACAs/E,EAAA,GACA,IAAAhmF,EAAAwK,EAAA6zB,WACAp9C,EAAA,EACA,QAAA3B,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAwCF,EAAAC,IAAQD,EAAA,CAChD,IAAA4mG,EAAA,GACAjlG,EAAAqN,KAAAs3F,uBAAA5kG,EAAAC,EAAA+e,EAAA1gB,GAAA6B,EAAA+kG,GACAF,EAAA77F,KAAA+7F,GAEA53F,KAAAm1F,aAAAt5F,KAAA,CAA8Bm4F,GAAiBb,OAC/CwE,EAAAD,EAAAx7E,EAAAskE,EAAsDxpE,GAAA,SACjDnc,GAAkBuc,GAAA,EAAYhY,SAAAvE,GAAoBuc,GAAA,EAAY9X,mBACnEi4F,EAAA,GACA7kG,EAAAmI,GAAiCuc,GAAA,EAAYhY,QACc,EAAAgZ,6BAC3D8D,EAAAhO,qBACAvb,EAAAqN,KAAAs3F,uBAAA5kG,EAAA,EAC2G,EAAA6lB,UAC3G1lB,EAAA0kG,GACAv3F,KAAAm1F,aAAAt5F,KAAA,CAA8Bm4F,GAAiBb,OAC/CwE,EAAAJ,EAAAr7E,EAAAskE,EAAqDxpE,GAAA,KAChDnc,GAAkBuc,GAAA,EAAYlY,aAAArE,GAAwBuc,GAAA,EAAY/X,aACvE3M,EAAAwpB,EAAAhO,qBACAspF,EAAAx3F,KAAA22F,sBACAjkG,EAAA,EAAAA,EAAAxB,OAAA2B,GAAA,MACAmN,KAAAm1F,aAAAt5F,KAAA,CAA8Bm4F,GAAiBb,OAC/CwE,EAAAH,EAAAt7E,EAAAskE,EAAoDxpE,GAAA,KAC/Cnc,GAAkBuc,GAAA,EAAYnY,QACnCvM,EAAAwpB,EAAAhO,qBACAlO,KAAAlP,YAAA+K,KAAAnJ,EAAA,GAAAA,EAAA,IACA8kG,EAAAx3F,KAAAlP,YAAAI,OACA8O,KAAAm1F,aAAAt5F,KAAA,CAA8Bm4F,GAAiBb,OAC/CwE,EAAAH,EAAAt7E,EAAAskE,KAEAxgF,KAAA63F,YAAA37E,EAAAe,IAQAy3E,EAAAzzF,UAAAw2F,cAAA,SAAAv7E,EAAAe,GACAjd,KAAAg1F,2BAAA,CAAuChB,GAAiBhB,eAAA/1E,EAAA,GACxDjd,KAAAm1F,aAAAt5F,KAAAmE,KAAAg1F,4BACAh1F,KAAAi1F,2BAAA,CAAuCjB,GAAiBhB,eAAA/1E,EAAA,GACxDjd,KAAAs1F,yBAAAz5F,KAAAmE,KAAAi1F,6BAMAP,EAAAzzF,UAAA62F,OAAA,aAMApD,EAAAzzF,UAAA20F,MAAA,SAAAvnE,GACA,GAAAruB,KAAA+0F,WAAA,CACA,IAAAnvE,EAAmBhyB,OAAAyzE,GAAA,EAAAzzE,CAAcoM,KAAAq1F,mBAAA,OACjC0C,EAAA,IAAA/3F,KAAA+tB,WACAM,EAAA7lB,UAAAod,EAAA,GAAAmyE,EAAAnyE,EAAA,GAAAmyE,GACA1pE,EAAA5e,OAAAzP,KAAAyiF,eAEAp0D,EAAA42D,OACAjlF,KAAA+0F,YACA1mE,EAAAwxD,aAAA9pF,MAAAs4B,EAA0CkxD,KAS1CmV,EAAAzzF,UAAA40F,gBAAA,SAAAxnE,EAAA2pE,GACA3pE,EAAAmC,YAA4EwnE,EAAA,GAC5E3pE,EAAAoC,UAA0CunE,EAAA,GAC1C3pE,EAAAy3D,QAA+CkS,EAAA,GAC/C3pE,EAAA43D,SAAiD+R,EAAA,GACjD3pE,EAAA63D,WAA2C8R,EAAA,GACnC/jC,IACR5lC,EAAA23D,eAAiDgS,EAAA,GACjD3pE,EAAA8lC,YAAmD6jC,EAAA,MAQnDtD,EAAAzzF,UAAAg3F,iBAAA,SAAAlC,EAAA94E,GACA,GAAA84E,KAAA7kG,OAAA,GACA,IAAAgnG,EAAAnC,EAAA,GACA,MAAAmC,MAAAnC,EAAA7kG,OAAA,GAEA,IAAAinG,EAAA,CACAtmG,KAAkCkkG,EAAA,GAClCjkG,KAAkCikG,EAAA,GAClChkG,KAAkCgkG,EAAA,GAClC/jG,KAAkC+jG,EAAA,GAClC5kG,MAAA8rB,GAEA,IAAAjd,KAAA60F,cAAAz3D,SAAA+6D,GAAA,CACAn4F,KAAA60F,cAAAv3D,OAAA66D,GACA,QAAAvgG,EAAA,EAAA0Z,EAAAykF,EAAA7kG,OAAqD0G,EAAA0Z,IAAQ1Z,EAAA,CAC7D,IAAAwgG,EAAiDrC,EAAAn+F,GACjDwgG,IACAA,EAAAlnG,OAAA,IACA8O,KAAAu1F,sBAAA6C,EAAA,GACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAA,EAAA,IAAAA,EAAA,KAEcppE,GAASj5B,WAAAiF,EAAAo9F,KAIvBrC,EAAA7kG,OAAA,EACQ0C,OAAAoT,GAAA,EAAApT,CAAmBmiG,MAmB3BrB,EAAAzzF,UAAAo3F,QAAA,SACAhqE,EACAznB,EACA0xF,EACAnD,EACAa,EACAuC,EACAC,GAGA,IAAAnU,EACArkF,KAAAkkF,mBAAkCtwF,OAAAskB,GAAA,EAAAtkB,CAAMgT,EAAA5G,KAAAq1F,oBACxChR,EAAArkF,KAAAkkF,mBAEAlkF,KAAAkkF,oBACAlkF,KAAAkkF,kBAAA,IAEAG,EAAyBzwF,OAAA0wF,GAAA,EAAA1wF,CACzBoM,KAAAlP,YAAA,EAAAkP,KAAAlP,YAAAI,OAAA,EACA0V,EAAA5G,KAAAkkF,mBACMtwF,OAAAyzE,GAAA,EAAAzzE,CAAqBoM,KAAAq1F,mBAAAzuF,IA2B3B,IAzBA,IAIA6xF,EACApjF,EAAAC,EAAAojF,EAAAC,EAAAC,EAAAC,EAAA9C,EAAA9mE,EAkBsFhS,EACtF3rB,EAAAC,EAxBAunG,GAAwBllG,OAAA0C,GAAA,EAAA1C,CAAO0kG,GAC/BtnG,EAAA,EACAC,EAAAkkG,EAAAjkG,OACA7C,EAAA,EAGA0qG,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAAn5F,KAAAo1F,iBACA9S,EAAAtiF,KAAAyiF,cAEAvuD,EAA2D,CAC3D7F,UACAN,WAAA/tB,KAAA+tB,WACAj6B,WAAAkM,KAAAlM,WACAC,SAAAuuF,GAKA8W,EAAAp5F,KAAAm1F,iBAAAn1F,KAAA40F,SAAA,MAGA5jG,EAAAC,GAAA,CACA,IAAA+mG,EAAA7C,EAAAnkG,GAEA,OAD8CgnG,EAAA,IAE9C,KAAahE,GAAiBhB,eAC9B/1E,EAAkG+6E,EAAA,GAClGc,GAAAR,EAAmD1kG,OAAAk2C,EAAA,EAAAl2C,CAAMqpB,QAAAyY,cACzD1kC,EAAkCgnG,EAAA,QACvBh9F,IAAAw9F,GAA0C5kG,OAAAoT,GAAA,EAAApT,CACrD4kG,EAAAv7E,EAAAyY,cAAAt0B,eAGApQ,EAFAA,EAAkCgnG,EAAA,KAIlC,MACA,KAAahE,GAAiBf,WAC9B8F,EAAAK,IACAp5F,KAAA41F,MAAAvnE,GACA0qE,EAAA,GAEAC,EAAAI,IACA/qE,EAAAsC,SACAqoE,EAAA,GAEAD,GAAAC,IACA3qE,EAAA2B,YACA0oE,EAAAC,EAAApiF,OAEAvlB,EACA,MACA,KAAagjG,GAAiBv0F,OAE9B,IAAA/K,EAAA2vF,EADAh2F,EAAgC2pG,EAAA,IAEhCljG,EAAAuvF,EAAAh2F,EAAA,GAGAmD,EAFA6yF,EAAAh2F,EAAA,GAEAqG,EACAjD,EAFA4yF,EAAAh2F,EAAA,GAEAyG,EACA2C,EAAA1E,KAAAyjB,KAAAhlB,IAAAC,KACA48B,EAAA+B,OAAA17B,EAAA+C,EAAA3C,GACAu5B,EAAA22D,IAAAtwF,EAAAI,EAAA2C,EAAA,IAAA1E,KAAAoF,IAAA,KACAnH,EACA,MACA,KAAagjG,GAAiBd,WAC9B7kE,EAAAqC,cACA1/B,EACA,MACA,KAAagjG,GAAiBb,OAC9B9kG,EAAgC2pG,EAAA,GAChCS,EAAAT,EAAA,GACA,IAAA97E,EAAmF87E,EAAA,GACnFxX,EAAAwX,EAAA,GACAqB,EAAA,GAAArB,EAAA9mG,OAAA8mG,EAAA,QAAAh9F,EACAk5B,EAAAhY,WACAgY,EAAAjX,UACAjsB,KAAAmoG,IACAA,EAAAnoG,GAAA,IAEA,IAAAs2D,EAAA6xC,EAAAnoG,GACAqoG,EACAA,EAAAhV,EAAAh2F,EAAAoqG,EAAA,EAAAnxC,IAEAA,EAAA,GAAA+8B,EAAAh2F,GACAi5D,EAAA,GAAA+8B,EAAAh2F,EAAA,GACAi5D,EAAAp2D,OAAA,GAEAsvF,EAAAl5B,EAAApzB,KACAljC,EACA,MACA,KAAagjG,GAAiBX,WAC9BhlG,EAAgC2pG,EAAA,GAChCS,EAAiCT,EAAA,GACjC/oE,EACA+oE,EAAA,GAEA3iF,EAAsC2iF,EAAA,GACtC1iF,EAAsC0iF,EAAA,GACtCjC,EAAAwC,EAAA,KAAqGP,EAAA,GACrG,IAAAxwF,EAAyCwwF,EAAA,GACzChkE,EAA0CgkE,EAAA,GAC1CxY,EAA0CwY,EAAA,GAC1CvY,EAA0CuY,EAAA,IAC1CsB,EAAkDtB,EAAA,IAClDjkG,EAA2CikG,EAAA,IAC3CzvF,EAAwCyvF,EAAA,IACxCzwF,EAAwCywF,EAAA,IAExC3wC,OAAA,EAAAkyC,OAAA,EAAAC,OAAA,EAaA,IAZAxB,EAAA9mG,OAAA,IACAm2D,EAA+C2wC,EAAA,IAC/CuB,EAAgDvB,EAAA,IAChDwB,EAAkDxB,EAAA,MAElD3wC,EAAsBm2B,GACtB+b,EAAAC,GAAA,GAGAF,IACAvlG,GAAAuuF,GAEgBj0F,EAAAoqG,EAAQpqG,GAAA,EACxB2R,KAAA81F,aAAAznE,EACAg2D,EAAAh2F,GAAAg2F,EAAAh2F,EAAA,GAAA4gC,EAAA5Z,EAAAC,EACAygF,EAAAvuF,EAAAwsB,EAAAwrD,EAAAC,EAAA1rF,EAAAwU,EACAytF,EAAAzuF,EAAA8/C,EACAkyC,EAAmD,OACnDC,EAAqD,QAErDx5F,KAAAi4F,iBAAAlC,EAAA94E,KACAjsB,EACA,MACA,KAAagjG,GAAiBZ,WAC9B,IAAAt1F,GAAwCk6F,EAAA,GACxCplG,GAAsColG,EAAA,GACtCyB,GAA2CzB,EAAA,GAC3CjC,EAAAwC,EAAA,KAAqGP,EAAA,GACrG,IAAAlwB,GAA2CkwB,EAAA,GAC3C0B,GAA0C1B,EAAA,GAC1C7F,GAA2C6F,EAAA,GAC3C/F,GAA2D+F,EAAA,GAC3D1Y,GAA0C0Y,EAAA,GAC1C2B,GAA4C3B,EAAA,IAC5C4B,GAA8C5B,EAAA,IAC9C53E,GAAuC43E,EAAA,IACvC6B,GAA0C7B,EAAA,IAC1ClP,GAA4CkP,EAAA,IAE5C8B,GAA2BlmG,OAAAmmG,GAAA,EAAAnmG,CAAgBywF,EAAAvmF,GAAAlL,GAAA,GAC3ConG,GAAA/H,GAAA7xE,IACA,GAAA0nD,IAAAkyB,IAAAF,GAAA,CAEA,IACAzT,GAD0C,KAC1C4T,WAAAJ,IAAAxT,UAEA6T,GAAwBlI,GACxB3N,EAAAvmF,GAAAlL,GAAA,EAAAwtB,GAAA6xE,IAFA6H,GAAAE,IAAqD9F,GAAU7N,IAE/D8L,IACA,GAAA+H,GAAA,CACA,IAAAtwF,QAAA,EAAAuwF,QAAA,EAAAC,QAAA,EAAAzqB,QAAA,EAAA0qB,QAAA,EACA,GAAAV,GACA,IAAA/vF,GAAA,EAAAuwF,GAAAD,GAAAhpG,OAA8C0Y,GAAAuwF,KAAQvwF,GAEtDwwF,IADAC,GAAAH,GAAAtwF,KAC4C,GAC5C+lE,GAX0C,KAW1CxtC,SAAAi4D,GAAAP,GAAA,GAAAF,IACAtkF,EAA8CglF,GAAA,GAAAT,GAC9CtkF,EAAAmkF,GAAA9pB,GAAAnoE,OAAA,MAAAiyF,IAAAG,GAAAta,GACAt/E,KAAA81F,aAAAznE,EACsCgsE,GAAA,GAAiCA,GAAA,GAAA1qB,GACvEt6D,EAAAC,EAAAygF,EAAApmB,GAAAnoE,OAAA,MACsC6yF,GAAA,GAAAvR,IAAA,EAAAnZ,GAAApoE,MAClBi2E,GAAc,WAGlC,GAAAkc,GACA,IAAA9vF,GAAA,EAAAuwF,GAAAD,GAAAhpG,OAA8C0Y,GAAAuwF,KAAQvwF,GAEtDwwF,IADAC,GAAAH,GAAAtwF,KAC4C,GAC5C+lE,GAzB0C,KAyB1CxtC,SAAAi4D,GAAAP,GAAAH,GAAA,IACArkF,EAA8CglF,GAAA,GAC9C/kF,EAAAmkF,GAAA9pB,GAAAnoE,OAAA83E,GACAt/E,KAAA81F,aAAAznE,EACsCgsE,GAAA,GAAiCA,GAAA,GAAA1qB,GACvEt6D,EAAAC,EAAAygF,EAAApmB,GAAAnoE,OAAA,MACsC6yF,GAAA,GAAAvR,IAAA,EAAAnZ,GAAApoE,MAClBi2E,GAAc,YAKlCx9E,KAAAi4F,iBAAAlC,EAAA94E,KACAjsB,EACA,MACA,KAAagjG,GAAiBV,aAC9B,QAAAt4F,IAAAu9F,EAAA,CAEA,IAAAt7D,GAAAs7D,EADAt7E,EAAoG+6E,EAAA,IAEpG,GAAA/6D,GACA,OAAAA,KAGAjsC,EACA,MACA,KAAagjG,GAAiBT,KAC9B6F,EACAL,IAEA/4F,KAAA41F,MAAAvnE,KAEAr9B,EACA,MACA,KAAagjG,GAAiBR,gBAY9B,IAXAnlG,EAAgC2pG,EAAA,GAChCS,EAAiCT,EAAA,GACjC1mG,EAAA+yF,EAAAh2F,GAGAwqG,GAFAtnG,EAAA8yF,EAAAh2F,EAAA,IAEA,MADAuqG,EAAAtnG,EAAA,QAEAonG,GAAAG,IAAAF,IACAtqE,EAAA+B,OAAA9+B,EAAAC,GACAmnG,EAAAE,EACAD,EAAAE,GAEAxqG,GAAA,EAAsBA,EAAAoqG,EAAQpqG,GAAA,EAG9BuqG,GAFAtnG,EAAA+yF,EAAAh2F,IAEA,KACAwqG,GAFAtnG,EAAA8yF,EAAAh2F,EAAA,IAEA,KACAA,GAAAoqG,EAAA,GAAAG,IAAAF,GAAAG,IAAAF,IACAtqE,EAAAgC,OAAA/+B,EAAAC,GACAmnG,EAAAE,EACAD,EAAAE,KAGA7nG,EACA,MACA,KAAagjG,GAAiBP,eAC9BwF,EAAAjB,EACAh4F,KAAA+0F,WAAAiD,EAAA,GAEAe,IACA/4F,KAAA41F,MAAAvnE,GACA0qE,EAAA,EACAC,IACA3qE,EAAAsC,SACAqoE,EAAA,IAIA3qE,EAAAkT,UAAgFy2D,EAAA,KAChFhnG,EACA,MACA,KAAagjG,GAAiBN,iBAC9BwF,EAAAlB,EACAgB,IACA3qE,EAAAsC,SACAqoE,EAAA,GAEAh5F,KAAA61F,gBAAAxnE,EAA4D,KAC5Dr9B,EACA,MACA,KAAagjG,GAAiBL,OAC9ByF,EACAJ,IAEA3qE,EAAAsC,WAEA3/B,EACA,MACA,UACAA,GAIA+nG,GACA/4F,KAAA41F,MAAAvnE,GAEA2qE,GACA3qE,EAAAsC,UAaA+jE,EAAAzzF,UAAAq5F,OAAA,SAAAjsE,EAAAznB,EAAA07E,EAAAgW,EAAAtC,GACAh2F,KAAAyiF,cAAAH,EACAtiF,KAAAq4F,QAAAhqE,EAAAznB,EACA0xF,EAAAt4F,KAAAm1F,aAAAa,OAAAh7F,WAgBA05F,EAAAzzF,UAAAs5F,mBAAA,SACAlsE,EACAznB,EACA07E,EACAgW,EACAkC,EACAhC,GAGA,OADAx4F,KAAAyiF,cAAAH,EACAtiF,KAAAq4F,QAAAhqE,EAAAznB,EAAA0xF,EACAt4F,KAAAs1F,0BAAA,EAAAkF,EAAAhC,IAMA9D,EAAAzzF,UAAAw5F,gCAAA,WACA,IAIAzpG,EAJAskG,EAAAt1F,KAAAs1F,yBAEAA,EAAAjD,UAGA,IACA2F,EACAn9F,EAFAxD,EAAAi+F,EAAApkG,OAGA4M,GAAA,EACA,IAAA9M,EAAA,EAAeA,EAAAqG,IAAOrG,GAEtB6J,GADAm9F,EAAA1C,EAAAtkG,IAC0C,KACxBgjG,GAAiBV,aACnCx1F,EAAA9M,EACO6J,GAAkBm5F,GAAiBhB,iBAC1CgF,EAAA,GAAAhnG,EACQ4C,OAAAskB,GAAA,EAAAtkB,CAAeoM,KAAAs1F,yBAAAx3F,EAAA9M,GACvB8M,GAAA,IAQA42F,EAAAzzF,UAAA2gF,mBAAA,SAAArgD,EAAA/Q,GACA,IAAA0D,EAAAl0B,KAAAk0B,MACA,GAAAqN,EAAA,CACA,IAAAglD,EAAAhlD,EAAAilD,WACAtyD,EAAAqN,UAAwB8+C,GAAWkG,GACVlJ,SAEzBnpD,EAAAqN,eAAAvmC,EAEA,GAAAw1B,EAAA,CACA,IAAAi2D,EAAAj2D,EAAAg2D,WACAtyD,EAAA1D,YAA0B6vD,GAAWoG,GACVlJ,IAC3B,IAAAmJ,EAAAl2D,EAAAm2D,aACAzyD,EAAA4xD,aAAA9qF,IAAA0rF,EACAA,ElBt0BO,QkBu0BP,IAAAE,EAAAp2D,EAAAq2D,cACA3yD,EAAA6xD,SAAAa,EACAA,EAAAv1F,QAAsCisF,GACtC,IAAAwJ,EAAAt2D,EAAAu2D,oBACA7yD,EAAA8xD,eAAAc,GlB7zBO,EkB+zBP,IAAAE,EAAAx2D,EAAAy2D,cACA/yD,EAAA+xD,cAAAjrF,IAAAgsF,EACAA,ElB1zBO,QkB2zBP,IAAAE,EAAA12D,EAAApgC,WACA8jC,EAAAzD,eAAAz1B,IAAAksF,EACAA,ElBnxBO,EkBoxBP,IAAAC,EAAA32D,EAAA42D,gBACAlzD,EAAAgyD,gBAAAlrF,IAAAmsF,EACAA,ElBzzBO,GkB2zBPjzD,EAAAzD,UAAAzwB,KAAA80F,eACA90F,KAAA80F,aAAA5gE,EAAAzD,UAEAzwB,KAAAk1F,mBAAA,WAGAhhE,EAAA1D,iBAAAx1B,EACAk5B,EAAA4xD,aAAA9qF,EACAk5B,EAAA6xD,SAAA,KACA7xD,EAAA8xD,oBAAAhrF,EACAk5B,EAAA+xD,cAAAjrF,EACAk5B,EAAAzD,eAAAz1B,EACAk5B,EAAAgyD,gBAAAlrF,GASA05F,EAAAzzF,UAAAy5F,WAAA,SAAAxmE,EAAAhY,GACA,IAAAqlB,EAAArN,EAAAqN,UAEAm0D,EAAA,CAA2B1B,GAAiBP,eAAAlyD,GAK5C,MAJA,iBAAAA,GAEAm0D,EAAA75F,MAAA,GAEA65F,GAMAhB,EAAAzzF,UAAA05F,YAAA,SAAAzmE,GACAl0B,KAAAm1F,aAAAt5F,KAAAmE,KAAA46F,aAAA1mE,KAOAwgE,EAAAzzF,UAAA25F,aAAA,SAAA1mE,GACA,OACM8/D,GAAiBN,iBACvBx/D,EAAA1D,YAAA0D,EAAAzD,UAAAzwB,KAAA+tB,WAAAmG,EAAA4xD,QACA5xD,EAAA+xD,SAAA/xD,EAAAgyD,WACAlmF,KAAAw2F,gBAAAtiE,EAAA6xD,UAAA7xD,EAAA8xD,eAAAhmF,KAAA+tB,aASA2mE,EAAAzzF,UAAA45F,gBAAA,SAAA3mE,EAAAwmE,EAAAx+E,GACA,IAAAqlB,EAAArN,EAAAqN,UACA,iBAAAA,GAAArN,EAAA4mE,kBAAAv5D,SACAvmC,IAAAumC,GACAvhC,KAAAm1F,aAAAt5F,KAAA6+F,EAAArnG,KAAA2M,KAAAk0B,EAAAhY,IAEAgY,EAAA4mE,iBAAAv5D,IAQAmzD,EAAAzzF,UAAA85F,kBAAA,SAAA7mE,EAAAymE,GACA,IAAAnqE,EAAA0D,EAAA1D,YACAs1D,EAAA5xD,EAAA4xD,QACAC,EAAA7xD,EAAA6xD,SACAC,EAAA9xD,EAAA8xD,eACAC,EAAA/xD,EAAA+xD,SACAx1D,EAAAyD,EAAAzD,UACAy1D,EAAAhyD,EAAAgyD,YACAhyD,EAAA8mE,oBAAAxqE,GACA0D,EAAA+mE,gBAAAnV,GACAC,GAAA7xD,EAAAgnE,kBAA+CtnG,OAAAskB,GAAA,EAAAtkB,CAAMsgC,EAAAgnE,gBAAAnV,IACrD7xD,EAAAinE,uBAAAnV,GACA9xD,EAAAknE,iBAAAnV,GACA/xD,EAAAmnE,kBAAA5qE,GACAyD,EAAAonE,mBAAApV,UACAlrF,IAAAw1B,GACAmqE,EAAAtnG,KAAA2M,KAAAk0B,GAEAA,EAAA8mE,mBAAAxqE,EACA0D,EAAA+mE,eAAAnV,EACA5xD,EAAAgnE,gBAAAnV,EACA7xD,EAAAinE,sBAAAnV,EACA9xD,EAAAknE,gBAAAnV,EACA/xD,EAAAmnE,iBAAA5qE,EACAyD,EAAAonE,kBAAApV,IAQAwO,EAAAzzF,UAAA42F,YAAA,SAAA37E,EAAAe,GACAjd,KAAAg1F,2BAAA,GAAAh1F,KAAAm1F,aAAAjkG,OACA8O,KAAAg1F,2BAAA,KACAh1F,KAAAi1F,2BAAA,GAAAj1F,KAAAs1F,yBAAApkG,OACA8O,KAAAi1F,2BAAA,KACA,IAAAsG,EAAA,CAAkCvH,GAAiBV,aAAAr2E,GACnDjd,KAAAm1F,aAAAt5F,KAAA0/F,GACAv7F,KAAAs1F,yBAAAz5F,KAAA0/F,IAUA7G,EAAAzzF,UAAA81F,qBAAA,WACA,IAAA/2F,KAAAk1F,qBACAl1F,KAAAk1F,mBAAgCthG,OAAAoT,GAAA,EAAApT,CAAKoM,KAAA20F,WACrC30F,KAAA80F,aAAA,IACA,IAAAvtF,EAAAvH,KAAAlM,YAAAkM,KAAA80F,aAAA,KACQlhG,OAAAoT,GAAA,EAAApT,CAAMoM,KAAAk1F,mBAAA3tF,EAAAvH,KAAAk1F,oBAGd,OAAAl1F,KAAAk1F,oBAGAR,EAhhCgB,CAihCdxS,ICt2BasZ,GA/MM,SAAA9G,GACrB,SAAA+G,EAAAznF,EAAA2gF,EAAA7gG,EAAAi6B,EAAA6mE,EAAAC,GACAH,EAAArhG,KAAA2M,KAAAgU,EAAA2gF,EAAA7gG,EAAAi6B,EAAA6mE,EAAAC,GAMA70F,KAAA07F,gBAAA,KAMA17F,KAAA27F,mBAAA,KAMA37F,KAAA8hC,OAAA,KAMA9hC,KAAA47F,cAAA5gG,EAMAgF,KAAA67F,cAAA7gG,EAMAgF,KAAA87F,aAAA9gG,EAMAgF,KAAA+7F,cAAA/gG,EAMAgF,KAAAg8F,cAAAhhG,EAMAgF,KAAAi8F,cAAAjhG,EAMAgF,KAAAk8F,qBAAAlhG,EAMAgF,KAAAgxE,eAAAh2E,EAMAgF,KAAAm8F,YAAAnhG,EAMAgF,KAAAo8F,YAAAphG,EA2HA,OAvHA05F,IAAA+G,EAAAz4F,UAAA0xF,GACA+G,EAAAx6F,UAAArN,OAAAqP,OAAAyxF,KAAAzzF,WACAw6F,EAAAx6F,UAAAiC,YAAAu4F,EAUAA,EAAAx6F,UAAAo7F,iBAAA,SAAA3pG,EAAAC,EAAAC,EAAAC,GACA,OAAAmN,KAAA22F,sBAAAjkG,EAAAC,EAAAC,EAAAC,GAAA,OAMA4oG,EAAAx6F,UAAAsgF,UAAA,SAAAC,EAAAvkE,GACA,GAAAjd,KAAA8hC,OAAA,CAGA9hC,KAAAy3F,cAAAjW,EAAAvkE,GACA,IAAAvqB,EAAA8uF,EAAAtzE,qBACArb,EAAA2uF,EAAA1yE,YACAwtF,EAAAt8F,KAAAlP,YAAAI,OACA4lG,EAAA92F,KAAAq8F,iBAAA3pG,EAAA,EAAAA,EAAAxB,OAAA2B,GACAmN,KAAAm1F,aAAAt5F,KAAA,CACMm4F,GAAiBX,WAAAiJ,EAAAxF,EAAA92F,KAAA8hC,OAEvB9hC,KAAA47F,SAAA57F,KAAA67F,SAAA77F,KAAA07F,gBAAA17F,KAAA87F,QAAA97F,KAAA+7F,SACA/7F,KAAAg8F,SAAAh8F,KAAAi8F,SAAAj8F,KAAAk8F,gBAAAl8F,KAAAgxE,UACAhxE,KAAAm8F,OAAAn8F,KAAA+tB,WAAA/tB,KAAAo8F,SAEAp8F,KAAAs1F,yBAAAz5F,KAAA,CACMm4F,GAAiBX,WAAAiJ,EAAAxF,EAAA92F,KAAA27F,mBAEvB37F,KAAA47F,SAAA57F,KAAA67F,SAAA77F,KAAA07F,gBAAA17F,KAAA87F,QAAA97F,KAAA+7F,SACA/7F,KAAAg8F,SAAAh8F,KAAAi8F,SAAAj8F,KAAAk8F,gBAAAl8F,KAAAgxE,UACAhxE,KAAAm8F,OAAAn8F,KAAAo8F,SAEAp8F,KAAA63F,YAAArW,EAAAvkE,KAMAw+E,EAAAx6F,UAAAkgF,eAAA,SAAAC,EAAAnkE,GACA,GAAAjd,KAAA8hC,OAAA,CAGA9hC,KAAAy3F,cAAArW,EAAAnkE,GACA,IAAAvqB,EAAA0uF,EAAAlzE,qBACArb,EAAAuuF,EAAAtyE,YACAwtF,EAAAt8F,KAAAlP,YAAAI,OACA4lG,EAAA92F,KAAAq8F,iBACA3pG,EAAA,EAAAA,EAAAxB,OAAA2B,GACAmN,KAAAm1F,aAAAt5F,KAAA,CACMm4F,GAAiBX,WAAAiJ,EAAAxF,EAAA92F,KAAA8hC,OAEvB9hC,KAAA47F,SAAA57F,KAAA67F,SAAA77F,KAAA07F,gBAAA17F,KAAA87F,QAAA97F,KAAA+7F,SACA/7F,KAAAg8F,SAAAh8F,KAAAi8F,SAAAj8F,KAAAk8F,gBAAAl8F,KAAAgxE,UACAhxE,KAAAm8F,OAAAn8F,KAAA+tB,WAAA/tB,KAAAo8F,SAEAp8F,KAAAs1F,yBAAAz5F,KAAA,CACMm4F,GAAiBX,WAAAiJ,EAAAxF,EAAA92F,KAAA27F,mBAEvB37F,KAAA47F,SAAA57F,KAAA67F,SAAA77F,KAAA07F,gBAAA17F,KAAA87F,QAAA97F,KAAA+7F,SACA/7F,KAAAg8F,SAAAh8F,KAAAi8F,SAAAj8F,KAAAk8F,gBAAAl8F,KAAAgxE,UACAhxE,KAAAm8F,OAAAn8F,KAAAo8F,SAEAp8F,KAAA63F,YAAAzW,EAAAnkE,KAMAw+E,EAAAx6F,UAAA62F,OAAA,WACA93F,KAAAy6F,kCAEAz6F,KAAA47F,cAAA5gG,EACAgF,KAAA67F,cAAA7gG,EACAgF,KAAA27F,mBAAA,KACA37F,KAAA8hC,OAAA,KACA9hC,KAAA87F,aAAA9gG,EACAgF,KAAAm8F,YAAAnhG,EACAgF,KAAA+7F,cAAA/gG,EACAgF,KAAAg8F,cAAAhhG,EACAgF,KAAAi8F,cAAAjhG,EACAgF,KAAAk8F,qBAAAlhG,EACAgF,KAAAgxE,eAAAh2E,EACAgF,KAAAo8F,YAAAphG,GAMAygG,EAAAx6F,UAAA4gF,cAAA,SAAAC,EAAAiU,GACA,IAAArmF,EAAAoyE,EAAAwF,YACAtzF,EAAA8tF,EAAApwD,UACA6qE,EAAAza,EAAA0a,qBAAA,GACAvtE,EAAA6yD,EAAA3/C,SAAA,GACAvc,EAAAk8D,EAAAh7D,YACA9mB,KAAA47F,SAAAlsF,EAAA,GACA1P,KAAA67F,SAAAnsF,EAAA,GACA1P,KAAA07F,gBAA4E,EAC5E17F,KAAA27F,mBAAAY,EACAv8F,KAAA8hC,OAAA7S,EACAjvB,KAAA87F,QAAA9nG,EAAA,GACAgM,KAAA+7F,SAAAja,EAAA1tD,aACAp0B,KAAAg8F,SAAAp2E,EAAA,GACA5lB,KAAAi8F,SAAAr2E,EAAA,GACA5lB,KAAAk8F,gBAAApa,EAAA4F,oBACA1nF,KAAAgxE,UAAA8Q,EAAAj+B,cACA7jD,KAAAm8F,OAAAra,EAAA6F,WACA3nF,KAAAo8F,OAAApoG,EAAA,IAGAynG,EA3MqB,CA4MnBhH,IChGagI,GA5GW,SAAA/H,GAC1B,SAAAgI,EAAA1oF,EAAA2gF,EAAA7gG,EAAAi6B,EAAA6mE,EAAAC,GACAH,EAAArhG,KAAA2M,KAAAgU,EAAA2gF,EAAA7gG,EAAAi6B,EAAA6mE,EAAAC,GAsGA,OAnGAH,IAAAgI,EAAA15F,UAAA0xF,GACAgI,EAAAz7F,UAAArN,OAAAqP,OAAAyxF,KAAAzzF,WACAy7F,EAAAz7F,UAAAiC,YAAAw5F,EAUAA,EAAAz7F,UAAA07F,qBAAA,SAAAjqG,EAAAC,EAAAC,EAAAC,GACA,IAAAypG,EAAAt8F,KAAAlP,YAAAI,OACA4lG,EAAA92F,KAAA22F,sBACAjkG,EAAAC,EAAAC,EAAAC,GAAA,MACA+pG,EAAA,CAAmC5I,GAAiBR,gBAAA8I,EAAAxF,GAGpD,OAFA92F,KAAAm1F,aAAAt5F,KAAA+gG,GACA58F,KAAAs1F,yBAAAz5F,KAAA+gG,GACAhqG,GAMA8pG,EAAAz7F,UAAA8/E,eAAA,SAAAC,EAAA/jE,GACA,IAAAiX,EAAAl0B,KAAAk0B,MACA1D,EAAA0D,EAAA1D,YACAC,EAAAyD,EAAAzD,UACA,QAAAz1B,IAAAw1B,QAAAx1B,IAAAy1B,EAAA,CAGAzwB,KAAA+6F,kBAAA7mE,EAAAl0B,KAAA26F,aACA36F,KAAAy3F,cAAAzW,EAAA/jE,GACAjd,KAAAs1F,yBAAAz5F,KAAA,CACMm4F,GAAiBN,iBACvBx/D,EAAA1D,YAAA0D,EAAAzD,UAAAyD,EAAA4xD,QAAA5xD,EAAA+xD,SACA/xD,EAAAgyD,WAAAhyD,EAAA6xD,SAAA7xD,EAAA8xD,gBACO8N,IACP,IAAAphG,EAAAsuF,EAAA9yE,qBACArb,EAAAmuF,EAAAlyE,YACA9O,KAAA28F,qBAAAjqG,EAAA,EAAAA,EAAAxB,OAAA2B,GACAmN,KAAAs1F,yBAAAz5F,KAAuCg4F,IACvC7zF,KAAA63F,YAAA7W,EAAA/jE,KAMAy/E,EAAAz7F,UAAAggF,oBAAA,SAAAC,EAAAjkE,GACA,IAAAiX,EAAAl0B,KAAAk0B,MACA1D,EAAA0D,EAAA1D,YACAC,EAAAyD,EAAAzD,UACA,QAAAz1B,IAAAw1B,QAAAx1B,IAAAy1B,EAAA,CAGAzwB,KAAA+6F,kBAAA7mE,EAAAl0B,KAAA26F,aACA36F,KAAAy3F,cAAAvW,EAAAjkE,GACAjd,KAAAs1F,yBAAAz5F,KAAA,CACMm4F,GAAiBN,iBACvBx/D,EAAA1D,YAAA0D,EAAAzD,UAAAyD,EAAA4xD,QAAA5xD,EAAA+xD,SACA/xD,EAAAgyD,WAAAhyD,EAAA6xD,SAAA7xD,EAAA8xD,gBACO8N,IAKP,IAJA,IAAAziF,EAAA6vE,EAAA3oE,UACA7lB,EAAAwuF,EAAAhzE,qBACArb,EAAAquF,EAAApyE,YACAnc,EAAA,EACA3B,EAAA,EAAAC,EAAAogB,EAAAngB,OAAqCF,EAAAC,IAAQD,EAC7C2B,EAAAqN,KAAA28F,qBAAAjqG,EAAAC,EAAA0e,EAAArgB,GAAA6B,GAEAmN,KAAAs1F,yBAAAz5F,KAAuCg4F,IACvC7zF,KAAA63F,YAAA3W,EAAAjkE,KAMAy/E,EAAAz7F,UAAA62F,OAAA,WACA,IAAA5jE,EAAAl0B,KAAAk0B,MACAl5B,MAAAk5B,EAAA2oE,YAAA3oE,EAAA2oE,YAAA78F,KAAAlP,YAAAI,QACA8O,KAAAm1F,aAAAt5F,KAA6Bg4F,IAE7B7zF,KAAAy6F,kCACAz6F,KAAAk0B,MAAA,MAMAwoE,EAAAz7F,UAAA05F,YAAA,SAAAzmE,GACAl5B,MAAAk5B,EAAA2oE,YAAA3oE,EAAA2oE,YAAA78F,KAAAlP,YAAAI,SACA8O,KAAAm1F,aAAAt5F,KAA6Bg4F,IAC7B3/D,EAAA2oE,WAAA78F,KAAAlP,YAAAI,QAEAgjC,EAAA2oE,WAAA,EACAnI,EAAAzzF,UAAA05F,YAAAtnG,KAAA2M,KAAAk0B,GACAl0B,KAAAm1F,aAAAt5F,KAA2Bi4F,KAG3B4I,EAxG0B,CAyGxBjI,cCnGEqI,GAAmB,SAAApI,GACvB,SAAAqI,EAAA/oF,EAAA2gF,EAAA7gG,EAAAi6B,EAAA6mE,EAAAC,GACAH,EAAArhG,KAAA2M,KAAAgU,EAAA2gF,EAAA7gG,EAAAi6B,EAAA6mE,EAAAC,GAiMA,OA9LAH,IAAAqI,EAAA/5F,UAAA0xF,GACAqI,EAAA97F,UAAArN,OAAAqP,OAAAyxF,KAAAzzF,WACA87F,EAAA97F,UAAAiC,YAAA65F,EAUAA,EAAA97F,UAAA+7F,sBAAA,SAAAtqG,EAAAC,EAAA0e,EAAAxe,GACA,IAAAqhC,EAAAl0B,KAAAk0B,MACA+wD,OAAAjqF,IAAAk5B,EAAAqN,UACA5Q,EAAA31B,MAAAk5B,EAAA1D,YACAysE,EAAA5rF,EAAAngB,OACA8O,KAAAm1F,aAAAt5F,KAA2Bi4F,IAC3B9zF,KAAAs1F,yBAAAz5F,KAAuCi4F,IACvC,QAAA9iG,EAAA,EAAmBA,EAAAisG,IAAajsG,EAAA,CAChC,IAAA4B,EAAAye,EAAArgB,GACAsrG,EAAAt8F,KAAAlP,YAAAI,OACA4lG,EAAA92F,KAAA22F,sBAAAjkG,EAAAC,EAAAC,EAAAC,GAAA,GAAA89B,GACAisE,EAAA,CAAqC5I,GAAiBR,gBAAA8I,EAAAxF,GACtD92F,KAAAm1F,aAAAt5F,KAAA+gG,GACA58F,KAAAs1F,yBAAAz5F,KAAA+gG,GACAjsE,IAGA3wB,KAAAm1F,aAAAt5F,KAA+Bk4F,IAC/B/zF,KAAAs1F,yBAAAz5F,KAA2Ck4F,KAE3CphG,EAAAC,EAUA,OARAqyF,IACAjlF,KAAAm1F,aAAAt5F,KAA6B+3F,IAC7B5zF,KAAAs1F,yBAAAz5F,KAAyC+3F,KAEzCjjE,IACA3wB,KAAAm1F,aAAAt5F,KAA6Bg4F,IAC7B7zF,KAAAs1F,yBAAAz5F,KAAyCg4F,KAEzClhG,GAMAoqG,EAAA97F,UAAAy/E,WAAA,SAAAC,EAAA1jE,GACA,IAAAiX,EAAAl0B,KAAAk0B,MACAqN,EAAArN,EAAAqN,UACA/Q,EAAA0D,EAAA1D,YACA,QAAAx1B,IAAAumC,QAAAvmC,IAAAw1B,EAAA,CAGAxwB,KAAAk9F,qBAAAvc,GACA3gF,KAAAy3F,cAAA9W,EAAA1jE,QACAjiB,IAAAk5B,EAAAqN,WACAvhC,KAAAs1F,yBAAAz5F,KAAA,CACQm4F,GAAiBP,eACjBzT,GAAS3C,WAGjBriF,IAAAk5B,EAAA1D,aACAxwB,KAAAs1F,yBAAAz5F,KAAA,CACQm4F,GAAiBN,iBACzBx/D,EAAA1D,YAAA0D,EAAAzD,UAAAyD,EAAA4xD,QAAA5xD,EAAA+xD,SACA/xD,EAAAgyD,WAAAhyD,EAAA6xD,SAAA7xD,EAAA8xD,iBAGA,IAAAtzF,EAAAiuF,EAAAzyE,qBACArb,EAAA8tF,EAAA7xE,YACAwtF,EAAAt8F,KAAAlP,YAAAI,OACA8O,KAAA22F,sBACAjkG,EAAA,EAAAA,EAAAxB,OAAA2B,GAAA,MACA,IAAAsqG,EAAA,CAA6BnJ,GAAiBv0F,OAAA68F,GAC9Ct8F,KAAAm1F,aAAAt5F,KAA2Bi4F,GAAoBqJ,GAC/Cn9F,KAAAs1F,yBAAAz5F,KAAuCi4F,GAAoBqJ,GAC3Dn9F,KAAAs1F,yBAAAz5F,KAAuC+3F,SACvC54F,IAAAk5B,EAAAqN,WACAvhC,KAAAm1F,aAAAt5F,KAA6B+3F,SAE7B54F,IAAAk5B,EAAA1D,cACAxwB,KAAAm1F,aAAAt5F,KAA6Bg4F,IAC7B7zF,KAAAs1F,yBAAAz5F,KAAyCg4F,KAEzC7zF,KAAA63F,YAAAlX,EAAA1jE,KAMA8/E,EAAA97F,UAAAwgF,YAAA,SAAAC,EAAAzkE,GACA,IAAAiX,EAAAl0B,KAAAk0B,MACAqN,EAAArN,EAAAqN,UACA/Q,EAAA0D,EAAA1D,YACA,QAAAx1B,IAAAumC,QAAAvmC,IAAAw1B,EAAA,CAGAxwB,KAAAk9F,qBAAAxb,GACA1hF,KAAAy3F,cAAA/V,EAAAzkE,QACAjiB,IAAAk5B,EAAAqN,WACAvhC,KAAAs1F,yBAAAz5F,KAAA,CACQm4F,GAAiBP,eACjBzT,GAAS3C,WAGjBriF,IAAAk5B,EAAA1D,aACAxwB,KAAAs1F,yBAAAz5F,KAAA,CACQm4F,GAAiBN,iBACzBx/D,EAAA1D,YAAA0D,EAAAzD,UAAAyD,EAAA4xD,QAAA5xD,EAAA+xD,SACA/xD,EAAAgyD,WAAAhyD,EAAA6xD,SAAA7xD,EAAA8xD,iBAGA,IAAA30E,EAAAqwE,EAAAnpE,UACA7lB,EAAAgvF,EAAAtpE,6BACAvlB,EAAA6uF,EAAA5yE,YACA9O,KAAAg9F,sBAAAtqG,EAAA,EAAA2e,EAAAxe,GACAmN,KAAA63F,YAAAnW,EAAAzkE,KAMA8/E,EAAA97F,UAAAogF,iBAAA,SAAAC,EAAArkE,GACA,IAAAiX,EAAAl0B,KAAAk0B,MACAqN,EAAArN,EAAAqN,UACA/Q,EAAA0D,EAAA1D,YACA,QAAAx1B,IAAAumC,QAAAvmC,IAAAw1B,EAAA,CAGAxwB,KAAAk9F,qBAAA5b,GACAthF,KAAAy3F,cAAAnW,EAAArkE,QACAjiB,IAAAk5B,EAAAqN,WACAvhC,KAAAs1F,yBAAAz5F,KAAA,CACQm4F,GAAiBP,eACjBzT,GAAS3C,WAGjBriF,IAAAk5B,EAAA1D,aACAxwB,KAAAs1F,yBAAAz5F,KAAA,CACQm4F,GAAiBN,iBACzBx/D,EAAA1D,YAAA0D,EAAAzD,UAAAyD,EAAA4xD,QAAA5xD,EAAA+xD,SACA/xD,EAAAgyD,WAAAhyD,EAAA6xD,SAAA7xD,EAAA8xD,iBAOA,IAJA,IAAAt0E,EAAA4vE,EAAAvxC,WACAr9C,EAAA4uF,EAAAlpE,6BACAvlB,EAAAyuF,EAAAxyE,YACAnc,EAAA,EACA3B,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAsCF,EAAAC,IAAQD,EAC9C2B,EAAAqN,KAAAg9F,sBAAAtqG,EAAAC,EAAA+e,EAAA1gB,GAAA6B,GAEAmN,KAAA63F,YAAAvW,EAAArkE,KAMA8/E,EAAA97F,UAAA62F,OAAA,WACA93F,KAAAy6F,kCACAz6F,KAAAk0B,MAAA,KAKA,IAAAlgB,EAAAhU,KAAAgU,UACA,OAAAA,EAEA,IADA,IAAAljB,EAAAkP,KAAAlP,YACAE,EAAA,EAAAC,EAAAH,EAAAI,OAA8CF,EAAAC,IAAQD,EACtDF,EAAAE,GAAyB4C,OAAAqjB,GAAA,EAAArjB,CAAI9C,EAAAE,GAAAgjB,IAS7B+oF,EAAA97F,UAAAi8F,qBAAA,SAAAhhF,GACA,IAAAgY,EAAAl0B,KAAAk0B,WAEAl5B,IADAk5B,EAAAqN,WAEAvhC,KAAA66F,gBAAA3mE,EAAAl0B,KAAA06F,WAAAx+E,QAEAlhB,IAAAk5B,EAAA1D,aACAxwB,KAAA+6F,kBAAA7mE,EAAAl0B,KAAA26F,cAIAoC,EAnMuB,CAoMrBtI,IClMK,SAAA2I,GAAAjL,EAAAz/F,EAAAC,EAAAC,EAAAC,GACP,IAKA7B,EAAAqsG,EAAAC,EAAA5oG,EAAAI,EAAAyoG,EAAAC,EAAAC,EAAAC,EALAC,EAAAhrG,EACAirG,EAAAjrG,EACAkrG,EAAA,EACA5lG,EAAA,EACA7C,EAAAzC,EAEA,IAAA3B,EAAA2B,EAAkB3B,EAAA4B,EAAS5B,GAAA6B,EAAA,CAC3B,IAAA8B,EAAAjC,EAAA1B,GACA+D,EAAArC,EAAA1B,EAAA,QACAgK,IAAAtG,IACA+oG,EAAA9oG,EAAAD,EACAgpG,EAAA3oG,EAAAD,EACAwoG,EAAAvqG,KAAAyjB,KAAAinF,IAAAC,UACA1iG,IAAAuiG,IACAtlG,GAAAolG,EACAtqG,KAAA+qG,MAAAP,EAAAE,EAAAD,EAAAE,IAAAL,EAAAC,IACAnL,IACAl6F,EAAA4lG,IACAA,EAAA5lG,EACA0lG,EAAAvoG,EACAwoG,EAAA5sG,GAEAiH,EAAA,EACA7C,EAAApE,EAAA6B,IAGAwqG,EAAAC,EACAC,EAAAE,EACAD,EAAAE,GAEAhpG,EAAAC,EACAG,EAAAC,EAGA,OADAkD,GAAAqlG,GACAO,EAAA,CAAAzoG,EAAApE,GAAA,CAAA2sG,EAAAC,GCtCe,IAAAG,GAEf,OC4gBe,IClgBfC,GAAA,CACAC,OJ2Le,GI1LfC,QAAazJ,GACb1yD,MAAWy5D,GACXj5E,WAAgBk6E,GAChB/kF,QJuLe,GItLfymF,KDboB,SAAAzJ,GACpB,SAAA0J,EAAApqF,EAAA2gF,EAAA7gG,EAAAi6B,EAAA6mE,EAAAC,GACAH,EAAArhG,KAAA2M,KAAAgU,EAAA2gF,EAAA7gG,EAAAi6B,EAAA6mE,EAAAC,GAMA70F,KAAA07F,gBAMA17F,KAAAq+F,QAAA,KAMAr+F,KAAAyjF,MAAA,GAMAzjF,KAAA0jF,aAAA,EAMA1jF,KAAA2jF,aAAA,EAMA3jF,KAAA4jF,yBAAA5oF,EAMAgF,KAAA6jF,cAAA,EAMA7jF,KAAA+jF,eAAA,KAKA/jF,KAAAs+F,WAAA,GAMAt+F,KAAAgkF,iBAAA,KAKAhkF,KAAAu+F,aAAA,GAMAv+F,KAAAikF,WAAkE,GAKlEjkF,KAAAi6F,WAAA,GAMAj6F,KAAAw+F,SAAA,GAMAx+F,KAAAy+F,SAAA,GAMAz+F,KAAA0+F,WAAA,GAMA1+F,KAAA2+F,QAAA,GAEIlhB,GAAUvqD,QA2Yd,OAvYAwhE,IAAA0J,EAAAp7F,UAAA0xF,GACA0J,EAAAn9F,UAAArN,OAAAqP,OAAAyxF,KAAAzzF,WACAm9F,EAAAn9F,UAAAiC,YAAAk7F,EAKAA,EAAAn9F,UAAA0gF,SAAA,SAAAzlE,EAAAe,GACA,IAAAyoE,EAAA1lF,KAAA+jF,eACA6B,EAAA5lF,KAAAgkF,iBACAmC,EAAAnmF,KAAAikF,WACA,QAAAjkF,KAAAyjF,OAAA0C,IAAAT,GAAAE,GAAA,CAIA,IAMA50F,EAAAC,EANA6M,EAAAkC,KAAAlP,YAAAI,OAEA0tG,EAAA1iF,EAAA/E,UACAzkB,EAAA,KACAE,EAAA,EACAC,EAAA,EAGA,GAAAszF,EAAA0Y,YAAgCd,GAAa,CAC7C,IAAWnqG,OAAAoT,GAAA,EAAApT,CAAUoM,KAAA+2F,uBAAA76E,EAAA9a,aACrB,OAEA,IAAAiQ,EAGA,GAFA3e,EAAAwpB,EAAAhO,qBACArb,EAAAqpB,EAAApN,YACA8vF,GAA0BxnF,GAAA,EAAYlY,YACtCmS,EAAA,CAAA3e,EAAAxB,aACO,GAAA0tG,GAA0BxnF,GAAA,EAAY9X,kBAC7C+R,EAAA6K,EAAA3D,eACO,GAAAqmF,GAA0BxnF,GAAA,EAAYhY,QAC7CiS,EAAA6K,EAAA3D,UAAAlnB,MAAA,UACO,GAAAutG,GAA0BxnF,GAAA,EAAY7X,cAAA,CAC7C,IAAAmS,EAAAwK,EAAA6zB,WAEA,IADA1+B,EAAA,GACArgB,EAAA,EAAAC,EAAAygB,EAAAxgB,OAAsCF,EAAAC,IAAQD,EAC9CqgB,EAAAxV,KAAA6V,EAAA1gB,GAAA,IAGAgP,KAAAy3F,cAAAv7E,EAAAe,GAIA,IAHA,IAEA6hF,EAFAzY,EAAAF,EAAAE,UACA0Y,EAAA,EAEAhmE,EAAA,EAAAimE,EAAA3tF,EAAAngB,OAAuC6nC,EAAAimE,IAAQjmE,EAAA,CAC/C,GAAA/9B,MAAAqrF,EAAA,CACA,IAAA79C,EAAsB40D,GAAajX,EAAAgM,SAAAz/F,EAAAqsG,EAAA1tF,EAAA0nB,GAAAlmC,GACnCksG,EAAAv2D,EAAA,GACAs2D,EAAAt2D,EAAA,QAEAs2D,EAAAztF,EAAA0nB,GAEA,IAAA/nC,EAAA+tG,EAA4B/tG,EAAA8tG,EAAa9tG,GAAA6B,EACzCmN,KAAAlP,YAAA+K,KAAAnJ,EAAA1B,GAAA0B,EAAA1B,EAAA,IAEA4B,EAAAoN,KAAAlP,YAAAI,OACA6tG,EAAA1tF,EAAA0nB,GACA/4B,KAAAi/F,WAAAnhG,EAAAlL,EAAAoN,KAAA07F,iBACA59F,EAAAlL,EAEAoN,KAAA63F,YAAA37E,EAAAe,OAEK,CACL,IAAA0yD,EAAA3vE,KAAAmiC,SAAAniC,KAAAyjF,MAAAzjF,KAAAw+F,SAAAx+F,KAAAy+F,SAAAz+F,KAAA0+F,YACAn3F,EAAAooE,EAAApoE,MAAAvH,KAAA+tB,WACA,OAAA6wE,GACA,KAAaxnF,GAAA,EAAYnY,MACzB,KAAamY,GAAA,EAAY/X,YAEzBzM,GADAF,EAAAwpB,EAAAhO,sBACAhd,OACA,MACA,KAAakmB,GAAA,EAAYlY,YACzBxM,EAAkF,EAAAwwB,kBAClF,MACA,KAAa9L,GAAA,EAAY3X,OACzB/M,EAA8E,EAAA7C,YAC9E,MACA,KAAaunB,GAAA,EAAY9X,kBAEzB1M,GADAF,EAAuF,EAAA0nC,oBACvFlpC,OACA,MACA,KAAakmB,GAAA,EAAYhY,QAEzB,GADA1M,EAA+E,EAAA8lB,wBAC/E2tE,EAAAre,UAAAp1E,EAAA,GAAAsN,KAAAlM,WAAAyT,EACA,OAEA1U,EAAA,EACA,MACA,KAAaukB,GAAA,EAAY7X,cACzB,IAAAy7B,EAAuF,EAAAgV,wBAEvF,IADAt9C,EAAA,GACA1B,EAAA,EAAAC,EAAA+pC,EAAA9pC,OAAiDF,EAAAC,EAAQD,GAAA,GACzDm1F,EAAAre,UAAA9sC,EAAAhqC,EAAA,GAAAgP,KAAAlM,YAAAyT,IACA7U,EAAAmJ,KAAAm/B,EAAAhqC,GAAAgqC,EAAAhqC,EAAA,IAIA,OADA4B,EAAAF,EAAAxB,QAEA,OAKA0B,EAAAoN,KAAA22F,sBAAAjkG,EAAA,EAAAE,EAAAC,GAAA,OACAszF,EAAAoT,gBAAApT,EAAAqT,oBACAx5F,KAAA4hF,mBAAAuE,EAAAoT,eAAApT,EAAAqT,kBACArT,EAAAoT,iBACAv5F,KAAA66F,gBAAA76F,KAAAk0B,MAAAl0B,KAAA06F,WAAAx+E,GACAlc,KAAAs1F,yBAAAz5F,KAAAmE,KAAA06F,WAAA16F,KAAAk0B,MAAAhY,KAEAiqE,EAAAqT,mBACAx5F,KAAA+6F,kBAAA/6F,KAAAk0B,MAAAl0B,KAAA26F,aACA36F,KAAAs1F,yBAAAz5F,KAAAmE,KAAA46F,aAAA56F,KAAAk0B,UAGAl0B,KAAAy3F,cAAAv7E,EAAAe,GACAjd,KAAAk/F,eAAAvvB,EAAA7xE,EAAAlL,GACAoN,KAAA63F,YAAA37E,EAAAe,MAWAmhF,EAAAn9F,UAAAkhC,SAAA,SAAA/hB,EAAAy5E,EAAAH,EAAAC,GACA,IAAAhqB,EACA7zE,EAAA69F,EAAAE,EAAAz5E,EAAAs5E,EAAA15F,KAAA+tB,WAEA,IAAS0vD,GAAUlrD,YAAAz2B,GAAA,CACnB,IAAA8pF,EAAA+T,EAAA35F,KAAAu+F,aAAA5E,IAAA35F,KAAAgkF,iBAAA,KACA0B,EAAAgU,EAAA15F,KAAAs+F,WAAA5E,IAAA15F,KAAA+jF,eAAA,KACAoC,EAAAnmF,KAAAi6F,WAAAJ,IAAA75F,KAAAikF,WACAl2D,EAAA/tB,KAAA+tB,WACAxlB,EAAA49E,EAAA59E,MAAAwlB,EACAoxE,EAAkBjL,GAAU/N,EAAAE,WxB9HrB,UwB+HPuT,EAAAD,GAAA/T,EAAAn1D,UAAAm1D,EAAAn1D,UAAA,EAEA2uE,EAAAh/E,EAAA9P,MAAA,MACA+uF,EAAAD,EAAAluG,OACAouG,EAAA,GACA/3F,EA+PO,SAAAmnE,EAAA0wB,EAAAE,GAGP,IAFA,IAAAD,EAAAD,EAAAluG,OACAqW,EAAA,EACAvW,EAAA,EAAiBA,EAAAquG,IAAcruG,EAAA,CAC/B,IAAAuuG,EAAuBpgB,GAAgBzQ,EAAA0wB,EAAApuG,IACvCuW,EAAAxU,KAAAE,IAAAsU,EAAAg4F,GACAD,EAAAzjG,KAAA0jG,GAEA,OAAAh4F,EAvQAi4F,CAAArZ,EAAAzX,KAAA0wB,EAAAE,GACAG,EAAuBvgB,GAAiBiH,EAAAzX,MACxClnE,EAAAi4F,EAAAJ,EACAK,EAAAn4F,EAAAqyF,EACAvrE,EAAoBz6B,OAAA0tC,GAAA,EAAA1tC,CACpBb,KAAAk1B,KAAAy3E,EAAAn3F,GACAxV,KAAAk1B,MAAAzgB,EAAAoyF,GAAArxF,IACAonE,EAAAthD,EAAAjnB,OACMq2E,GAAU70E,IAAA9M,EAAA6zE,GAChB,GAAApnE,GACA8lB,EAAA9lB,WAEA8lB,EAAAqgD,KAAAyX,EAAAzX,KACAirB,IACAtrE,EAAAmC,YAAAo1D,EAAAp1D,YACAnC,EAAAoC,UAAAmpE,EACAvrE,EAAAy3D,QAAmDF,EAAA,QACnDv3D,EAAA43D,SAAqDL,EAAA,SACrDv3D,EAAA63D,WAAAN,EAAAM,WACYjyB,GAAgB2xB,EAAAG,SAAA70F,SAC5Bm9B,EAAA8lC,YAAAyxB,EAAAG,UACA13D,EAAA23D,eAAAJ,EAAAI,iBAGA0T,IACArrE,EAAAkT,UAAAmkD,EAAAnkD,WAEAlT,EAAAi4D,aAAA,SACAj4D,EAAAg4D,UAAA,SACA,IAEAr1F,EAFA2uG,EAAA,GAAAR,EACA7tG,EAAA6tG,EAAAxvB,EAAApoE,MAAAgB,EAAAo3F,EAAA/F,EAEA,GAAAD,EACA,IAAA3oG,EAAA,EAAmBA,EAAAquG,IAAcruG,EACjCq9B,EAAAu2D,WAAAwa,EAAApuG,GAAAM,EAAAquG,EAAAL,EAAAtuG,GAAA,IAAA4oG,EAAA6F,GAAAzuG,EAAAyuG,GAGA,GAAA/F,EACA,IAAA1oG,EAAA,EAAmBA,EAAAquG,IAAcruG,EACjCq9B,EAAAw2D,SAAAua,EAAApuG,GAAAM,EAAAquG,EAAAL,EAAAtuG,GAAA,IAAA4oG,EAAA6F,GAAAzuG,EAAAyuG,GAIA,OAAWhiB,GAAUjyE,IAAA1P,IASrBsiG,EAAAn9F,UAAAi+F,eAAA,SAAAvvB,EAAA7xE,EAAAlL,GACA,IAAAuzF,EAAAnmF,KAAAikF,WACA2B,EAAA5lF,KAAAgkF,iBACAj2D,EAAA/tB,KAAA+tB,WACAoxE,EAAgBjL,GAAU/N,EAAAE,WxB5LnB,UwB6LPoT,EAAmBvF,GAAU/N,EAAAG,cAC7BsT,EAAAhU,KAAAn1D,UAAAm1D,EAAAn1D,UAAA,EAEApb,EAAA8pF,EAAAxvB,EAAApoE,MAAAwmB,EAAA,MAAAoxE,GAAAvF,EACAtkF,EAAAmkF,EAAA9pB,EAAAnoE,OAAAumB,EAAA,MAAA0rE,GAAAG,EACA55F,KAAAm1F,aAAAt5F,KAAA,CAA4Bm4F,GAAiBX,WAAAv1F,EAAAlL,EAC7C+8E,GAAAt6D,EAAArV,KAAA0jF,cAAA31D,GAAAzY,EAAAtV,KAAA2jF,cAAA51D,EACA/tB,KAAA07F,gBAAA/rB,EAAAnoE,OAAA,MAAAxH,KAAA4jF,oBAAA5jF,KAAA6jF,cACA,EAAAlU,EAAApoE,MACA4+E,EAAA9+B,SAA2Bm2B,GACnBA,GAAc2I,EAAA9+B,QAAA92C,IAAA,SAAA0rB,GACtB,OAAAA,EAAAlO,MAEAo4D,EAAAoT,iBAAApT,EAAAqT,mBAEAx5F,KAAAs1F,yBAAAz5F,KAAA,CAAwCm4F,GAAiBX,WAAAv1F,EAAAlL,EACzD+8E,GAAAt6D,EAAArV,KAAA0jF,cAAA31D,GAAAzY,EAAAtV,KAAA2jF,cAAA51D,EACA/tB,KAAA07F,gBAAA/rB,EAAAnoE,OAAA,MAAAxH,KAAA4jF,oBAAA5jF,KAAA6jF,cACA,EAAA91D,EAAA4hD,EAAApoE,MAAA4+E,EAAA9+B,UACA8+B,EAAAoT,iBAAApT,EAAAqT,oBAUA4E,EAAAn9F,UAAAg+F,WAAA,SAAAnhG,EAAAlL,EAAAmjG,GACA,IAAAnQ,EAAA5lF,KAAAgkF,iBACAmC,EAAAnmF,KAAAikF,WACAyB,EAAA1lF,KAAA+jF,eAEA4V,EAAA35F,KAAA0+F,WACA9Y,IACA+T,KAAA35F,KAAAu+F,eACAv+F,KAAAu+F,aAAA5E,GAAqF,CACrFnpE,YAAAo1D,EAAAp1D,YACAs1D,QAAAF,EAAAE,QACAE,eAAAJ,EAAAI,eACAv1D,UAAAm1D,EAAAn1D,UACAw1D,SAAAL,EAAAK,SACAC,WAAAN,EAAAM,WACAH,SAAAH,EAAAG,YAIA,IAAA8T,EAAA75F,KAAAw+F,SACAx+F,KAAAw+F,YAAAx+F,KAAAi6F,aACAj6F,KAAAi6F,WAAAj6F,KAAAw+F,UAAmF,CACnF9vB,KAAAyX,EAAAzX,KACA2X,UAAAF,EAAAE,WxBjPO,SwBkPP99E,MAAA49E,EAAA59E,QAGA,IAAAmxF,EAAA15F,KAAAy+F,SACA/Y,IACAgU,KAAA15F,KAAAs+F,aACAt+F,KAAAs+F,WAAA5E,GAA+E,CAC/En4D,UAAAmkD,EAAAnkD,aAKA,IAAAxT,EAAA/tB,KAAA+tB,WACA0rE,EAAmBvF,GAAU/N,EAAAG,cAE7BhH,EAAAt/E,KAAA2jF,aAAA51D,EACA3N,EAAApgB,KAAAyjF,MACA/U,EAAAyX,EAAAzX,KACAoa,EAAA3C,EAAA59E,MACAqxF,EAAAhU,IAAAn1D,UAAAq4D,EAAA,IACAwW,EAAAt/F,KAAA2+F,QAAAjwB,GACA4wB,IACAt/F,KAAA2+F,QAAAjwB,GAAA4wB,EAAA,IAEAt/F,KAAAm1F,aAAAt5F,KAAA,CAA4Bm4F,GAAiBZ,WAC7Ct1F,EAAAlL,EAAA6mG,EAAA1D,EACA5P,EAAAre,SAAA4xB,EAAAvT,EAAAgM,SACA,SAAA/xE,GACA,IAAA7Y,EAAA+3F,EAAAl/E,GAIA,OAHA7Y,IACAA,EAAA+3F,EAAAl/E,GAAiC++D,GAAgBzQ,EAAAtuD,IAEjD7Y,EAAAuhF,EAAA/6D,GAEAuxD,EAAAqa,EAAAC,EAAA7rE,EAAA3N,EAAAy5E,EAAA,IAEA75F,KAAAs1F,yBAAAz5F,KAAA,CAAwCm4F,GAAiBZ,WACzDt1F,EAAAlL,EAAA6mG,EAAA1D,EACA5P,EAAAre,SAAA4xB,EAAAvT,EAAAgM,SACA,SAAA/xE,GACA,IAAA7Y,EAAA+3F,EAAAl/E,GAIA,OAHA7Y,IACAA,EAAA+3F,EAAAl/E,GAAiC++D,GAAgBzQ,EAAAtuD,IAEjD7Y,EAAAuhF,GAEAxJ,EAAAqa,EAAAC,EAAAx5E,EAAAy5E,EAAA,EAAA9rE,KAOAqwE,EAAAn9F,UAAA+gF,aAAA,SAAAC,EAAA8T,GACA,IAAA5P,EAAAT,EAAAE,EACA,GAAA3D,EAEK,CACLjiF,KAAA07F,gBAA8E,EAE9E,IAAA9T,EAAA3F,EAAAiD,UACA0C,IAGAlC,EAAA1lF,KAAA+jF,kBAEA2B,EAAA1lF,KAAA+jF,eAAwF,IAExF2B,EAAAnkD,UAA8B8+C,GAC9BuH,EAAApB,YAAsCnJ,KAPtCqI,EAAA1lF,KAAA+jF,eAAA,KAUA,IAAA+D,EAAA7F,EAAAkD,YACA,GAAA2C,EAEO,EACPlC,EAAA5lF,KAAAgkF,oBAEA4B,EAAA5lF,KAAAgkF,iBAA8F,IAE9F,IAAA+B,EAAA+B,EAAAjB,cACAb,EAAA8B,EAAAf,oBACAt2D,EAAAq3D,EAAA13F,WACA81F,EAAA4B,EAAAV,gBACAxB,EAAAE,QAAAgC,EAAAnB,cxBhXO,QwBiXPf,EAAAG,aAAA10F,QAA6DisF,GAC7DsI,EAAAI,oBACAhrF,IAAAgrF,ExBrWO,EwBqWyDA,EAChEJ,EAAAK,SAAA6B,EAAAb,exB/VO,QwBgWPrB,EAAAn1D,eACAz1B,IAAAy1B,ExBvTO,EwBuT+CA,EACtDm1D,EAAAM,gBACAlrF,IAAAkrF,ExB5VO,GwB4ViDA,EACxDN,EAAAp1D,YAAkC6vD,GAClCyH,EAAAtB,YAAwCjJ,SApBxCqI,EAAA5lF,KAAAgkF,iBAAA,KAuBAmC,EAAAnmF,KAAAikF,WACA,IAAAvV,EAAAuT,EAAAsG,WxB5YO,kBwB6YD1K,GAASnP,GACf,IAAAoa,EAAA7G,EAAA0F,WACAxB,EAAAre,SAAAma,EAAA2d,cACAzZ,EAAAzX,OACAyX,EAAAgM,SAAAlQ,EAAA4d,cACA1Z,EAAA0Y,UAAA5c,EAAA6d,eACA3Z,EAAAE,UAAApE,EAAAgH,eACA9C,EAAAG,aAAArE,EAAAkH,mBxBrVO,SwBsVPhD,EAAAoT,eAAAtX,EAAA8d,oBACA5Z,EAAAqT,iBAAAvX,EAAA+d,sBACA7Z,EAAA9+B,QAAA46B,EAAAge,cAAoDziB,GACpD2I,EAAA59E,WAAAvN,IAAA8tF,EAAA,EAAAA,EAEA,IAAAN,EAAAvG,EAAAwG,aACAC,EAAAzG,EAAA0G,aACAC,EAAA3G,EAAAyF,oBACAmB,EAAA5G,EAAAp+B,cACA7jD,KAAAyjF,MAAAxB,EAAAt1B,WAAA,GACA3sD,KAAA0jF,kBAAA1oF,IAAAwtF,EAAA,EAAAA,EACAxoF,KAAA2jF,kBAAA3oF,IAAA0tF,EAAA,EAAAA,EACA1oF,KAAA4jF,yBAAA5oF,IAAA4tF,KACA5oF,KAAA6jF,mBAAA7oF,IAAA6tF,EAAA,EAAAA,EAEA7oF,KAAA0+F,WAAA9Y,GACA,iBAAAA,EAAAp1D,YAAAo1D,EAAAp1D,YAAgF58B,OAAAk2C,EAAA,EAAAl2C,CAAMgyF,EAAAp1D,cACtFo1D,EAAAE,QAAAF,EAAAI,eAAA,IAAAJ,EAAAn1D,UACAm1D,EAAAK,SAAAL,EAAAM,WAAA,IAAAN,EAAAG,SAAA70D,OAAA,IACA,GACAlxB,KAAAw+F,SAAArY,EAAAzX,KAAAyX,EAAA59E,OAAA49E,EAAAE,WAAA,KACArmF,KAAAy+F,SAAA/Y,EACA,iBAAAA,EAAAnkD,UAAAmkD,EAAAnkD,UAAA,IAA+E3tC,OAAAk2C,EAAA,EAAAl2C,CAAM8xF,EAAAnkD,WACrF,QA1EAvhC,KAAAyjF,MAAA,IA8EA2a,EAlfoB,CAmflB3J,KCleEyL,GAAiB,SAAAC,GACrB,SAAAC,EACApsF,EACA2gF,EACA7gG,EACAi6B,EACA6mE,EACAC,EACAwL,GAEAF,EAAA9sG,KAAA2M,MAMAA,KAAAsgG,eAAAzL,EAMA70F,KAAA07F,gBAAA,KAMA17F,KAAAugG,WAAAvsF,EAMAhU,KAAAwgG,WAAA7L,EAMA30F,KAAAygG,UAAA7L,EAMA50F,KAAA2mC,YAAA5Y,EAMA/tB,KAAA0gG,YAAA5sG,EAMAkM,KAAA2gG,cAAAN,EAMArgG,KAAA4gG,iBAAA,GAMA5gG,KAAA6gG,qBAAgCjtG,OAAA0tC,GAAA,EAAA1tC,CAAqB,KAMrDoM,KAAA8gG,uBAAkCltG,OAAAyzE,GAAA,EAAAzzE,GAiSlC,OA9RAusG,IAAAC,EAAAp9F,UAAAm9F,GACAC,EAAAn/F,UAAArN,OAAAqP,OAAAk9F,KAAAl/F,WACAm/F,EAAAn/F,UAAAiC,YAAAk9F,EAKAA,EAAAn/F,UAAA0wF,aAAA,SAAAC,GACA,IAAAmP,EAAA,KAUA,OATA/gG,KAAAsgG,iBACA1O,GACAmP,EAAA/gG,KAAA07F,iBAC0B,MAE1BqF,EAAA/gG,KAAA07F,gBAA2C9nG,OAAAoT,GAAA,EAAApT,IAC3CiI,KAAA,IAGAklG,GAOAX,EAAAn/F,UAAAqvB,KAAA,SAAAjC,EAAAznB,GACA,IAAAo6F,EAAAhhG,KAAAihG,cAAAr6F,GACAynB,EAAA2B,YACA3B,EAAA+B,OAAA4wE,EAAA,GAAAA,EAAA,IACA3yE,EAAAgC,OAAA2wE,EAAA,GAAAA,EAAA,IACA3yE,EAAAgC,OAAA2wE,EAAA,GAAAA,EAAA,IACA3yE,EAAAgC,OAAA2wE,EAAA,GAAAA,EAAA,IACA3yE,EAAAiC,QAOA8vE,EAAAn/F,UAAAigG,WAAA,SAAAC,GACA,QAAA/lF,KAAApb,KAAA4gG,iBAEA,IADA,IAAAQ,EAAAphG,KAAA4gG,iBAAAxlF,GACApqB,EAAA,EAAAC,EAAAkwG,EAAAjwG,OAA0CF,EAAAC,IAAQD,EAClD,GAAAmwG,EAAAnwG,KAAAowG,EACA,SAIA,UAMAhB,EAAAn/F,UAAA62F,OAAA,WACA,QAAAj1D,KAAA7iC,KAAA4gG,iBAAA,CACA,IAAAO,EAAAnhG,KAAA4gG,iBAAA/9D,GACA,QAAAw+D,KAAAF,EACAA,EAAAE,GAAAvJ,WAgBAsI,EAAAn/F,UAAAupE,2BAAA,SACA94E,EACAoC,EACAC,EACAu2E,EACAguB,EACAplG,EACAouG,GAIA,IAkBAC,EAlBAC,EAAA,GADAl3B,EAAAv3E,KAAAkhB,MAAAq2D,IACA,EACA1jE,EAAoBhT,OAAAyzE,GAAA,EAAAzzE,CAAgBoM,KAAA8gG,uBACpCx2B,EAAA,GAAAA,EAAA,GACA,EAAAx2E,GAAA,EAAAA,GACAC,GACArC,EAAA,IAAAA,EAAA,IACA28B,EAAAruB,KAAA6gG,qBAEAxyE,EAAAjnB,OAAAG,QAAAi6F,GAAAnzE,EAAAjnB,OAAAI,SAAAg6F,GACAnzE,EAAAjnB,OAAAG,MAAAi6F,EACAnzE,EAAAjnB,OAAAI,OAAAg6F,GAEAnzE,EAAAu9D,UAAA,IAAA4V,UAOAxmG,IAAAgF,KAAA2gG,gBACAY,EAAkB3tG,OAAAoT,GAAA,EAAApT,GACZA,OAAAoT,GAAA,EAAApT,CAAgB2tG,EAAA7vG,GAChBkC,OAAAoT,GAAA,EAAApT,CAAM2tG,EAAAztG,GAAAkM,KAAA2gG,cAAAr2B,GAAAi3B,IAGZ,IACAE,EAOA/P,EARAgQ,EA4NO,SAAA91E,GACP,QAAA5wB,IAAA2mG,GAAA/1E,GACA,OAAA+1E,GAAA/1E,GAKA,IAFA,IAAAg2E,EAAA,EAAAh2E,EAAA,EACAluB,EAAA,IAAA3F,MAAA6pG,GACA5wG,EAAA,EAAiBA,EAAA4wG,EAAe5wG,IAChC0M,EAAA1M,GAAA,IAAA+G,MAAA6pG,GAGA,IAAAtwG,EAAAs6B,EACAr6B,EAAA,EACAovB,EAAA,EAEA,KAAArvB,GAAAC,GACAswG,GAAAnkG,EAAAkuB,EAAAt6B,EAAAs6B,EAAAr6B,GACAswG,GAAAnkG,EAAAkuB,EAAAr6B,EAAAq6B,EAAAt6B,GACAuwG,GAAAnkG,EAAAkuB,EAAAr6B,EAAAq6B,EAAAt6B,GACAuwG,GAAAnkG,EAAAkuB,EAAAt6B,EAAAs6B,EAAAr6B,GACAswG,GAAAnkG,EAAAkuB,EAAAt6B,EAAAs6B,EAAAr6B,GACAswG,GAAAnkG,EAAAkuB,EAAAr6B,EAAAq6B,EAAAt6B,GACAuwG,GAAAnkG,EAAAkuB,EAAAr6B,EAAAq6B,EAAAt6B,GACAuwG,GAAAnkG,EAAAkuB,EAAAt6B,EAAAs6B,EAAAr6B,GAIA,IADAovB,GAAA,MADApvB,GAEAD,GAAA,MAEAqvB,GAAA,KADArvB,GAAA,IAMA,OADAqwG,GAAA/1E,GAAAluB,EACAA,EA9PAokG,CAAAx3B,GAcA,SAAAiuB,EAAAt7E,GAEA,IADA,IAAAoxE,EAAAhgE,EAAAigE,aAAA,IAAAkT,KAAAzjG,KACA/M,EAAA,EAAqBA,EAAAwwG,EAAiBxwG,IACtC,QAAA4G,EAAA,EAAuBA,EAAA4pG,EAAiB5pG,IACxC,GAAA8pG,EAAA1wG,GAAA4G,IACAy2F,EAAA,GAAAz2F,EAAA4pG,EAAAxwG,GAAA,MACA,IAAAisC,OAAA,EAKA,QAJAwkE,GAAA/P,GAA0DI,GAAUn9E,OAAA+8E,GAAwBI,GAAUz7D,OACtG,IAAAorE,EAAA1lG,QAAAkhB,MACAggB,EAAA/pC,EAAA+pB,IAEAggB,QAGA5O,EAAAu9D,UAAA,IAAA4V,MA1BAxhG,KAAAsgG,iBACAmB,EAAAzhG,KAAAsgG,eAAAzjE,MAAAtsB,IAAA,SAAAiiB,GACA,OAAAA,EAAArhC,SAkCA,IAGAH,EAAA4G,EAAAupG,EAAA7G,EAAAr9D,EAHAm0D,EAAAx9F,OAAA0H,KAAA0E,KAAA4gG,kBAAArwF,IAAAC,QAIA,IAHA4gF,EAAA3yF,KAAYyZ,GAAA,GAGZlnB,EAAAogG,EAAAlgG,OAAA,EAA2BF,GAAA,IAAQA,EAAA,CACnC,IAAA+wG,EAAA3Q,EAAApgG,GAAA2d,WAEA,IADAwyF,EAAAnhG,KAAA4gG,iBAAAmB,GACAnqG,EAAeq8F,GAAK/iG,OAAA,EAAY0G,GAAA,IAAQA,EAGxC,QAAAoD,KADAs/F,EAAA6G,EADAzP,EAAqBuC,GAAKr8F,KAG1B,IAAA0pG,GACA5P,GAA6BI,GAAUn9E,OAAA+8E,GAAwBI,GAAUz7D,MAUzE,GAFA4G,EAAAq9D,EAAAC,mBAAAlsE,EAAAznB,EAAA7S,EACAukG,EAAAC,EAAAgJ,GAEA,OAAAtkE,MAXyE,CACzE,IAAA8jE,EAAAO,EAAAS,GACAhB,EAGAA,EAAAllG,KAAAy+F,EAAA1zF,EAAAvV,MAAA,IAFAiwG,EAAAS,GAAA,CAAAzH,EAAA1zF,EAAAvV,MAAA,OAqBA+uG,EAAAn/F,UAAAggG,cAAA,SAAAr6F,GACA,IAAA+tF,EAAA30F,KAAAwgG,WACA3uG,EAAA8iG,EAAA,GACA7iG,EAAA6iG,EAAA,GACA5iG,EAAA4iG,EAAA,GACA3iG,EAAA2iG,EAAA,GACAqM,EAAA,CAAAnvG,EAAAC,EAAAD,EAAAG,EAAAD,EAAAC,EAAAD,EAAAD,GAGA,OAFI8B,OAAA0wF,GAAA,EAAA1wF,CACJotG,EAAA,MAAAp6F,EAAAo6F,GACAA,GAMAZ,EAAAn/F,UAAAwwF,UAAA,SAAAr2E,EAAAs2E,GACA,IAAAqQ,OAAA/mG,IAAAogB,IAAAzM,WAAA,IACAwyF,EAAAnhG,KAAA4gG,iBAAAmB,QACA/mG,IAAAmmG,IACAA,EAAA,GACAnhG,KAAA4gG,iBAAAmB,GAAAZ,GAEA,IAAA7G,EAAA6G,EAAAzP,QACA12F,IAAAs/F,IAEAA,EAAA,IAAA0H,EADAhE,GAAAtM,IACA1xF,KAAAugG,WAAAvgG,KAAAwgG,WACAxgG,KAAA0gG,YAAA1gG,KAAA2mC,YAAA3mC,KAAAygG,UAAAzgG,KAAAsgG,gBACAa,EAAAzP,GAAA4I,GAEA,OAAAA,GAMA8F,EAAAn/F,UAAAghG,WAAA,WACA,OAAAjiG,KAAA4gG,kBAMAR,EAAAn/F,UAAA3Q,QAAA,WACA,OAAWsD,OAAA0C,GAAA,EAAA1C,CAAOoM,KAAA4gG,mBAalBR,EAAAn/F,UAAAq5F,OAAA,SACAjsE,EACAznB,EACA07E,EACAgW,EACAtC,EACAkM,EACAC,GAIA,IAAA/Q,EAAAx9F,OAAA0H,KAAA0E,KAAA4gG,kBAAArwF,IAAAC,QACA4gF,EAAA3yF,KAAYyZ,GAAA,GAIZmW,EAAA0B,OACA/vB,KAAAswB,KAAAjC,EAAAznB,GAEA,IACA5V,EAAAC,EAAA2G,EAAA0Z,EAAA6vF,EAAA7G,EADA8H,EAAAF,GAA0DjO,GAE1D,IAAAjjG,EAAA,EAAAC,EAAAmgG,EAAAlgG,OAA+BF,EAAAC,IAAQD,EAAA,CACvC,IAAA+wG,EAAA3Q,EAAApgG,GAAA2d,WAEA,IADAwyF,EAAAnhG,KAAA4gG,iBAAAmB,GACAnqG,EAAA,EAAA0Z,EAAA8wF,EAAAlxG,OAA0C0G,EAAA0Z,IAAQ1Z,EAAA,CAClD,IAAA85F,EAAA0Q,EAAAxqG,GAEA,GADA0iG,EAAA6G,EAAAzP,QACA12F,IAAAs/F,EACA,IAAA6H,GACAzQ,GAA6BI,GAAUn9E,OAAA+8E,GAAwBI,GAAUz7D,KAQzEikE,SAAAjsE,EAAAznB,EAAA07E,EAAAgW,EAAAtC,OARyE,CACzE,IAAA+K,EAAAoB,EAAAJ,GACAhB,EAGAA,EAAAllG,KAAAy+F,EAAA1zF,EAAAvV,MAAA,IAFA8wG,EAAAJ,GAAA,CAAAzH,EAAA1zF,EAAAvV,MAAA,MAWAg9B,EAAAkC,WAGA6vE,EA7WqB,CA8WnBvO,IAQF8P,GAAA,CACAU,EAAA,QAWA,SAAAR,GAAA3pF,EAAA5mB,EAAAC,GACA,IAAAP,EACA46B,EAAA74B,KAAAqxB,MAAAlM,EAAAhnB,OAAA,GACA,GAAAI,GAAAs6B,EACA,IAAA56B,EAAA46B,EAAoB56B,EAAAM,EAAON,IAC3BknB,EAAAlnB,GAAAO,IAAA,OAEG,GAAAD,EAAAs6B,EACH,IAAA56B,EAAAM,EAAA,EAAmBN,EAAA46B,EAAY56B,IAC/BknB,EAAAlnB,GAAAO,IAAA,EAwEe,IAAA+wG,GAAA,GCvefC,GAAA,GASAC,GAAA,CACA5pF,MAoOA,SAAA6pF,EAAAvmF,EAAAyZ,EAAA1Y,GACA,IAAA6kE,EAAAnsD,EAAAwM,WACA,GAAA2/C,EAAA,CACA,GAAAA,EAAA4gB,iBAAsCtmB,GAAU9vE,OAChD,OAEA,IAAAq2F,EAAAF,EAAAhR,UAAA97D,EAAAxa,YAA+D22E,GAAUn9E,OACzEguF,EAAA9gB,cAAAC,EAAA2gB,EAAA9Q,cAAA,IACAgR,EAAAphB,UAAArlE,EAAAe,GAEA,IAAAglE,EAAAtsD,EAAAg3B,UACA,GAAAs1B,EAAA,CACA,IAAA2gB,EAAAH,EAAAhR,UAAA97D,EAAAxa,YAA8D22E,GAAUz7D,MACxEusE,EAAA5gB,aAAAC,EAAAwgB,EAAA9Q,eAAA7P,IACA8gB,EAAAjhB,SAAAzlE,EAAAe,KAjPAsF,WAgKA,SAAAkgF,EAAAvmF,EAAAyZ,EAAA1Y,GACA,IAAAuT,EAAAmF,EAAAwvD,YACA,GAAA30D,EAAA,CACA,IAAAqyE,EAAAJ,EAAAhR,UAAA97D,EAAAxa,YAAoE22E,GAAU5yF,aAC9E2jG,EAAAjhB,mBAAA,KAAApxD,GACAqyE,EAAA9hB,eAAA7kE,EAAAe,GAEA,IAAAglE,EAAAtsD,EAAAg3B,UACA,GAAAs1B,EAAA,CACA,IAAA2gB,EAAAH,EAAAhR,UAAA97D,EAAAxa,YAA8D22E,GAAUz7D,MACxEusE,EAAA5gB,aAAAC,EAAAwgB,EAAA9Q,cAAA,IACAiR,EAAAjhB,SAAAzlE,EAAAe,KA1KAvF,QAoRA,SAAA+qF,EAAAvmF,EAAAyZ,EAAA1Y,GACA,IAAAskB,EAAA5L,EAAAuvD,UACA10D,EAAAmF,EAAAwvD,YACA,GAAA5jD,GAAA/Q,EAAA,CACA,IAAAsyE,EAAAL,EAAAhR,UAAA97D,EAAAxa,YAAiE22E,GAAU1yF,SAC3E0jG,EAAAlhB,mBAAArgD,EAAA/Q,GACAsyE,EAAArhB,YAAAvlE,EAAAe,GAEA,IAAAglE,EAAAtsD,EAAAg3B,UACA,GAAAs1B,EAAA,CACA,IAAA2gB,EAAAH,EAAAhR,UAAA97D,EAAAxa,YAA8D22E,GAAUz7D,MACxEusE,EAAA5gB,aAAAC,EAAAwgB,EAAA9Q,cAAA,IACAiR,EAAAjhB,SAAAzlE,EAAAe,KA/RAuG,WA0PA,SAAAi/E,EAAAvmF,EAAAyZ,EAAA1Y,GACA,IAAA6kE,EAAAnsD,EAAAwM,WACA,GAAA2/C,EAAA,CACA,GAAAA,EAAA4gB,iBAAsCtmB,GAAU9vE,OAChD,OAEA,IAAAq2F,EAAAF,EAAAhR,UAAA97D,EAAAxa,YAA+D22E,GAAUn9E,OACzEguF,EAAA9gB,cAAAC,EAAA2gB,EAAA9Q,cAAA,IACAgR,EAAAxhB,eAAAjlE,EAAAe,GAEA,IAAAglE,EAAAtsD,EAAAg3B,UACA,GAAAs1B,EAAA,CACA,IAAA2gB,EAAAH,EAAAhR,UAAA97D,EAAAxa,YAA8D22E,GAAUz7D,MACxEusE,EAAA5gB,aAAAC,EAAAwgB,EAAA9Q,eAAA7P,IACA8gB,EAAAjhB,SAAAzlE,EAAAe,KAvQA4c,gBAmLA,SAAA4oE,EAAAvmF,EAAAyZ,EAAA1Y,GACA,IAAAuT,EAAAmF,EAAAwvD,YACA,GAAA30D,EAAA,CACA,IAAAqyE,EAAAJ,EAAAhR,UAAA97D,EAAAxa,YAAoE22E,GAAU5yF,aAC9E2jG,EAAAjhB,mBAAA,KAAApxD,GACAqyE,EAAA5hB,oBAAA/kE,EAAAe,GAEA,IAAAglE,EAAAtsD,EAAAg3B,UACA,GAAAs1B,EAAA,CACA,IAAA2gB,EAAAH,EAAAhR,UAAA97D,EAAAxa,YAA8D22E,GAAUz7D,MACxEusE,EAAA5gB,aAAAC,EAAAwgB,EAAA9Q,cAAA,IACAiR,EAAAjhB,SAAAzlE,EAAAe,KA7LAsyB,aAwMA,SAAAkzD,EAAAvmF,EAAAyZ,EAAA1Y,GACA,IAAAskB,EAAA5L,EAAAuvD,UACA10D,EAAAmF,EAAAwvD,YACA,GAAA30D,GAAA+Q,EAAA,CACA,IAAAuhE,EAAAL,EAAAhR,UAAA97D,EAAAxa,YAAiE22E,GAAU1yF,SAC3E0jG,EAAAlhB,mBAAArgD,EAAA/Q,GACAsyE,EAAAzhB,iBAAAnlE,EAAAe,GAEA,IAAAglE,EAAAtsD,EAAAg3B,UACA,GAAAs1B,EAAA,CACA,IAAA2gB,EAAAH,EAAAhR,UAAA97D,EAAAxa,YAA8D22E,GAAUz7D,MACxEusE,EAAA5gB,aAAAC,EAAAwgB,EAAA9Q,cAAA,IACAiR,EAAAjhB,SAAAzlE,EAAAe,KAnNAyZ,mBA0IA,SAAA+rE,EAAAvmF,EAAAyZ,EAAA1Y,GACA,IACAjsB,EAAAC,EADAgmC,EAAA/a,EAAAkb,qBAEA,IAAApmC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAAqCF,EAAAC,IAAQD,EAAA,CAC7C,IAAA+xG,EACAP,GAAAvrE,EAAAjmC,GAAAmmB,WACA4rF,EAAAN,EAAAxrE,EAAAjmC,GAAA2kC,EAAA1Y,KA/IAghF,OAyCA,SAAAwE,EAAAvmF,EAAAyZ,EAAA1Y,GACA,IAAAskB,EAAA5L,EAAAuvD,UACA10D,EAAAmF,EAAAwvD,YACA,GAAA5jD,GAAA/Q,EAAA,CACA,IAAAwyE,EAAAP,EAAAhR,UAAA97D,EAAAxa,YAAgE22E,GAAUryF,QAC1EujG,EAAAphB,mBAAArgD,EAAA/Q,GACAwyE,EAAAtiB,WAAAxkE,EAAAe,GAEA,IAAAglE,EAAAtsD,EAAAg3B,UACA,GAAAs1B,EAAA,CACA,IAAA2gB,EAAAH,EAAAhR,UAAA97D,EAAAxa,YAA8D22E,GAAUz7D,MACxEusE,EAAA5gB,aAAAC,EAAAwgB,EAAA9Q,cAAA,IACAiR,EAAAjhB,SAAAzlE,EAAAe,MA5CO,SAAAgmF,GAAAC,EAAAC,GACP,OAAA5xE,SAAkB39B,OAAAk2C,EAAA,EAAAl2C,CAAMsvG,GAAA,IAAA3xE,SAA2B39B,OAAAk2C,EAAA,EAAAl2C,CAAMuvG,GAAA,IASlD,SAAAC,GAAAtvG,EAAAi6B,GACP,IAAA/Z,EAAAqvF,GAAAvvG,EAAAi6B,GACA,OAAA/Z,IASO,SAAAqvF,GAAAvvG,EAAAi6B,GACP,OAAAw0E,GAAAzuG,EAAAi6B,EAqCO,SAAAu1E,GAAAb,EAAAxlF,EAAA0Y,EAAArnB,EAAAhU,EAAA+vF,GACP,IAAA7gD,GAAA,EACAs4C,EAAAnsD,EAAAwM,WACA,GAAA2/C,EAAA,CACA,IAAAsL,EAAAtL,EAAA4gB,gBACAtV,GAAsBhR,GAAU9vE,QAAA8gF,GAAyBhR,GAAUrjF,MACnE+oF,EAAAyhB,oBAAAjpG,EAAA+vF,IAEA+C,GAAwBhR,GAAUhwE,MAClC01E,EAAAzkD,OAEA+vD,EAAAtL,EAAA4gB,gBACA5gB,EAAA0hB,kBAAAlpG,EAAA+vF,GACA7gD,GAAA,GAKA,OAUA,SAAAi5D,EAAAxlF,EAAA0Y,EAAArnB,GACA,IAAA4N,EAAAyZ,EAAAyvD,qBAAAzvD,CAAA1Y,GACA,IAAAf,EACA,OAEA,IAAAtN,EAAAsN,EAAA7N,sBAAAC,GAEA,GADAqnB,EAAA61C,eAgBA,SAAAi4B,EAAAhB,EAAAvmF,EAAAyZ,EAAA1Y,GACA,GAAAf,EAAA/E,WAA4BC,GAAA,EAAY5X,oBAAA,CAExC,IADA,IAAAy3B,EAAgF,EAAAC,gBAChFlmC,EAAA,EAAAC,EAAAgmC,EAAA/lC,OAA2CF,EAAAC,IAAQD,EACnDyyG,EAAAhB,EAAAxrE,EAAAjmC,GAAA2kC,EAAA1Y,GAEA,OAEA,IAAAq9E,EAAAmI,EAAAhR,UAAA97D,EAAAxa,YAAwD22E,GAAUC,SAClEuI,EAAA/Z,WAA2E,EAAAtjE,EAAA0Y,EAAA61C,eAvB3Ei4B,CAAAhB,EAAA7zF,EAAA+mB,EAAA1Y,OACG,CACH,IAAA8lF,EAAAP,GAAA5zF,EAAAuI,WACA4rF,EAAAN,EAAA7zF,EAAA+mB,EAAA1Y,IAvBAymF,CAAAjB,EAAAxlF,EAAA0Y,EAAArnB,GAEAk7B,EC9FA,IAAIm6D,GAAyB,SAAAxX,GAC7B,SAAAyX,EAAAC,GAEA1X,EAAA94F,KAAA2M,KAAA6jG,GAMA7jG,KAAAsgG,eAAAuD,EAAAC,eAAuDC,KAAK,OAAA/oG,GAAA,KAM5DgF,KAAAgkG,QAAA,EAMAhkG,KAAAikG,mBAAA,EAMAjkG,KAAAkkG,oBAAA3tF,IAMAvW,KAAAgwF,gBAA2Bp8F,OAAAoT,GAAA,EAAApT,GAM3BoM,KAAAmkG,qBAAA,KAMAnkG,KAAAokG,aAAA,KAMApkG,KAAAovF,oBAAA,EAKApvF,KAAAquB,QAAmBz6B,OAAA0tC,GAAA,EAAA1tC,GAEfA,OAAAosE,EAAA,EAAApsE,CAAO6pF,GAAYl9C,EAAA,EAAS/nC,MAAAwH,KAAAqkG,oBAAArkG,MA6UhC,OAzUAmsF,IAAAyX,EAAA5gG,UAAAmpF,GACAyX,EAAA3iG,UAAArN,OAAAqP,OAAAkpF,KAAAlrF,WACA2iG,EAAA3iG,UAAAiC,YAAA0gG,EAKAA,EAAA3iG,UAAA4R,gBAAA,WACIjf,OAAAosE,EAAA,EAAApsE,CAAS6pF,GAAYl9C,EAAA,EAAS/nC,MAAAwH,KAAAqkG,oBAAArkG,MAClCmsF,EAAAlrF,UAAA4R,gBAAAxf,KAAA2M,OAQA4jG,EAAA3iG,UAAAwH,QAAA,SAAA4lB,EAAAhT,EAAAJ,GACA,IAAAlqB,EAAAsqB,EAAAtqB,OACAg9B,EAAA1S,EAAA0S,WACAw/C,EAAAtyD,EAAAC,QACAG,EAAAkyD,mBAAA,GACAF,EAAAhyD,EAAAgyD,UACApoE,EAAAooE,EAAApoE,WACAlR,EAAAs5E,EAAAt5E,SACAm1B,EAAAjkB,EAAA7D,YACAkjG,EAA2EtkG,KAAA2sF,WAAA/xE,YAE3EhU,EAAA5G,KAAA8G,aAAAuU,EAAA,GAGAkpF,EAAAtpF,EAAAlqB,OACAi9F,OAAAhzF,IAAAupG,EACAvW,GACAhuF,KAAAswB,KAAAjC,EAAAhT,EAAiF,GAEjF,IAAAonF,EAAAziG,KAAAokG,aACA,GAAA3B,MAAAnyG,UAAA,CACA0P,KAAAsgG,gBACAtgG,KAAAsgG,eAAApkG,QAEA,IAGAsoG,EAHArwE,EAAqEn0B,KAAA2sF,WACrE8X,EAAA,EACAC,EAAA,EAEAC,EAAA,IAAA1pF,EAAA+Y,QACA4wE,EAAAzwE,EAAArhB,YAAiDy5D,GAAA,EAAet3D,QAChE,GAAA0vF,GAAAC,EAAA,CACA,IAAAC,EAAAx2E,EAAAjnB,OAAAG,MACAu9F,EAAAz2E,EAAAjnB,OAAAI,OACA,GAAAzT,EAAA,CACA,IAAAgxG,EAAAhyG,KAAAkhB,MAAAlhB,KAAAyjB,KAAAquF,IAAAC,MACAL,GAAAM,EAAAF,GAAA,EACAH,GAAAK,EAAAD,GAAA,EACAD,EAAAC,EAAAC,EAGA/kG,KAAAquB,QAAAjnB,OAAAG,MAAAs9F,EACA7kG,KAAAquB,QAAAjnB,OAAAI,OAAAs9F,EACAN,EAAAxkG,KAAAquB,aAEAm2E,EAAAn2E,EAGA,IAAAsxD,EAAA6kB,EAAA5kB,YACA+kB,IAIAH,EAAA5kB,YAAA3kE,EAAA+Y,SAGAwwE,GAAAn2E,GACAm2E,EAAAh8F,UAAAi8F,EAAAC,GAGA,IAAAp4B,EAAAjxD,EAAAixD,UACA0pB,IAAA1pB,EAAoCtnB,GAAA,EAAQ94C,YAAAogE,EAAyBtnB,GAAA,EAAQ74C,cAC7E5E,EAAA8T,EAAArnB,KAAA,GAAA+5B,EACAvmB,EAAA6T,EAAArnB,KAAA,GAAA+5B,EAIA,GAHMqxD,GAAcolB,GAAAzwG,EACpBwT,EAAA,EAAAC,EAAA,GACAi7F,EAAAnI,OAAAkK,EAAA59F,EAAA7S,EAAAw5E,EAAAyoB,GACAsO,EAAAv6D,YAAA9kC,EAAA/D,aACWtN,OAAAoT,GAAA,EAAApT,CAAcs1B,EAAAn4B,GAAA,CAKzB,IAJA,IAGAsuF,EAHA9pF,EAAAxE,EAAA,GACAo4B,EAAyBv1B,OAAAoT,GAAA,EAAApT,CAAQs1B,GACjC87E,EAAA,EAEAzvG,EAAA2zB,EAAA,IAEAm2D,EAAAl2D,IADA67E,EAEAp+F,EAAA5G,KAAA8G,aAAAuU,EAAAgkE,GACAojB,EAAAnI,OAAAkK,EAAA59F,EAAA7S,EAAAw5E,EAAAyoB,GACAzgG,GAAA4zB,EAIA,IAFA67E,EAAA,EACAzvG,EAAAxE,EAAA,GACAwE,EAAA2zB,EAAA,IAEAm2D,EAAAl2D,IADA67E,EAEAp+F,EAAA5G,KAAA8G,aAAAuU,EAAAgkE,GACAojB,EAAAnI,OAAAkK,EAAA59F,EAAA7S,EAAAw5E,EAAAyoB,GACAzgG,GAAA4zB,EASA,GANMi2D,GAAcolB,EAAAzwG,EACpBwT,EAAA,EAAAC,EAAA,GAEAo9F,GACA5kG,KAAAysE,oBAAA+3B,EAAAnpF,EAAAzU,GAEA49F,GAAAn2E,EAAA,CACA,GAAAs2E,EAAA,CACA,IAAAM,EAAA52E,EAAAuxD,YACAvxD,EAAAuxD,YAAA3kE,EAAA+Y,QACA3F,EAAAW,UAAAw1E,EAAAp9F,QAAAq9F,GAAAC,GACAr2E,EAAAuxD,YAAAqlB,OAEA52E,EAAAW,UAAAw1E,EAAAp9F,QAAAq9F,GAAAC,GAEAF,EAAAh8F,WAAAi8F,GAAAC,GAGAC,IACAH,EAAA5kB,YAAAD,GAIAqO,GACA3/D,EAAAkC,WAOAqzE,EAAA3iG,UAAA6qF,aAAA,SAAAzwE,EAAAJ,EAAAoT,GACA,IAAAznB,EAAA5G,KAAA8G,aAAAuU,EAAA,GACArb,KAAA6sF,WAAAx+D,EAAAhT,EAAAzU,GACA5G,KAAAyI,QAAA4lB,EAAAhT,EAAAJ,GACAjb,KAAA4sF,YAAAv+D,EAAAhT,EAAAJ,EAAArU,IAMAg9F,EAAA3iG,UAAAupE,2BAAA,SAAA94E,EAAA2pB,EAAAivD,EAAAp3E,EAAAm3F,GACA,GAAArqF,KAAAokG,aAEK,CACL,IAAAtwG,EAAAunB,EAAAgyD,UAAAv5E,WACAC,EAAAsnB,EAAAgyD,UAAAt5E,SACAogC,EAAqEn0B,KAAA2sF,WAErExvE,EAAA,GAaA,OAZAnd,KAAAokG,aAAA55B,2BAAA94E,EAAAoC,EAAAC,EAAAu2E,EAAA,GAKA,SAAArtD,GACA,IAAAnhB,EAAoBlI,OAAAk2C,EAAA,EAAAl2C,CAAMqpB,GAC1B,KAAAnhB,KAAAqhB,GAEA,OADAA,EAAArhB,IAAA,EACA5I,EAAAG,KAAAg3F,EAAAptE,EAAAkX,IAES,QAQTyvE,EAAA3iG,UAAAojG,oBAAA,SAAA3xF,GACA,IAAAyhB,EAAAn0B,KAAA2sF,WACAx4D,EAAAG,cAAAt0B,KAAAokG,cACAjwE,EAAA3kB,WASAo0F,EAAA3iG,UAAAikG,wBAAA,SAAAxyF,GACA1S,KAAAktF,2BAMA0W,EAAA3iG,UAAA4qF,aAAA,SAAAxwE,EAAAJ,GACA,IAAA4oF,EAAyE7jG,KAAA2sF,WACzE2X,EAA2ET,EAAAjpF,YAE3EuqF,EAAA9pF,EAAAixD,UAAyCtnB,GAAA,EAAQ94C,WACjDk5F,EAAA/pF,EAAAixD,UAA2CtnB,GAAA,EAAQ74C,aACnDk5F,EAAAxB,EAAAyB,0BACAC,EAAA1B,EAAA2B,4BAEA,IAAAxlG,KAAAgkG,SAAAqB,GAAAF,IACAI,GAAAH,EACA,SAGA,IAAAK,EAAApqF,EAAAtqB,OACAs8E,EAAAhyD,EAAAgyD,UACApoE,EAAAooE,EAAApoE,WACAnR,EAAAu5E,EAAAv5E,WACAi6B,EAAA1S,EAAA0S,WACA23E,EAAA7B,EAAAr1F,cACAm3F,EAAA9B,EAAA+B,kBACAC,EAAAhC,EAAAiC,sBAEA9qG,IAAA6qG,IACAA,EAA+B5C,IAG/B,IAAAlyG,EAAiB6C,OAAAoT,GAAA,EAAApT,CAAM6xG,EACvBE,EAAA7xG,GACAo1B,EAAAmkD,EAAApoE,WAAA7D,YAEA,GAAAkjG,EAAAv6D,YAAAsjC,EAAApoE,WAAA/D,aACStN,OAAAoT,GAAA,EAAApT,CAAcs1B,EAAA7N,EAAAtqB,QAAA,CAMvB,IAAAo4B,EAAuBv1B,OAAAoT,GAAA,EAAApT,CAAQs1B,GAC/BiF,EAAAp7B,KAAAE,IAA4BW,OAAAoT,GAAA,EAAApT,CAAQ7C,GAAA,EAAAo4B,GACpCp4B,EAAA,GAAAm4B,EAAA,GAAAiF,EACAp9B,EAAA,GAAAm4B,EAAA,GAAAiF,EAGA,IAAAnuB,KAAAgkG,QACAhkG,KAAAkkG,qBAAApwG,GACAkM,KAAAikG,mBAAAyB,GACA1lG,KAAAmkG,sBAAA0B,GACQjyG,OAAAoT,GAAA,EAAApT,CAAcoM,KAAAgwF,gBAAAj/F,GAEtB,OADAiP,KAAAovF,oBAAA,GACA,EAGApvF,KAAAokG,aAAA,KAEApkG,KAAAgkG,QAAA,EAEA,IAAAvB,EAAA,IAA0BH,GACpBe,GAAkBvvG,EAAAi6B,GAAAh9B,EAAA+C,EACxBi6B,EAAAu2E,EAAAyB,cAAA/lG,KAAAsgG,eAAAuD,EAAA+B,mBACAtB,EAAA0B,aAAAj1G,EAAA+C,EAAAmR,GAKA,IAAAuW,EAAA,SAAAyB,GACA,IAAA8Y,EACAkwE,EAAAhpF,EAAA4Y,oBAAAguE,EAAAhuE,mBAIA,GAHAowE,IACAlwE,EAAAkwE,EAAAhpF,EAAAnpB,IAEAiiC,EAAA,CACA,IAAAmwE,EAAAlmG,KAAAsjG,cACArmF,EAAAnpB,EAAAi6B,EAAAgI,EAAA0sE,GACAziG,KAAAgkG,OAAAhkG,KAAAgkG,QAAAkC,IAEKvhE,KAAA3kC,MACL,GAAA6lG,EAAA,CAEA,IAAA1oF,EAAA,GACAmnF,EAAA6B,uBAAAp1G,EAIA,SAAAksB,GACAE,EAAAthB,KAAAohB,KAEAE,EAAA1e,KAAAonG,GACA,QAAA70G,EAAA,EAAAC,EAAAksB,EAAAjsB,OAA2CF,EAAAC,IAAQD,EACnDwqB,EAAA2B,EAAAnsB,SAGAszG,EAAA6B,uBAAAp1G,EAAAyqB,GAWA,OATAinF,EAAA3K,SAEA93F,KAAAkkG,oBAAApwG,EACAkM,KAAAikG,kBAAAyB,EACA1lG,KAAAmkG,qBAAA0B,EACA7lG,KAAAgwF,gBAAAj/F,EACAiP,KAAAokG,aAAA3B,EAEAziG,KAAAovF,oBAAA,GACA,GAWAwU,EAAA3iG,UAAAqiG,cAAA,SAAArmF,EAAAnpB,EAAAi6B,EAAAgI,EAAA0sE,GACA,IAAA1sE,EACA,SAEA,IAAAyT,GAAA,EACA,GAAAzxC,MAAAkG,QAAA83B,GACA,QAAA/kC,EAAA,EAAAC,EAAA8kC,EAAA7kC,OAAyCF,EAAAC,IAAQD,EACjDw4C,EAAkB85D,GAClBb,EAAAxlF,EAAA8Y,EAAA/kC,GACUoyG,GAAyBtvG,EAAAi6B,GACnC/tB,KAAAklG,wBAAAllG,OAAAwpC,OAGAA,EAAgB85D,GAChBb,EAAAxlF,EAAA8Y,EACQqtE,GAAyBtvG,EAAAi6B,GACjC/tB,KAAAklG,wBAAAllG,MAEA,OAAAwpC,GAGAo6D,EAvY6B,CAwY3B3X,IAQF0X,GAAyB,iBAAAxvE,GACzB,OAAAA,EAAAhd,YAA6B0N,GAAA,EAAS/P,QAUtC6uF,GAAyB,gBAAAlU,EAAAt7D,GACzB,WAAawvE,GAA6E,IAI3E,IAAAyC,GAAA,GCraAC,GAAA,CACf1xF,MAAA,QACA2xF,OAAA,SACAxxF,OAAA,8BCaAyxF,GAAA,CACAt3E,MAAA,CAAY6iE,GAAU1yF,QAAU0yF,GAAUryF,OACtCqyF,GAAU5yF,YAAc4yF,GAAUn9E,MAAQm9E,GAAUz7D,MACxDmwE,OAAA,CAAa1U,GAAU1yF,QAAU0yF,GAAU5yF,cAO3CunG,GAAA,CACAx3E,MAAA,CAAY6iE,GAAUC,SACtByU,OAAA,CAAa1U,GAAUn9E,MAAQm9E,GAAUz7D,KAAOy7D,GAAUC,SAC1D2U,OAAYzS,IASR0S,GAA6B,SAAA/W,GACjC,SAAAgX,EAAAzyE,GAEAy7D,EAAAv8F,KAAA2M,KAAAm0B,GAAA,GAMAn0B,KAAAsgG,eAAAnsE,EAAA2vE,eAAiDC,KAAK,OAAA/oG,GAAA,KAMtDgF,KAAAgkG,QAAA,EAMAhkG,KAAA6mG,uBAMA7mG,KAAA8mG,cAAyBlzG,OAAAyzE,GAAA,EAAAzzE,GAEzB,IAAAmzG,EAAA5yE,EAAAq7D,gBAGAxvF,KAAAswF,WAAAyW,IAAqCV,GAAoBvxF,OAAA,IAEzDiyF,IAAuBV,GAAoBvxF,SAC3C9U,KAAAquB,QAAqBz6B,OAAA0tC,GAAA,EAAA1tC,IAIjBA,OAAAosE,EAAA,EAAApsE,CAAO6pF,GAAYl9C,EAAA,EAAS/nC,MAAAwH,KAAAqkG,oBAAArkG,MAuYhC,OAnYA4vF,IAAAgX,EAAA5jG,UAAA4sF,GACAgX,EAAA3lG,UAAArN,OAAAqP,OAAA2sF,KAAA3uF,WACA2lG,EAAA3lG,UAAAiC,YAAA0jG,EAKAA,EAAA3lG,UAAA4R,gBAAA,WACIjf,OAAAosE,EAAA,EAAApsE,CAAS6pF,GAAYl9C,EAAA,EAAS/nC,MAAAwH,KAAAqkG,oBAAArkG,MAClC4vF,EAAA3uF,UAAA4R,gBAAAxf,KAAA2M,OAMA4mG,EAAA3lG,UAAAmqC,QAAA,SAAAp7B,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,GACA,IAAAw7B,EAAAmvD,EAAA3uF,UAAAmqC,QAAA/3C,KAAA2M,KAAAgQ,EAAA1e,EAAAC,EAAAw8B,EAAA9oB,GAOA,OANAw7B,EAAA3lB,aAA4B4lB,GAAA,EAASp0B,SACrCtM,KAAAgnG,mBAAoF,EAAAj5E,EAAA9oB,GACpFjF,KAAAquB,SACAruB,KAAAinG,iBAAoF,EAAAl5E,EAAA9oB,IAGpFw7B,GAMAmmE,EAAA3lG,UAAAqwF,aAAA,SAAA7wD,GACA,IAAAovD,EAAqE7vF,KAAA2sF,WACrE,OAAiE,EAAAxqD,SAAA0tD,IAMjE+W,EAAA3lG,UAAA4qF,aAAA,SAAAxwE,EAAAJ,GACA,IACAisF,EADmElnG,KAAA2sF,WACnEn+E,cAKA,OAJAxO,KAAA6mG,wBAAAK,IACAlnG,KAAAkwF,cAAAh/F,OAAA,GAEA8O,KAAA6mG,uBAAAK,EACAtX,EAAA3uF,UAAA4qF,aAAAx4F,KAAA2M,KAAAqb,EAAAJ,IASA2rF,EAAA3lG,UAAA+lG,mBAAA,SAAAvmE,EAAA1S,EAAA9oB,GACA,IAAAkiG,EAAAnnG,KAEAm0B,EAAmEn0B,KAAA2sF,WACnEya,EAAAjzE,EAAA3lB,cACA64F,EAAyElzE,EAAA2xE,kBAAA,KAEzEwB,EAAA7mE,EAAA8mE,eAAApzE,GACA,GAAAmzE,EAAApB,OAAAoB,EAAArX,kBAAAmX,GACAE,EAAAE,qBAAAH,EADA,CAyEA,IApEA,IAAA5qG,EAAyE03B,EAAAvZ,YACzEyrB,EAAA5pC,EAAA4uC,cAEAv3C,EADA2I,EAAA6uC,yBAAArmC,GACA8hB,cAAA0Z,EAAArwB,UAAA,IACAo5C,EAAA/oB,EAAA1vC,OAEA02G,EAAA,SAAAtwG,EAAAuwG,GACA,IAAAC,EAAAlnE,EAAA2K,QAAA3K,EAAAmnE,SAAAzwG,IACA,GAAAwwG,EAAA7sF,YAAmC4lB,GAAA,EAASp0B,OAA5C,CAIA,IAAAu7F,EAAAF,EAAAv3F,UACA03F,EAAAzhE,EAAAxf,mBAAAghF,GACAE,EAAyBn0G,OAAAoT,GAAA,EAAApT,CAAe41D,EAAAs+C,GACxCE,EAA2Bp0G,OAAAoT,GAAA,EAAApT,CAAMk0G,EAAAC,GAAA,KACzBn0G,OAAAoT,GAAA,EAAApT,CAAMm0G,EAAA5zE,EAAAyxE,kBAAA9xG,EAAAqzG,EAAA/W,WACd6X,EAAAN,EAAA99D,gBACAq+D,GAAA,EACWt0G,OAAA21B,GAAA,EAAA31B,CAAoBqR,EAAAgjG,KAC/BC,GAAA,EACAP,EAAAQ,cAAAljG,IAEAqiG,EAAApB,OAAA,EACA,IAAAzD,EAAA,IAA4BH,GAAiB,EAAAyF,EAAAj0G,EAC7Ci6B,EAAAtxB,EAAAspG,cAAAoB,EAAA7G,eAAAnsE,EAAAyxE,mBACAt3F,EAA6B80F,GAAyBtvG,EAAAi6B,GAMtDvS,EAAA,SAAAyB,GACA,IAAA8Y,EACAkwE,EAAAhpF,EAAA4Y,oBAAA1B,EAAA0B,mBAIA,GAHAowE,IACAlwE,EAAAkwE,EAAAhpF,EAAAnpB,IAEAiiC,EAAA,CACA,IAAAmwE,EAAAlmG,KAAAsjG,cAAArmF,EAAA3O,EAAAynB,EAAA0sE,GACAziG,KAAAgkG,OAAAhkG,KAAAgkG,QAAAkC,EACAoB,EAAApB,MAAAoB,EAAApB,WAIA/oF,EAAAwqF,EAAA18E,cACAo8E,OAAAC,EAAAE,qBACArqF,EAAA1e,KAAA4oG,GAEA,QAAAr2G,EAAA,EAAAC,EAAAksB,EAAAjsB,OAA2CF,EAAAC,IAAQD,EAAA,CACnD,IAAAisB,EAAAE,EAAAnsB,GACAk3G,IACAD,EAAA5mG,YAA2CE,GAAA,EAAKoL,cAEhDs7F,EAAAjmG,eAAA8lG,GAEAG,EAAAlmG,UAAA4lG,EAAAvmG,cAEA6b,EAAAyY,cAAA9uB,UAAAqhG,EAAAhjG,IAEA+iG,IAA+Bp0G,OAAAoT,GAAA,EAAApT,CAAUo0G,EAAA/qF,EAAAyY,cAAAt0B,cACzCoa,EAAAnoB,KAAA8zG,EAAAlqF,GAGAwlF,EAAA3K,SACA6P,EAAAS,eAAAj0E,EAAAsM,EAAArwB,UAAAzB,WAAA8zF,KAGAtrG,EAAA,EAAAuwG,EAAAjnE,EAAAmnE,SAAA12G,OAA8CiG,EAAAuwG,IAAQvwG,EAAAswG,EAAAtwG,GACtDmwG,EAAArX,iBAAAmX,EACAE,EAAAE,oBAAAH,IAMAT,EAAA3lG,UAAAupE,2BAAA,SAAA94E,EAAA2pB,EAAAivD,EAAAp3E,EAAAm3F,GACA,IAAAv2F,EAAAunB,EAAAgyD,UAAAv5E,WACAC,EAAAsnB,EAAAgyD,UAAAt5E,SACAu2E,EAAAtvE,MAAAsvE,EAAA,EAAAA,EACA,IAMA09B,EAAAxqG,EACAxM,EAAAC,EAPAkjC,EAAAn0B,KAAA2sF,WAEAxvE,EAAA,GAEA+yE,EAAqFlwF,KAAA,cAIrF,IAAAhP,EAAA,EAAAC,EAAAi/F,EAAAh/F,OAA0CF,EAAAC,IAAQD,EAAA,CAClD,IAAAyvC,EAAAyvD,EAAAl/F,GAEA,GADAg3G,EAAuBp0G,OAAAoT,GAAA,EAAApT,CAAM6sC,EAAA1vC,OAAAu5E,EAAAx2E,EAAAk0G,GAClBp0G,OAAAoT,GAAA,EAAApT,CAAkBo0G,EAAAt2G,GAG7B,QAAAyF,EAAA,EAAAuwG,EAAAjnE,EAAAmnE,SAAA12G,OAAgDiG,EAAAuwG,IAAQvwG,EAAA,CACxD,IAAAwwG,EAAAlnE,EAAA2K,QAAA3K,EAAAmnE,SAAAzwG,IACA,GAAAwwG,EAAA7sF,YAAqC4lB,GAAA,EAASp0B,OAA9C,CAGA,IAAAm2F,EAAuDkF,EAAAU,eAAAl0E,EACvDsM,EAAArwB,UAAAzB,YACAnR,KAAAilG,EAAAj4B,2BAAA94E,EAAAoC,EAAAC,EAAAu2E,EAAA,GAKA,SAAArtD,GACA,IAAAnhB,EAAsBlI,OAAAk2C,EAAA,EAAAl2C,CAAMqpB,GAC5B,KAAAnhB,KAAAqhB,GAEA,OADAA,EAAArhB,IAAA,EACA5I,EAAAG,KAAAg3F,EAAAptE,EAAAkX,IAEW,QAGX,OAAA32B,GASAopG,EAAA3lG,UAAAqnG,oBAAA,SAAA7nE,EAAAplB,GACA,IAEAvZ,EAFA9B,KAAA2sF,WACyE/xE,YACzEywB,cACAj7B,EAAAqwB,EAAArwB,UACAm5C,EAAAznD,EAAAilB,cAAA3W,EAAA,IACAi9D,EAAAhyD,EAAAgyD,UACAt/C,EAAA1S,EAAA0S,WACAw6E,EAAAl7B,EAAAv5E,WAAAi6B,EACAy7B,EAAA1nD,EAAA+kB,mBAAAzW,EAAApQ,KAAAowF,WACAv8F,EAAAw5E,EAAAx5E,OACA+xB,EAAiBhyB,OAAAoT,GAAA,EAAApT,CAAU41D,GAC3Bx1D,EAAAqnB,EAAArnB,KACAqrF,EAAAtsF,KAAAkhB,MAAA8Z,EAAA/5B,EAAA,MACAsrF,EAAAvsF,KAAAkhB,MAAA8Z,EAAA/5B,EAAA,MACA,OAAWJ,OAAAyzE,GAAA,EAAAzzE,CAAgBoM,KAAA8mG,cAC3BznB,EAAAC,EACA/1B,EAAAg/C,EAAAh/C,EAAAg/C,EACAl7B,EAAAt5E,UACA6xB,EAAA,GAAA/xB,EAAA,IAAA01D,GACA11D,EAAA,GAAA+xB,EAAA,IAAA2jC,IAMAq9C,EAAA3lG,UAAAojG,oBAAA,SAAA3xF,GACA,IAAAyhB,EAAAn0B,KAAA2sF,WACAx4D,EAAAG,mBAAAt5B,IAAAgF,KAAA6mG,wBACA1yE,EAAA3kB,WASAo3F,EAAA3lG,UAAAikG,wBAAA,SAAAxyF,GACA1S,KAAAktF,2BAMA0Z,EAAA3lG,UAAA2rF,YAAA,SAAAv+D,EAAAhT,EAAAJ,GACA,IAAAkZ,EAAmEn0B,KAAA2sF,WACnEoa,EAAA5yE,EAAAq7D,gBACA,GAAAuX,GAAsBV,GAAoB1xF,MAAA,CAC1C,IAMA0qE,EAAAC,EANAgiB,EAAAntE,EAAA2vE,eAAA,GAAsD,KACtDrnG,EAA2E03B,EAAAvZ,YAC3EwnF,EAAAqE,GAAAM,GACAh5E,EAAA1S,EAAA0S,WACAh6B,EAAAsnB,EAAAgyD,UAAAt5E,SACAC,EAAAqnB,EAAArnB,KAEAD,GAGQqrF,GAAc/wD,GAAAt6B,EAFtBsrF,EAAAtsF,KAAAkhB,MAAA8Z,EAAA/5B,EAAA,MACAsrF,EAAAvsF,KAAAkhB,MAAA8Z,EAAA/5B,EAAA,OAGAstG,GACAthG,KAAAsgG,eAAApkG,QAQA,IANA,IAAAowE,EAAAjxD,EAAAixD,UACA0pB,IAAA1pB,EAAoCtnB,GAAA,EAAQ94C,YAAAogE,EAAyBtnB,GAAA,EAAQ74C,cAC7E6gF,EAAAhtF,KAAAkwF,cACApuF,EAAArF,EAAA6uC,yBAAAjwB,EAAAgyD,UAAApoE,YACAujG,EAAA,GACApX,EAAA,GACApgG,EAAAg8F,EAAA97F,OAAA,EAAoCF,GAAA,IAAQA,EAAA,CAC5C,IAAAyvC,EAAyEusD,EAAAh8F,GACzE,GAAAyvC,EAAA3lB,YAA+B4lB,GAAA,EAASl0B,MAMxC,IAHA,IAAA4D,EAAAqwB,EAAArwB,UACAq4F,EAAA3mG,EAAA+kB,mBAAAzW,EAAApQ,KAAAowF,WAAA,GAAA3vD,EAAA1vC,OAAA,GACA6V,OAAA5L,EACA7D,EAAA,EAAAuwG,EAAAjnE,EAAAmnE,SAAA12G,OAAkDiG,EAAAuwG,IAAQvwG,EAAA,CAC1D,IAAAwwG,EAAAlnE,EAAA2K,QAAA3K,EAAAmnE,SAAAzwG,IACA,GAAAwwG,EAAA7sF,YAAuC4lB,GAAA,EAASp0B,OAAhD,CAGA,IAAAm2F,EAAyDkF,EAAAU,eAAAl0E,EAAA/jB,EAAAzB,YACzD,GAAA8zF,KAAAvB,WAAAkB,GAAA,CAKAx7F,IACAA,EAAA5G,KAAA8G,aAAAuU,EAAAotF,IAEA,IAAA/a,EAAAia,EAAAv3F,UAAA,GACAs4F,EAAAjG,EAAAxB,cAAAr6F,GACAynB,EAAA0B,OACA1B,EAAAuxD,YAAA3kE,EAAA+Y,QAGA,QAAAp8B,EAAA,EAAA0Z,EAAAk3F,EAAAt3G,OAA4C0G,EAAA0Z,IAAQ1Z,EAAA,CACpD,IAAA04B,EAAAk4E,EAAA5wG,GACA81F,EAAA0D,EAAAx5F,KACAy2B,EAAA2B,YAEA3B,EAAA+B,OAAAs4E,EAAA,GAAAA,EAAA,IACAr6E,EAAAgC,OAAAq4E,EAAA,GAAAA,EAAA,IACAr6E,EAAAgC,OAAAq4E,EAAA,GAAAA,EAAA,IACAr6E,EAAAgC,OAAAq4E,EAAA,GAAAA,EAAA,IAEAr6E,EAAA+B,OAAAE,EAAA,GAAAA,EAAA,IACAjC,EAAAgC,OAAAC,EAAA,GAAAA,EAAA,IACAjC,EAAAgC,OAAAC,EAAA,GAAAA,EAAA,IACAjC,EAAAgC,OAAAC,EAAA,GAAAA,EAAA,IACAjC,EAAAiC,QAGAmyE,EAAAnI,OAAAjsE,EAAAznB,EAAA7S,EAAA,GAA6DiiG,EAAAoM,EAAAd,GAC7DjzE,EAAAkC,UACAi4E,EAAA3sG,KAAA6sG,GACAtX,EAAAv1F,KAAA6xF,MAGA4T,GJ6EO,SAAAA,EAAAjzE,EAAAt6B,EAAAiiG,GAGP,IAFA,IAAA5E,EAAAx9F,OAAA0H,KAAAgmG,GAAA/wF,IAAAC,QAAA/R,KAA0DyZ,GAAA,GAC1Dq1D,EAAA,GACAv9D,EAAA,EAAA24F,EAAAvX,EAAAlgG,OAAiC8e,EAAA24F,IAAQ34F,EAEzC,IADA,IAAA44F,EAAAtH,EAAAlQ,EAAAphF,GAAArB,YACA3d,EAAA,EAAAC,EAAA23G,EAAA13G,OAA2CF,EAAAC,GAAQ,CACnD,IAAAqpG,EAAAsO,EAAA53G,KACA4V,EAAAgiG,EAAA53G,KACAspG,SAAAjsE,EAAAznB,EAAA7S,EAAAw5E,EAAAyoB,IIpFQ6S,CAAevH,EAAAjzE,EAAAt6B,EAAAiiG,GAEvBjiG,GACQqrF,GAAc/wD,EAAAt6B,EACM,EAAiC,GAG7D67F,EAAA3uF,UAAA2rF,YAAAv5F,KAAA2M,KAAAquB,EAAAhT,EAAAJ,IAUA2rF,EAAA3lG,UAAAqiG,cAAA,SAAArmF,EAAA3O,EAAAynB,EAAA0sE,GACA,IAAA1sE,EACA,SAEA,IAAAyT,GAAA,EACA,GAAAzxC,MAAAkG,QAAA83B,GACA,QAAA/kC,EAAA,EAAAC,EAAA8kC,EAAA7kC,OAAyCF,EAAAC,IAAQD,EACjDw4C,EAAkB85D,GAClBb,EAAAxlF,EAAA8Y,EAAA/kC,GAAAsd,EACAtO,KAAAklG,wBAAAllG,OAAAwpC,OAGAA,EAAgB85D,GAChBb,EAAAxlF,EAAA8Y,EAAAznB,EACAtO,KAAAklG,wBAAAllG,MAEA,OAAAwpC,GASAo9D,EAAA3lG,UAAAgmG,iBAAA,SAAAxmE,EAAA1S,EAAA9oB,GACA,IAAAkvB,EAAmEn0B,KAAA2sF,WACnE2a,EAAA7mE,EAAA8mE,eAAApzE,GACAizE,EAAAjzE,EAAA3lB,cACA2yF,EAAAoF,GAAApyE,EAAAq7D,iBACA,GAAA2R,GAAAmG,EAAAwB,uBAAA1B,EAAA,CACAE,EAAAwB,qBAAA1B,EACA,IAAAh3F,EAAAqwB,EAAA8F,iBACAv2B,EAAAI,EAAA,GACA3T,EAA2E03B,EAAAvZ,YAC3E9Y,EAAArF,EAAA6uC,yBAAArmC,GACAnR,EAAAgO,EAAAilB,cAAA/W,GACAqe,EAAAoS,EAAAh5B,WAAA0sB,GACAngC,EAAAyI,EAAAivC,iBAAA17B,EAAA+d,EAAA9oB,GACAopB,EAAAjnB,OAAAG,MAAAvT,EAAA,GACAq6B,EAAAjnB,OAAAI,OAAAxT,EAAA,GAEA,IADA,IAAAw1D,EAAA1nD,EAAA+kB,mBAAAzW,EAAApQ,KAAAowF,WACAp/F,EAAA,EAAAC,EAAAwvC,EAAAmnE,SAAA12G,OAAgDF,EAAAC,IAAQD,EAAA,CACxD,IAAA22G,EAAAlnE,EAAA2K,QAAA3K,EAAAmnE,SAAA52G,IACA,GAAA22G,EAAA7sF,YAAqC4lB,GAAA,EAASp0B,OAA9C,CAGA,IAAAy8F,EAAAh7E,EAAAj6B,EACA8S,EAAwBhT,OAAAyzE,GAAA,EAAAzzE,CAAcoM,KAAA8mG,eAC9BlzG,OAAAyzE,GAAA,EAAAzzE,CAAcgT,EAAAmiG,MACdn1G,OAAAyzE,GAAA,EAAAzzE,CAAkBgT,GAAA4iD,EAAA,IAAAA,EAAA,IAC6Bm+C,EAAAU,eAAAl0E,EACvDsM,EAAArwB,UAAAzB,YACA2rF,OAAAjsE,EAAAznB,EAAA,MAAoD,EAAAu6F,OAKpDyF,EA9aiC,CA+a/BpiF,IAQFmiF,GAA6B,iBAAAxyE,GAC7B,OAAAA,EAAAhd,YAA6B0N,GAAA,EAAShQ,aAUtC8xF,GAA6B,gBAAAlX,EAAAt7D,GAC7B,WAAawyE,GAAqF,IAInF,IAAAqC,GAAA,GC9bXC,GAAG,SAAA/iC,GACP,SAAAgjC,EAAAnpG,IACAA,EAAcnM,OAAA0C,GAAA,EAAA1C,CAAM,GAAGmM,IACvBumE,WACAvmE,EAAAumE,SC3BO,SAAAlqD,GAEP,IAAArc,EAAAqc,GAAA,GAEAkqD,EAAA,IAAqBvU,EAkBrB,YAhBA/2D,IAAA+E,EAAA0mB,MAAA1mB,EAAA0mB,OAEA6/C,EAAAzqE,KAAA,IAAsB81E,GAAI5xE,EAAAopG,oBAG1BnuG,IAAA+E,EAAA0P,QAAA1P,EAAA0P,SAEA62D,EAAAzqE,KAAA,IAAsBu1E,GAAMrxE,EAAAqpG,sBAG5BpuG,IAAA+E,EAAAspG,aACAtpG,EAAAspG,cAEA/iC,EAAAzqE,KAAA,IAAsBmzE,GAAWjvE,EAAAupG,qBAGjChjC,EDKyBijC,IAEzBxpG,EAAAwmE,eACAxmE,EAAAwmE,aEiBO,SAAiBnqD,GAExB,IAAArc,EAAAqc,GAAA,GAEAmqD,EAAA,IAAyBxU,EAEzBgkB,EAAA,IAAoB5C,IAAO,cAkE3B,YAhEAn4E,IAAA+E,EAAAypG,oBACAzpG,EAAAypG,qBAEAjjC,EAAA1qE,KAAA,IAA0B46E,UAG1Bz7E,IAAA+E,EAAA0pG,iBACA1pG,EAAA0pG,kBAEAljC,EAAA1qE,KAAA,IAA0Bo4E,GAAe,CACzCx1D,MAAA1e,EAAA2pG,UACA/kD,SAAA5kD,EAAA4pG,sBAIA3uG,IAAA+E,EAAA6pG,SAAA7pG,EAAA6pG,UAEArjC,EAAA1qE,KAAA,IAA0B+5E,GAAO,CACjCQ,UAAAr2E,EAAA8pG,YAAuCz1B,QAAKp5E,EAC5C+6E,mBAIA/6E,IAAA+E,EAAA+pG,aAAA/pG,EAAA+pG,cAGAvjC,EAAA1qE,KAAA,IAA0Bo/E,UAG1BjgF,IAAA+E,EAAAgqG,WAAAhqG,EAAAgqG,YAEAxjC,EAAA1qE,KAAA,IAA0B+/E,GAAS,CACnCp4B,oBAAAzjD,EAAAyjD,oBACAmB,SAAA5kD,EAAA4pG,sBAIA3uG,IAAA+E,EAAAiqG,UAAAjqG,EAAAiqG,YAEAzjC,EAAA1qE,KAAA,IAA0Bk9E,IAC1BxS,EAAA1qE,KAAA,IAA0Bu9E,GAAY,CACtC36D,MAAA1e,EAAA2pG,UACA/kD,SAAA5kD,EAAA4pG,uBAIA3uG,IAAA+E,EAAAkqG,gBACAlqG,EAAAkqG,iBAEA1jC,EAAA1qE,KAAA,IAA0B09E,GAAc,CACxCnD,UAAAr2E,EAAA8pG,YAAuCz1B,QAAKp5E,EAC5CwoD,oBAAAzjD,EAAAyjD,oBACAmB,SAAA5kD,EAAA4pG,sBAIA3uG,IAAA+E,EAAAmqG,eACAnqG,EAAAmqG,gBAEA3jC,EAAA1qE,KAAA,IAA0Bi8E,GAAQ,CAClCnzB,SAAA5kD,EAAA4pG,gBAIApjC,EFzF6B4jC,IAG7BjkC,EAAA7yE,KAAA2M,KAAAD,GAkBA,OAfAmmE,IAAAgjC,EAAAlmG,UAAAkjE,GACAgjC,EAAAjoG,UAAArN,OAAAqP,OAAAijE,KAAAjlE,WACAioG,EAAAjoG,UAAAiC,YAAAgmG,EAEAA,EAAAjoG,UAAA2nE,eAAA,WACA,IAAA4X,EAAA,IAAuBgL,GAAiBxrF,MAOxC,OANAwgF,EAAAyJ,uBAAA,CACMyF,GACAlrE,GACA4hF,GACA4C,KAENxoB,GAGA0oB,EA5BO,CA6BLjjC,IAGa33E,EAAA","file":"10-99084715e1da19042843.js","sourcesContent":["/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.2';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.EasyRequest = EasyRequest;\r\nexports.parseFeatures = parseFeatures;\r\nexports.getGeometryWKT = getGeometryWKT;\r\n\r\nvar _GeoJSON = _interopRequireDefault(require(\"ol/format/GeoJSON\"));\r\n\r\nvar _WKT = _interopRequireDefault(require(\"ol/format/WKT\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction EasyRequest(url, {\r\n  parameters = {},\r\n  dataType = 'json'\r\n} = {}, requestOptions = {}) {\r\n  // pre formating\r\n  let targetURL = new URL(url);\r\n\r\n  for (let key in parameters) {\r\n    if (parameters.hasOwnProperty(key)) {\r\n      targetURL.searchParams.append(key, parameters[key]);\r\n    }\r\n  }\r\n\r\n  return fetch(targetURL.toString(), requestOptions).then(response => {\r\n    if (dataType === 'json') {\r\n      let res = response.clone();\r\n      return response.json().then(json => json).catch(() => res.text().then(text => {\r\n        const xml = parseXML(text),\r\n              exception = xml.querySelector('ServiceException') || xml.querySelector('ExceptionText');\r\n        if (exception) throw new Error(exception.textContent.trim());\r\n      }));\r\n    }\r\n\r\n    if (dataType === 'xml') {\r\n      return response.text().then(text => {\r\n        const xml = parseXML(text),\r\n              exception = xml.querySelector('ServiceException') || xml.querySelector('ExceptionText');\r\n        if (exception) throw new Error(exception.textContent.trim());\r\n        return xml;\r\n      }).catch(error => {\r\n        throw new Error(error);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction parseXML(text) {\r\n  const parser = new DOMParser();\r\n  return parser.parseFromString(text, 'application/xml');\r\n}\r\n\r\nfunction parseFeatures(geoJson, featureProjection) {\r\n  const dataProjection = geoJson.crs ? 'EPSG:' + geoJson.crs.properties.name.match(/EPSG::(\\d+)/)[1] : null,\r\n        fmt = new _GeoJSON.default({\r\n    dataProjection,\r\n    featureProjection\r\n  });\r\n  return fmt.readFeatures(geoJson);\r\n}\r\n\r\nfunction getGeometryWKT(geom, options) {\r\n  const wktft = new _WKT.default();\r\n  return wktft.writeGeometry(geom, options);\r\n}","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _TileWMS = _interopRequireDefault(require(\"ol/source/TileWMS\"));\r\n\r\nvar _Tile = _interopRequireDefault(require(\"ol/layer/Tile\"));\r\n\r\nvar _wfs = require(\"../wfs\");\r\n\r\nvar _wps = require(\"../wps\");\r\n\r\nvar _wms = require(\"../wms\");\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction GeoserverLayer(lyName, {\r\n  url,\r\n  getMapParams = {},\r\n  crossOrigin,\r\n  visible = true\r\n} = {}, tileLayerOptions) {\r\n  (() => {\r\n    let tlo = tileLayerOptions;\r\n\r\n    if (!tlo) {\r\n      getMapParams = {\r\n        'TILED': true,\r\n        ...getMapParams,\r\n        'LAYERS': lyName\r\n      };\r\n      tlo = {\r\n        visible,\r\n        source: new _TileWMS.default({\r\n          url,\r\n          serverType: \"geoserver\",\r\n          params: getMapParams,\r\n          crossOrigin\r\n        })\r\n      };\r\n    }\r\n\r\n    ;\r\n\r\n    _Tile.default.call(this, tlo);\r\n  })();\r\n}\r\n\r\n;\r\nGeoserverLayer.prototype = Object.create(_Tile.default.prototype);\r\nGeoserverLayer.prototype.constructor = GeoserverLayer;\r\n/*static functions*/\r\n\r\nGeoserverLayer.build = function (tileLayerOptions) {\r\n  return new GeoserverLayer(null, null, tileLayerOptions);\r\n};\r\n/* prototype functions*/\r\n\r\n\r\nconst GeoserverLayerPrototype = GeoserverLayer.prototype;\r\nGeoserverLayerPrototype.refresh = _wms.refresh;\r\nGeoserverLayerPrototype.filter = _wms.filter;\r\nGeoserverLayerPrototype.unfilter = _wms.unfilter;\r\nGeoserverLayerPrototype.getFilter = _wms.getFilter;\r\nGeoserverLayerPrototype.setStyle = _wms.setStyle;\r\nGeoserverLayerPrototype.getStyle = _wms.getStyle;\r\nGeoserverLayerPrototype.getFeatures = _wfs.getFeatures;\r\nGeoserverLayerPrototype.getFeaturesAtCoordinate = _wms.getFeaturesAtCoordinate;\r\nGeoserverLayerPrototype.countFeatures = _wfs.countFeatures;\r\nGeoserverLayerPrototype.getAttributes = _wfs.getAttributes;\r\nGeoserverLayerPrototype.getBBOX = _wps.getBBOX;\r\nGeoserverLayerPrototype.groupBy = _wps.groupBy;\r\nGeoserverLayerPrototype.exportFeatures = _wfs.exportFeatures;\r\nvar _default = GeoserverLayer;\r\nexports.default = _default;","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.countFeatures = countFeatures;\r\nexports.getFeatures = getFeatures;\r\nexports.getAttributes = getAttributes;\r\nexports.exportFeatures = exportFeatures;\r\n\r\nvar _util = require(\"../util\");\r\n\r\n//on every function this references an instance of EasyLayer\r\nfunction getNativeOutputFormat(format) {\r\n  var ft = '';\r\n\r\n  switch (format) {\r\n    case 'csv':\r\n      ft = 'csv';\r\n      break;\r\n\r\n    case 'json':\r\n      ft = 'application/json';\r\n      break;\r\n\r\n    case 'jsonp':\r\n      ft = 'text/javascript';\r\n      break;\r\n\r\n    case 'gml2':\r\n      ft = 'GML2';\r\n      break;\r\n\r\n    case 'gml3':\r\n      ft = 'GML3';\r\n      break;\r\n\r\n    case 'shapefile':\r\n      ft = 'shape-zip';\r\n      break;\r\n\r\n    case 'excel':\r\n      ft = 'excel';\r\n      break;\r\n\r\n    case 'excel2007':\r\n      ft = 'excel2007';\r\n      break;\r\n\r\n    case 'autocad':\r\n      ft = 'dxf';\r\n      break;\r\n  }\r\n\r\n  return ft;\r\n}\r\n\r\nfunction getLayerWFSURL(ely) {\r\n  return ely.getSource().getUrls()[0].replace(/wms/, 'wfs');\r\n}\r\n\r\nfunction inlineJSON(json) {\r\n  let attrs = [];\r\n\r\n  for (let key in json) {\r\n    if (json.hasOwnProperty(key)) {\r\n      attrs.push(`${key}:${json[key]}`);\r\n    }\r\n  }\r\n\r\n  return attrs.join(';');\r\n}\r\n\r\nfunction performDataExporting(url, parameters) {\r\n  let targetURL = new URL(url);\r\n\r\n  for (let key in parameters) {\r\n    if (parameters.hasOwnProperty(key)) {\r\n      targetURL.searchParams.append(key, parameters[key]);\r\n    }\r\n  }\r\n\r\n  window.open(targetURL.toString(), \"_blank\");\r\n}\r\n\r\nfunction countFeatures({\r\n  cql_filter,\r\n  ...restOfGetFeatureParams\r\n} = {}) {\r\n  const url = getLayerWFSURL(this),\r\n        wmsParams = this.getSource().getParams();\r\n  let conds = [];\r\n  let parameters = { ...restOfGetFeatureParams,\r\n    request: 'GetFeature',\r\n    resultType: 'hits',\r\n    typeNames: wmsParams.LAYERS,\r\n    version: '1.1.0'\r\n  };\r\n\r\n  if (this.getFilter()) {\r\n    conds.push(this.getFilter());\r\n  }\r\n\r\n  ;\r\n\r\n  if (cql_filter) {\r\n    conds.push(cql_filter);\r\n  }\r\n\r\n  ;\r\n\r\n  if (conds.length) {\r\n    parameters['cql_filter'] = conds.join(' AND ');\r\n  }\r\n\r\n  ;\r\n  return (0, _util.EasyRequest)(url, {\r\n    parameters,\r\n    dataType: 'xml'\r\n  }).then(xmlDoc => {\r\n    let nof = xmlDoc.querySelector('FeatureCollection').getAttribute(\"numberOfFeatures\");\r\n    return nof;\r\n  });\r\n}\r\n\r\n;\r\n\r\nfunction getFeatures({\r\n  format = 'json',\r\n  dxfSpecificOptions = {},\r\n  exportFeatures = false,\r\n  ...getFeaturesParams\r\n}, featureProjection) {\r\n  const url = getLayerWFSURL(this),\r\n        wmsParams = this.getSource().getParams();\r\n  let parameters = { ...getFeaturesParams,\r\n    version: '2.0.0',\r\n    request: 'GetFeature',\r\n    typeNames: wmsParams.LAYERS,\r\n    outputFormat: getNativeOutputFormat(format)\r\n  };\r\n  dxfSpecificOptions.layers = dxfSpecificOptions.layers || wmsParams.LAYERS;\r\n  dxfSpecificOptions && (parameters.format_options = inlineJSON(dxfSpecificOptions));\r\n\r\n  if (exportFeatures) {\r\n    return performDataExporting(url, parameters);\r\n  }\r\n\r\n  return (0, _util.EasyRequest)(url, {\r\n    parameters\r\n  }).then(data => (0, _util.parseFeatures)(data, featureProjection));\r\n}\r\n\r\nfunction getAttributes() {\r\n  const url = getLayerWFSURL(this),\r\n        wmsParams = this.getSource().getParams();\r\n  let parameters = {\r\n    version: '2.0.0',\r\n    request: 'DescribeFeatureType',\r\n    typename: wmsParams.LAYERS,\r\n    outputFormat: 'application/json'\r\n  };\r\n  return (0, _util.EasyRequest)(url, {\r\n    parameters\r\n  });\r\n}\r\n\r\nfunction exportFeatures(options = {}) {\r\n  const opts = {\r\n    exportFeatures: true,\r\n    format: 'excel',\r\n    ...options\r\n  };\r\n  return getFeatures.call(this, opts, null);\r\n}","\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.groupBy = groupBy;\r\nexports.getBBOX = getBBOX;\r\n\r\nvar _util = require(\"../util\");\r\n\r\nvar _Builder = require(\"./Builder\");\r\n\r\nconst executeNSs = {\r\n  \"xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\r\n  \"xmlns\": \"http://www.opengis.net/wps/1.0.0\",\r\n  \"xmlns:wps\": \"http://www.opengis.net/wps/1.0.0\",\r\n  \"xmlns:wfs\": \"http://www.opengis.net/wfs\",\r\n  \"xmlns:ows\": \"http://www.opengis.net/ows/1.1\",\r\n  \"xmlns:gml\": \"http://www.opengis.net/gml\",\r\n  \"xmlns:ogc\": \"http://www.opengis.net/ogc\",\r\n  \"xmlns:wcs\": \"http://www.opengis.net/wcs/1.1.1\",\r\n  \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\r\n  \"xsi:schemaLocation\": \"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\"\r\n};\r\n\r\nfunction getLayerWPSURL(ely) {\r\n  return ely.getSource().getUrls()[0].replace(/wms/, 'ows');\r\n}\r\n\r\nfunction groupBy({\r\n  aggregationAttribute,\r\n  aggregationFunctions,\r\n  groupByAttributes\r\n}) {\r\n  const url = getLayerWPSURL(this),\r\n        typename = this.getSource().getParams().LAYERS,\r\n        workspace = typename.split(\":\")[0];\r\n  const aggFncs = aggregationFunctions.map(fnc => new _Builder.WPSInput('function', new _Builder.WPSLiteralData(fnc)));\r\n  const gpAttrs = groupByAttributes.map(attr => new _Builder.WPSInput('groupByAttributes', new _Builder.WPSLiteralData(attr)));\r\n  const execute = new _Builder.WPSExecute(\"gs:Aggregate\", {\r\n    \"version\": \"1.0.0\",\r\n    \"service\": \"WPS\",\r\n    ...executeNSs\r\n  }, [new _Builder.WPSInput('features', new _Builder.WPSInputReference({\r\n    complexDataEncoding: {\r\n      \"mimeType\": \"text/xml\"\r\n    },\r\n    \"xlink:href\": \"http://geoserver/wps\",\r\n    \"method\": \"POST\"\r\n  }, [new _Builder.XMLNode(\"wps:Body\", {}, [new _Builder.WPSExecute('gs:Query', {\r\n    \"version\": \"1.0.0\",\r\n    \"service\": \"WPS\"\r\n  }, [new _Builder.WPSInput('features', new _Builder.WPSInputReference({\r\n    complexDataEncoding: {\r\n      \"mimeType\": \"text/xml\"\r\n    },\r\n    \"xlink:href\": \"http://geoserver/wfs\",\r\n    \"method\": \"POST\"\r\n  }, [new _Builder.XMLNode(\"wps:Body\", {}, [new _Builder.WFSGetFeature({\r\n    \"service\": \"WFS\",\r\n    \"version\": \"1.0.0\",\r\n    \"outputFormat\": \"GML2\",\r\n    [`xmlns:${workspace}`]: `${workspace}`\r\n  }, new _Builder.WFSQuery({\r\n    \"typeName\": `${typename}`\r\n  }))])])), new _Builder.WPSInput('filter', new _Builder.WPSComplexData({\r\n    complexDataEncoding: {\r\n      mimeType: 'text/plain; subtype=cql'\r\n    }\r\n  }, `<![CDATA[${this.getFilter() || '1=1'}]]>`))], new _Builder.WPSRawDataOutput('result', {\r\n    complexDataEncoding: {\r\n      mimeType: 'text/xml; subtype=wfs-collection/1.0'\r\n    }\r\n  }))])])), new _Builder.WPSInput('aggregationAttribute', new _Builder.WPSLiteralData(aggregationAttribute)), ...aggFncs, ...gpAttrs], new _Builder.WPSRawDataOutput('result', {\r\n    complexDataEncoding: {\r\n      mimeType: 'application/json'\r\n    }\r\n  }));\r\n  return (0, _util.EasyRequest)(url, {}, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'text/xml;charset=utf-8'\r\n    },\r\n    body: execute.toString()\r\n  });\r\n}\r\n\r\nfunction getBBOX(map) {\r\n  const url = getLayerWPSURL(this),\r\n        typename = this.getSource().getParams().LAYERS,\r\n        workspace = typename.split(\":\")[0];\r\n  const filter = this.getFilter() || '1=1';\r\n  const execute = new _Builder.WPSExecute('gs:Bounds', {\r\n    \"version\": \"1.0.0\",\r\n    \"service\": \"WPS\",\r\n    ...executeNSs\r\n  }, [new _Builder.WPSInput('features', new _Builder.WPSInputReference({\r\n    complexDataEncoding: {\r\n      \"mimeType\": \"text/xml\"\r\n    },\r\n    \"xlink:href\": \"http://geoserver/wps\",\r\n    \"method\": \"POST\"\r\n  }, [new _Builder.XMLNode('wps:Body', {}, [new _Builder.WPSExecute('gs:Query', {\r\n    \"version\": \"1.0.0\",\r\n    \"service\": \"WPS\"\r\n  }, [new _Builder.WPSInput('features', new _Builder.WPSInputReference({\r\n    complexDataEncoding: {\r\n      \"mimeType\": \"text/xml\"\r\n    },\r\n    \"xlink:href\": \"http://geoserver/wfs\",\r\n    \"method\": \"POST\"\r\n  }, [new _Builder.XMLNode('wps:Body', {}, [new _Builder.WFSGetFeature({\r\n    \"service\": \"WFS\",\r\n    \"version\": \"1.0.0\",\r\n    \"outputFormat\": \"GML2\",\r\n    [`xmlns:${workspace}`]: `${workspace}`\r\n  }, new _Builder.WFSQuery({\r\n    \"typeName\": `${typename}`\r\n  }))])])), new _Builder.WPSInput('attribute', new _Builder.WPSLiteralData('geom')), new _Builder.WPSInput('filter', new _Builder.WPSComplexData({\r\n    complexDataEncoding: {\r\n      mimeType: 'text/plain; subtype=cql'\r\n    }\r\n  }, `<![CDATA[${filter}]]>`))], new _Builder.WPSRawDataOutput('result', {\r\n    complexDataEncoding: {\r\n      mimeType: 'text/xml; subtype=wfs-collection/1.0'\r\n    }\r\n  }))])]))], new _Builder.WPSRawDataOutput('bounds'));\r\n  return (0, _util.EasyRequest)(url, {\r\n    dataType: 'xml'\r\n  }, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'text/xml;charset=utf-8'\r\n    },\r\n    body: execute.toString()\r\n  }).then(xml => {\r\n    const crs = xml.getElementsByTagName(\"ows:BoundingBox\")[0].getAttribute(\"crs\"),\r\n          lc = xml.getElementsByTagName(\"ows:LowerCorner\")[0].textContent.split(\" \"),\r\n          uc = xml.getElementsByTagName(\"ows:UpperCorner\")[0].textContent.split(\" \");\r\n    const extent = [parseFloat(lc[0]), parseFloat(lc[1]), parseFloat(uc[0]), parseFloat(uc[1])];\r\n    return {\r\n      extent,\r\n      crs\r\n    };\r\n  });\r\n}","\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.WPSExecute = exports.WPSInputReference = exports.WFSQuery = exports.WFSGetFeature = exports.WPSRawDataOutput = exports.WPSComplexData = exports.WPSLiteralData = exports.WPSInput = exports.XMLNode = void 0;\r\n\r\nclass XMLNode {\r\n  constructor(name, attrs = {}, children = []) {\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n\r\n  append(child) {\r\n    this.children.push(child);\r\n  }\r\n\r\n  setAttribute(key, value) {\r\n    this.attrs[key] = value;\r\n  }\r\n\r\n  toString() {\r\n    const {\r\n      name,\r\n      attrs,\r\n      children\r\n    } = this;\r\n    let arr = [],\r\n        content,\r\n        attrsLine;\r\n\r\n    for (let key in attrs) {\r\n      if (attrs.hasOwnProperty(key)) {\r\n        arr.push(`${key}=\"${attrs[key]}\"`);\r\n      }\r\n    }\r\n\r\n    content = children.map(c => c.toString()).join('');\r\n    attrsLine = arr.join(' ');\r\n    attrsLine = attrsLine ? ' ' + attrsLine : '';\r\n    return `<${name}${attrsLine}>${content}</${name}>`;\r\n  }\r\n\r\n}\r\n\r\nexports.XMLNode = XMLNode;\r\n\r\nclass WPSInput extends XMLNode {\r\n  constructor(identifier, inputDataFormChoice) {\r\n    super('wps:Input', {}, [new XMLNode('ows:Identifier', {}, [identifier]), inputDataFormChoice]);\r\n  }\r\n\r\n}\r\n\r\nexports.WPSInput = WPSInput;\r\n\r\nclass WPSLiteralData extends XMLNode {\r\n  constructor(literalData) {\r\n    super('wps:Data', {}, [new XMLNode('wps:LiteralData', {}, [literalData])]);\r\n  }\r\n\r\n}\r\n\r\nexports.WPSLiteralData = WPSLiteralData;\r\n\r\nclass WPSComplexData extends XMLNode {\r\n  constructor({\r\n    complexDataEncoding\r\n  } = {}, complexData) {\r\n    super('wps:Data', {}, [new XMLNode('wps:ComplexData', { ...complexDataEncoding\r\n    }, [complexData])]);\r\n  }\r\n\r\n}\r\n\r\nexports.WPSComplexData = WPSComplexData;\r\n\r\nclass WPSRawDataOutput extends XMLNode {\r\n  constructor(identifier, {\r\n    complexDataEncoding = {},\r\n    ...restProps\r\n  } = {}) {\r\n    super('wps:ResponseForm', {}, [new XMLNode('wps:RawDataOutput', { ...complexDataEncoding,\r\n      ...restProps\r\n    }, [new XMLNode('ows:Identifier', {}, [identifier])])]);\r\n  }\r\n\r\n}\r\n\r\nexports.WPSRawDataOutput = WPSRawDataOutput;\r\n\r\nclass WFSGetFeature extends XMLNode {\r\n  constructor(props, query) {\r\n    super('wfs:GetFeature', props, [query]);\r\n  }\r\n\r\n}\r\n\r\nexports.WFSGetFeature = WFSGetFeature;\r\n\r\nclass WFSQuery extends XMLNode {\r\n  constructor(props) {\r\n    super('wfs:Query', props);\r\n  }\r\n\r\n}\r\n\r\nexports.WFSQuery = WFSQuery;\r\n\r\nclass WPSInputReference extends XMLNode {\r\n  constructor({\r\n    complexDataEncoding,\r\n    ...restProps\r\n  } = {}, children) {\r\n    super('wps:Reference', { ...complexDataEncoding,\r\n      ...restProps\r\n    }, children);\r\n  }\r\n\r\n}\r\n\r\nexports.WPSInputReference = WPSInputReference;\r\n\r\nclass WPSExecute extends XMLNode {\r\n  constructor(identifier, props, inputs, output) {\r\n    super('wps:Execute', props, [new XMLNode('ows:Identifier', {}, [identifier]), new XMLNode('wps:DataInputs', {}, inputs), output]);\r\n  }\r\n\r\n}\r\n\r\nexports.WPSExecute = WPSExecute;","\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.refresh = refresh;\r\nexports.filter = filter;\r\nexports.unfilter = unfilter;\r\nexports.getFilter = getFilter;\r\nexports.setStyle = setStyle;\r\nexports.getStyle = getStyle;\r\nexports.getFeaturesAtCoordinate = getFeaturesAtCoordinate;\r\n\r\nvar _util = require(\"../util\");\r\n\r\nfunction getGetFeatureInfoURLAtCoordinate(ely, coordinate, map) {\r\n  let mapView = map.getView(),\r\n      getFeatureInfoParams = {};\r\n\r\n  if (ely.getFilter()) {\r\n    getFeatureInfoParams['CQL_FILTER'] = ely.getFilter();\r\n  }\r\n\r\n  let url = ely.getSource().getGetFeatureInfoUrl(coordinate, mapView.getResolution(), mapView.getProjection(), getFeatureInfoParams);\r\n  return url;\r\n}\r\n\r\nfunction refresh() {\r\n  this.getSource().refresh();\r\n}\r\n\r\nfunction filter(cql_filter) {\r\n  if (cql_filter) {\r\n    this.getSource().updateParams({\r\n      'CQL_FILTER': cql_filter\r\n    });\r\n  } else {\r\n    this.unfilter();\r\n  }\r\n\r\n  ;\r\n}\r\n\r\nfunction unfilter() {\r\n  delete this.getSource().getParams()['CQL_FILTER'];\r\n  this.getSource().updateParams();\r\n}\r\n\r\nfunction getFilter() {\r\n  return this.getSource().getParams()[\"CQL_FILTER\"] || '';\r\n}\r\n\r\nfunction setStyle(style) {\r\n  this.getSource().updateParams({\r\n    'STYLES': style\r\n  });\r\n}\r\n\r\nfunction getStyle() {\r\n  return this.getSource().getParams()[\"STYLES\"] || '';\r\n}\r\n\r\nfunction getFeaturesAtCoordinate(coordinate, map) {\r\n  return (0, _util.EasyRequest)(getGetFeatureInfoURLAtCoordinate(this, coordinate, map), {\r\n    parameters: {\r\n      'INFO_FORMAT': 'application/json'\r\n    }\r\n  }).then(data => (0, _util.parseFeatures)(data, map.getView().getProjection().getCode()));\r\n}","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tvar insertHighlightedCode = function (highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (Array.isArray(o)) {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+?[\\s\\S]*?(?:;|(?=\\s*\\{))/i,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': RegExp('url\\\\((?:' + string.source + '|.*?)\\\\)', 'i'),\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\\d+n|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\${[^}]+}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {Element} [container=document]\n\t */\n\tself.Prism.fileHighlight = function(container) {\n\t\tcontainer = container || document;\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t// ignore if already loaded\n\t\t\tif (pre.hasAttribute('data-src-loaded')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// load current\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute('data-src-loaded', '');\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\n\t\tif (Prism.plugins.toolbar) {\n\t\t\tPrism.plugins.toolbar.registerButton('download-file', function (env) {\n\t\t\t\tvar pre = env.element.parentNode;\n\t\t\t\tif (!pre || !/pre/i.test(pre.nodeName) || !pre.hasAttribute('data-src') || !pre.hasAttribute('data-download-link')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\t\t\t\tvar a = document.createElement('a');\n\t\t\t\ta.textContent = pre.getAttribute('data-download-link-label') || 'Download';\n\t\t\t\ta.setAttribute('download', '');\n\t\t\t\ta.href = src;\n\t\t\t\treturn a;\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t// execute inside handler, for dropping Event as argument\n\t\tself.Prism.fileHighlight();\n\t});\n\n})();\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"fluid\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, fluid ? 'container-fluid' : 'container'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /*@__PURE__*/(function (TileImage) {\n  function TileWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    var params = options.params || {};\n\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getGutter = function getGutter () {\n    return this.gutter_;\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      var tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  };\n\n  /**\n   * @private\n   */\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return TileWMS;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileWMS;\n\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/format/TextFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function TextFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) TextFeature.__proto__ = FeatureFormat;\n  TextFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  TextFeature.prototype.constructor = TextFeature;\n\n  /**\n   * @inheritDoc\n   */\n  TextFeature.prototype.getType = function getType () {\n    return FormatType.TEXT;\n  };\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  TextFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  TextFeature.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  TextFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  TextFeature.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  TextFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  TextFeature.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  TextFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromText(getText(source));\n  };\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  TextFeature.prototype.readProjectionFromText = function readProjectionFromText (text) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  TextFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  TextFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  TextFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return abstract();\n  };\n\n  return TextFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n\n//# sourceMappingURL=TextFeature.js.map","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = function Lexer(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function isAlpha_ (c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *   contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function isNumeric_ (c, opt_decimal) {\n  var decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function isWhiteSpace_ (c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function nextChar_ () {\n  return this.wkt.charAt(++this.index_);\n};\n\n/**\n * Fetch and return the next token.\n * @return {!Token} Next string token.\n */\nLexer.prototype.nextToken = function nextToken () {\n  var c = this.nextChar_();\n  var position = this.index_;\n  /** @type {number|string} */\n  var value = c;\n  var type;\n\n  if (c == '(') {\n    type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    type = TokenType.COMMA;\n  } else if (c == ')') {\n    type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    type = TokenType.NUMBER;\n    value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    type = TokenType.TEXT;\n    value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return {position: position, value: value, type: type};\n};\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function readNumber_ () {\n  var c;\n  var index = this.index_;\n  var decimal = false;\n  var scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function readText_ () {\n  var c;\n  var index = this.index_;\n  do {\n    c = this.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = function Parser(lexer) {\n\n  /**\n   * @type {Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function consume_ () {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function isTokenType (type) {\n  var isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n/**\n * If the given type matches the current token, consume it.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function match (type) {\n  var isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {import(\"../geom/Geometry.js\").default} The geometry.\n */\nParser.prototype.parse = function parse () {\n  this.consume_();\n  var geometry = this.parseGeometry_();\n  return geometry;\n};\n\n/**\n * Try to parse the dimensional info.\n * @return {GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function parseGeometryLayout_ () {\n  var layout = GeometryLayout.XY;\n  var dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    var dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n/**\n * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function parseGeometryCollectionText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var geometries = [];\n    do {\n      geometries.push(this.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {Array<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function parsePointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function parseLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function parsePolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function parseMultiPointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All linestring points\n *                                        in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function parseMultiLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function parseMultiPolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function parsePoint_ () {\n  var coordinates = [];\n  var dimensions = this.layout_.length;\n  for (var i = 0; i < dimensions; ++i) {\n    var token = this.token_;\n    if (this.match(TokenType.NUMBER)) {\n      coordinates.push(/** @type {number} */ (token.value));\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function parsePointList_ () {\n  var coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePoint_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function parsePointTextList_ () {\n  var coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePointText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function parseLineStringTextList_ () {\n  var coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function parsePolygonTextList_ () {\n  var coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function isEmptyGeometry_ () {\n  var isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function formatErrorMessage_ () {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n/**\n * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function parseGeometry_ () {\n  var token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    var geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == 'GEOMETRYCOLLECTION') {\n      var geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      var ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      var coordinates;\n      switch (geomType) {\n        case 'POINT': {\n          coordinates = this.parsePointText_();\n          break;\n        }\n        case 'LINESTRING': {\n          coordinates = this.parseLineStringText_();\n          break;\n        }\n        case 'POLYGON': {\n          coordinates = this.parsePolygonText_();\n          break;\n        }\n        case 'MULTIPOINT': {\n          coordinates = this.parseMultiPointText_();\n          break;\n        }\n        case 'MULTILINESTRING': {\n          coordinates = this.parseMultiLineStringText_();\n          break;\n        }\n        case 'MULTIPOLYGON': {\n          coordinates = this.parseMultiPolygonText_();\n          break;\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n      }\n\n      if (!coordinates) {\n        if (ctor === GeometryConstructor['POINT']) {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      }\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = /*@__PURE__*/(function (TextFeature) {\n  function WKT(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  if ( TextFeature ) WKT.__proto__ = TextFeature;\n  WKT.prototype = Object.create( TextFeature && TextFeature.prototype );\n  WKT.prototype.constructor = WKT;\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default|undefined}\n   *     The geometry created.\n   * @private\n   */\n  WKT.prototype.parse_ = function parse_ (wkt) {\n    var lexer = new Lexer(wkt);\n    var parser = new Parser(lexer);\n    return parser.parse();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      var feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var geometries = [];\n    var geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      var feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var geometry = this.parse_(text);\n    if (geometry) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options))\n      );\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    var geometries = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    var collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return encode(/** @type {import(\"../geom/Geometry.js\").default} */ (\n      transformWithOptions(geometry, true, opt_options)));\n  };\n\n  return WKT;\n}(TextFeature));\n\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  var array = [];\n  var components = geom.getPoints();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  var array = [];\n  var geoms = geom.getGeometries();\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  var array = [];\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  var array = [];\n  var components = geom.getLineStrings();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  var array = [];\n  var rings = geom.getLinearRings();\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  var array = [];\n  var components = geom.getPolygons();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  var layout = geom.getLayout();\n  var dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  var type = geom.getType();\n  var geometryEncoder = GeometryEncoder[type];\n  var enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n    var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if ((this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) ||\n              this.renderedRevision != sourceRevision) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map"],"sourceRoot":""}